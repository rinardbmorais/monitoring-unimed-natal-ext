{"version":3,"file":"module.js","mappings":"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","sources":["webpack://grafana-polystat-panel/../node_modules/semver/classes/comparator.js","webpack://grafana-polystat-panel/../node_modules/semver/classes/range.js","webpack://grafana-polystat-panel/../node_modules/semver/classes/semver.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/clean.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/cmp.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/coerce.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/compare-build.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/compare-loose.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/compare.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/diff.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/eq.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/gt.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/gte.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/inc.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/lt.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/lte.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/major.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/minor.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/neq.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/parse.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/patch.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/prerelease.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/rcompare.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/rsort.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/satisfies.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/sort.js","webpack://grafana-polystat-panel/../node_modules/semver/functions/valid.js","webpack://grafana-polystat-panel/../node_modules/semver/index.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/constants.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/debug.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/identifiers.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/lrucache.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/parse-options.js","webpack://grafana-polystat-panel/../node_modules/semver/internal/re.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/gtr.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/intersects.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/ltr.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/max-satisfying.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/min-satisfying.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/min-version.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/outside.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/simplify.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/subset.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/to-comparators.js","webpack://grafana-polystat-panel/../node_modules/semver/ranges/valid.js","webpack://grafana-polystat-panel/external amd \"@emotion/css\"","webpack://grafana-polystat-panel/external amd \"@grafana/data\"","webpack://grafana-polystat-panel/external amd \"@grafana/runtime\"","webpack://grafana-polystat-panel/external amd \"@grafana/ui\"","webpack://grafana-polystat-panel/external amd \"d3\"","webpack://grafana-polystat-panel/external amd \"lodash\"","webpack://grafana-polystat-panel/external amd \"module\"","webpack://grafana-polystat-panel/external amd \"react\"","webpack://grafana-polystat-panel/../node_modules/classnames/index.js","webpack://grafana-polystat-panel/webpack/bootstrap","webpack://grafana-polystat-panel/webpack/runtime/compat get default export","webpack://grafana-polystat-panel/webpack/runtime/define property getters","webpack://grafana-polystat-panel/webpack/runtime/hasOwnProperty shorthand","webpack://grafana-polystat-panel/webpack/runtime/make namespace object","webpack://grafana-polystat-panel/webpack/runtime/publicPath","webpack://grafana-polystat-panel/./node_modules/grafana-public-path.js","webpack://grafana-polystat-panel/./components/types.ts","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/native.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/rng.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/stringify.js","webpack://grafana-polystat-panel/../node_modules/uuid/dist/esm-browser/v4.js","webpack://grafana-polystat-panel/./components/thresholds/types.ts","webpack://grafana-polystat-panel/./components/thresholds/ThresholdItem.tsx","webpack://grafana-polystat-panel/./components/gradients/color.ts","webpack://grafana-polystat-panel/./components/defaults.ts","webpack://grafana-polystat-panel/./components/thresholds/ThresholdsEditor.tsx","webpack://grafana-polystat-panel/./components/metric_hints.ts","webpack://grafana-polystat-panel/./components/overrides/OverrideItem.tsx","webpack://grafana-polystat-panel/./components/overrides/OverrideEditor.tsx","webpack://grafana-polystat-panel/../node_modules/d3-hexbin/src/hexbin.js","webpack://grafana-polystat-panel/../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs","webpack://grafana-polystat-panel/../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","webpack://grafana-polystat-panel/../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","webpack://grafana-polystat-panel/../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","webpack://grafana-polystat-panel/../node_modules/react-tooltip/dist/react-tooltip.min.mjs","webpack://grafana-polystat-panel/./components/gradients/Gradients.tsx","webpack://grafana-polystat-panel/./components/layout/layoutManager.ts","webpack://grafana-polystat-panel/./components/styles.ts","webpack://grafana-polystat-panel/./components/tooltips/Tooltip.tsx","webpack://grafana-polystat-panel/./utils.ts","webpack://grafana-polystat-panel/./components/auto_font_scaler.ts","webpack://grafana-polystat-panel/./components/Polystat.tsx","webpack://grafana-polystat-panel/./components/alignment.ts","webpack://grafana-polystat-panel/./data/deframer.ts","webpack://grafana-polystat-panel/./data/threshold_processor.ts","webpack://grafana-polystat-panel/./data/clickThroughTransformer.ts","webpack://grafana-polystat-panel/./data/types.ts","webpack://grafana-polystat-panel/./data/time_formatter.ts","webpack://grafana-polystat-panel/./data/composite_processor.ts","webpack://grafana-polystat-panel/./data/stats.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v7/valueMappings.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v8/types/valueMappings.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/v8/valueMappings.ts","webpack://grafana-polystat-panel/./data/valueMappingsWrapper/index.ts","webpack://grafana-polystat-panel/./data/override_processor.ts","webpack://grafana-polystat-panel/./data/processor.ts","webpack://grafana-polystat-panel/./components/PolystatPanel.tsx","webpack://grafana-polystat-panel/./components/composites/types.ts","webpack://grafana-polystat-panel/./components/composites/CompositeMetricItem.tsx","webpack://grafana-polystat-panel/./components/composites/CompositeItem.tsx","webpack://grafana-polystat-panel/./components/composites/CompositeEditor.tsx","webpack://grafana-polystat-panel/./components/thresholds/GlobalThresholdEditor.tsx","webpack://grafana-polystat-panel/./migrations.ts","webpack://grafana-polystat-panel/./module.ts","webpack://grafana-polystat-panel/./components/suggestions.ts"],"sourcesContent":["const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","const SPACE_CHARACTERS = /\\s+/g\n\n// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.formatted = undefined\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.formatted = undefined\n  }\n\n  get range () {\n    if (this.formatted === undefined) {\n      this.formatted = ''\n      for (let i = 0; i < this.set.length; i++) {\n        if (i > 0) {\n          this.formatted += '||'\n        }\n        const comps = this.set[i]\n        for (let k = 0; k < comps.length; k++) {\n          if (k > 0) {\n            this.formatted += ' '\n          }\n          this.formatted += comps[k].toString().trim()\n        }\n      }\n    }\n    return this.formatted\n  }\n\n  format () {\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n","// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n","const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","module.exports = __WEBPACK_EXTERNAL_MODULE__6089__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7781__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8531__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2007__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4201__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3241__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1308__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5959__;","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = '';\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (arg) {\n\t\t\t\tclasses = appendClass(classes, parseValue(arg));\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction parseValue (arg) {\n\t\tif (typeof arg === 'string' || typeof arg === 'number') {\n\t\t\treturn arg;\n\t\t}\n\n\t\tif (typeof arg !== 'object') {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (Array.isArray(arg)) {\n\t\t\treturn classNames.apply(null, arg);\n\t\t}\n\n\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\treturn arg.toString();\n\t\t}\n\n\t\tvar classes = '';\n\n\t\tfor (var key in arg) {\n\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\tclasses = appendClass(classes, key);\n\t\t\t}\n\t\t}\n\n\t\treturn classes;\n\t}\n\n\tfunction appendClass (value, newClass) {\n\t\tif (!newClass) {\n\t\t\treturn value;\n\t\t}\n\t\n\t\tif (value) {\n\t\t\treturn value + ' ' + newClass;\n\t\t}\n\t\n\t\treturn value + newClass;\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"public/plugins/grafana-polystat-panel/\";","\nimport amdMetaModule from 'amd-module';\n\n__webpack_public_path__ =\n  amdMetaModule && amdMetaModule.uri\n    ? amdMetaModule.uri.slice(0, amdMetaModule.uri.lastIndexOf('/') + 1)\n    : 'public/plugins/grafana-polystat-panel/';\n","import { SelectableValue } from '@grafana/data';\nimport { CompositeItemType } from 'components/composites/types';\nimport { OverrideItemType } from './overrides/types';\nimport { PolystatThreshold } from './thresholds/types';\n\nexport interface PolystatOptions {\n  autoSizeColumns: boolean;\n  autoSizeRows: boolean;\n  autoSizePolygons: boolean;\n  ellipseCharacters: number;\n  ellipseEnabled: boolean;\n  globalAutoScaleFonts: boolean;\n  globalClickthrough: string;\n  globalClickthroughNewTabEnabled: boolean;\n  globalClickthroughSanitizedEnabled: boolean;\n  globalClickthroughCustomTargetEnabled: boolean;\n  globalClickthroughCustomTarget: string;\n  globalDecimals: number;\n  globalDisplayMode: string;\n  globalDisplayTextTriggeredEmpty: string;\n  globalFillColor: string;\n  globalFontSize: number;\n  globalGradientsEnabled: boolean;\n  globalOperator: string;\n  globalPolygonBorderSize: number;\n  globalPolygonBorderColor: string;\n  globalPolygonSize: number;\n  globalRegexPattern: string;\n  globalShape: PolygonShapes;\n  globalShowValueEnabled: boolean;\n  globalShowTimestampEnabled: boolean;\n  globalShowTimestampFormat: string;\n  globalShowTimestampFontSize: number;\n  globalShowTimestampPosition: TimestampPositions;\n  globalShowTimestampYOffset: number;\n  globalShowTooltipColumnHeadersEnabled: boolean;\n  globalTextFontAutoColor: string;\n  globalTextFontAutoColorEnabled: boolean;\n  globalTextFontColor: string;\n  globalTextFontFamily: string;\n  globalThresholdsConfig: PolystatThreshold[];\n  globalTooltipsEnabled: boolean;\n  globalTooltipsShowTimestampEnabled: boolean;\n  globalTooltipsShowValueEnabled: boolean;\n  globalTooltipsFontFamily: string,\n  globalUnitFormat: string;\n  layoutDisplayLimit: number;\n  layoutNumColumns: number;\n  layoutNumRows: number;\n  processedData?: PolystatModel[] | null;\n  panelHeight: any;\n  panelWidth: any;\n  panelId: number;\n  radius: number | null;\n  renderTime?: Date;\n  sortByField: string;\n  sortByDirection: number;\n  overrideConfig: {\n    overrides: OverrideItemType[];\n  };\n  compositeGlobalAliasingEnabled: boolean;\n  compositeConfig: {\n    animationSpeed: string;\n    composites: CompositeItemType[];\n    enabled: boolean;\n  };\n  tooltipPrimarySortDirection: number;\n  tooltipPrimarySortByField: string;\n  tooltipSecondarySortDirection: number;\n  tooltipSecondarySortByField: string;\n  tooltipDisplayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n}\n\nexport interface PolystatModel {\n  displayMode?: string;\n  thresholdLevel?: number; // 0 = ok, 1 = warn, 2 = crit, 3 = unknown (same as sensu)\n  value: number;\n  valueFormatted: string;\n  valueRounded: number;\n  stats: any;\n  name: string;\n  displayName: string; // Used for composites\n  timestamp: number;\n  prefix: string;\n  suffix: string;\n  color: string;\n  clickThrough: string;\n  operatorName: string;\n  newTabEnabled: boolean;\n  customClickthroughTargetEnabled: boolean;\n  customClickthroughTarget: string;\n  sanitizedURL: string;\n  sanitizeURLEnabled: boolean;\n  showName: boolean;\n  showValue: boolean;\n  showTimestamp: boolean;\n  timestampFormatted: string;\n  isComposite: boolean;\n  members: PolystatModel[];\n  triggerCache?: any; // holds animation frame info\n}\n\nexport enum PolygonShapes {\n  HEXAGON_POINTED_TOP = 'hexagon_pointed_top',\n  CIRCLE = 'circle',\n  SQUARE = 'square',\n}\n\nexport const PolygonNamedShapes = [\n  { value: 'hexagon_pointed_top', label: 'Hexagon Pointed Top' },\n  { value: 'circle', label: 'Circle' },\n  { value: 'square', label: 'Square' },\n];\n\nexport interface PolystatDiameters {\n  diameterX: number;\n  diameterY: number;\n}\n\nexport const OperatorOptions: SelectableValue[] = [\n  { value: 'mean', label: 'Mean (avg)' },\n  { value: 'sum', label: 'Sum' },\n  { value: 'min', label: 'Min' },\n  { value: 'max', label: 'Max' },\n  { value: 'last', label: 'Last' },\n  { value: 'lastNotNull', label: 'Last Not Null' },\n  { value: 'first', label: 'First' },\n  { value: 'firstNotNull', label: 'First Not Null' },\n  { value: 'count', label: 'Count' },\n  { value: 'allIsNull', label: 'All Is Null (boolean)' },\n  { value: 'allIsZero', label: 'All Is Zero (boolean)' },\n  { value: 'delta', label: 'Delta' },\n  { value: 'diff', label: 'Difference' },\n  { value: 'diffperc', label: 'Difference (Percent)' },\n  { value: 'last_time', label: 'Time of Last Point' },\n  { value: 'logmin', label: 'Log Min' },\n  { value: 'name', label: 'Name' },\n  { value: 'nonNullCount', label: 'Non Null Count' },\n  { value: 'previousDeltaUp', label: 'Previous Delta Up' },\n  { value: 'range', label: 'Range' },\n  { value: 'step', label: 'Step' },\n];\n\nexport const SortOptions = [\n  { value: 0, label: 'Disabled' },\n  { value: 1, label: 'Alphabetical (asc)' },\n  { value: 2, label: 'Alphabetical (desc)' },\n  { value: 3, label: 'Numerical (asc)' },\n  { value: 4, label: 'Numerical (desc)' },\n  { value: 5, label: 'Alphabetical (case-insensitive, asc)' },\n  { value: 6, label: 'Alphabetical (case-insensitive, desc)' },\n  { value: 7, label: 'Natural sort (asc)' },\n  { value: 8, label: 'Natural sort (desc)' },\n];\n\nexport const SortOptionOperators = ['disabled', 'asc', 'desc', 'asc', 'desc', 'iasc', 'idesc'];\n\nexport const SortByFieldOptions = [\n  { value: 'name', label: 'Name' },\n  { value: 'thresholdLevel', label: 'Threshold Level' },\n  { value: 'value', label: 'Value' },\n];\n\nexport const DisplayModes = [\n  { value: 'all', label: 'Show All' },\n  { value: 'triggered', label: 'Show Triggered' },\n];\n\nexport const AnimationModes = [\n  { value: 'all', text: 'Show All' },\n  { value: 'triggered', text: 'Show Triggered' },\n];\n\nexport enum FontFamilies {\n  ARIAL = 'Arial',\n  HELVETICA = 'Helvetica',\n  HELVETICA_NEUE = 'Helvetica Neue',\n  INTER = 'Inter',\n  ROBOTO = 'Roboto',\n  ROBOTO_MONO = 'Roboto Mono',\n}\n\nexport const FontFamilyOptions = [\n  { value: FontFamilies.ARIAL, label: 'Arial' },\n  { value: FontFamilies.HELVETICA, label: 'Helvetica' },\n  { value: FontFamilies.HELVETICA_NEUE, label: 'Helvetica Neue' },\n  { value: FontFamilies.INTER, label: 'Inter' },\n  { value: FontFamilies.ROBOTO_MONO, label: 'Roboto Mono' },\n];\nexport const FontFamilyOptionsLegacy = [\n  { value: FontFamilies.ARIAL, label: 'Arial' },\n  { value: FontFamilies.HELVETICA, label: 'Helvetica' },\n  { value: FontFamilies.HELVETICA_NEUE, label: 'Helvetica Neue' },\n  { value: FontFamilies.ROBOTO, label: 'Roboto' },\n  { value: FontFamilies.ROBOTO_MONO, label: 'Roboto Mono' },\n];\n\nexport const ShowTimestampFormats = [\n  { value: 'HH:mm:ss', label: 'HH:mm:ss' },\n  { value: 'YYYY-MM-DD HH:mm', label: 'YYYY-MM-DD HH:mm' },\n  { value: 'YYYY-MM-DD HH:mm:ss', label: 'YYYY-MM-DD HH:mm:ss' },\n  { value: 'YYYY-MM-DD HH:mm:ss.SSS', label: 'YYYY-MM-DD HH:mm:ss.SSS' },\n  { value: 'MM/DD/YY h:mm:ss a', label: 'MM/DD/YY h:mm:ss a' },\n  { value: 'MMMM D, YYYY LT', label: 'MMMM D, YYYY LT' },\n  { value: 'YYYY-MM-DD', label: 'YYYY-MM-DD' },\n];\n\nexport enum TimestampPositions {\n  BELOW_VALUE = 'below_value',\n  ABOVE_VALUE = 'above_value',\n}\n\nexport const ShowTimestampPositions = [\n  { value: TimestampPositions.ABOVE_VALUE, label: 'Above Value' },\n  { value: TimestampPositions.BELOW_VALUE, label: 'Below Value' },\n];\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import { SelectableValue } from '@grafana/data';\n\nexport interface PolystatThreshold {\n  color: string;\n  state: number;\n  value: number;\n}\n\nexport interface ThresholdItemTracker {\n  threshold: PolystatThreshold;\n  order: number;\n  ID: string;\n}\n\nexport const ThresholdStates: SelectableValue[] = [\n  { value: 0, label: 'ok' },\n  { value: 1, label: 'warning' },\n  { value: 2, label: 'critical' },\n  { value: 3, label: 'custom' },\n];\n","import React, { useState } from 'react';\nimport { GrafanaTheme2, SelectableValue } from '@grafana/data';\nimport { Input, ColorPicker, IconButton, useStyles2, Select } from '@grafana/ui';\nimport { css } from '@emotion/css';\n\nimport { PolystatThreshold, ThresholdStates } from './types';\n\ninterface ThresholdItemProps {\n  threshold: PolystatThreshold;\n  key: string;\n  ID: string;\n  valueSetter: any;\n  colorSetter: any;\n  stateSetter: any;\n  remover: any;\n  index: number;\n  disabled: boolean;\n}\n\nexport const ThresholdItem: React.FC<ThresholdItemProps> = (options: ThresholdItemProps) => {\n  const styles = useStyles2(getThresholdStyles);\n  const getThreshold = (thresholdId: number) => {\n    const keys = ThresholdStates.keys();\n    for (const aKey of keys) {\n      if (ThresholdStates[aKey].value === thresholdId) {\n        return ThresholdStates[aKey];\n      }\n    }\n    // no match, return current by default\n    return ThresholdStates[0];\n  };\n\n  const [threshold, setThreshold] = useState<SelectableValue>(getThreshold(options.threshold.state));\n\n  return (\n    <Input\n      disabled={options.disabled}\n      type=\"number\"\n      step=\"1.0\"\n      key={options.ID}\n      onChange={(e) => options.valueSetter(options.index, Number(e.currentTarget.value))}\n      value={options.threshold.value}\n      prefix={\n        <div className={styles.inputPrefix}>\n          <div className={styles.colorPicker}>\n            <ColorPicker\n              color={options.threshold.color}\n              onChange={(color) => options.colorSetter(options.index, color)}\n              enableNamedColors={true}\n            />\n          </div>\n        </div>\n      }\n      suffix={\n        <>\n          <Select\n            disabled={options.disabled}\n            menuShouldPortal={true}\n            value={threshold}\n            onChange={(v) => {\n              setThreshold(v);\n              options.stateSetter(options.index, v.value);\n            }}\n            options={ThresholdStates}\n          />\n          <IconButton\n            disabled={options.disabled}\n            key=\"deleteThreshold\"\n            variant=\"destructive\"\n            name=\"trash-alt\"\n            tooltip=\"Delete Threshold\"\n            onClick={() => options.remover(options.index)}\n          />\n        </>\n      }\n    />\n  );\n};\n\nconst getThresholdStyles = (theme: GrafanaTheme2) => {\n  return {\n    inputPrefix: css`\n      display: flex;\n      align-items: center;\n    `,\n    colorPicker: css`\n      padding: 0 ${theme.spacing(1)};\n    `,\n  };\n};\n","/*\n  Generic class to provide gradient colors\n\n  Based on https://codepen.io/anon/pen/wWxGkr\n\n*/\nexport class Color {\n  r: number;\n  g: number;\n  b: number;\n\n  constructor(r: number, g: number, b: number) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  asHex() {\n    return '#' + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1);\n  }\n\n  asRGB() {\n    return 'rgb(' + this.r + ',' + this.g + ',' + this.b + ')';\n  }\n\n  blendWith(col: Color, a: number) {\n    const r = Math.round(col.r * (1 - a) + this.r * a);\n    const g = Math.round(col.g * (1 - a) + this.g * a);\n    const b = Math.round(col.b * (1 - a) + this.b * a);\n    return new Color(r, g, b);\n  }\n\n  Mul(col: Color, a: number) {\n    const r = Math.round((col.r / 255) * this.r * a);\n    const g = Math.round((col.g / 255) * this.g * a);\n    const b = Math.round((col.b / 255) * this.b * a);\n    return new Color(r, g, b);\n  }\n\n  RGBToHex(rgb: any) {\n    let sep = rgb.indexOf(',') > -1 ? ',' : ' ';\n    rgb = rgb.substr(4).split(')')[0].split(sep);\n    // Convert %s to 0–255\n    for (let R in rgb) {\n      let r = rgb[R];\n      if (r.indexOf('%') > -1) {\n        rgb[R] = Math.round((r.substr(0, r.length - 1) / 100) * 255);\n      }\n    }\n  }\n\n  static RGBAToHex(orig: string) {\n    const rgb = orig.replace(/\\s/g, '').match(/^rgba?\\((\\d+),(\\d+),(\\d+),?([^,\\s)]+)?/i);\n    const alpha = ((rgb && rgb[4]) || '').trim();\n    let hex = rgb\n      ? (parseInt(rgb[1], 10) | (1 << 8)).toString(16).slice(1) +\n        (parseInt(rgb[2], 10) | (1 << 8)).toString(16).slice(1) +\n        (parseInt(rgb[3], 10) | (1 << 8)).toString(16).slice(1)\n      : orig;\n\n    let a = '1';\n    if (alpha !== '') {\n      const alphaVal = parseFloat(alpha);\n      // multiply before convert to HEX\n      a = ((alphaVal * 255) | (1 << 8)).toString(16).slice(1);\n    }\n    return '#' + hex + a;\n  }\n\n  fromHex(hex: string) {\n    // http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\n    hex = hex.substring(1, 7);\n    const bigint = parseInt(hex, 16);\n    this.r = (bigint >> 16) & 255;\n    this.g = (bigint >> 8) & 255;\n    this.b = bigint & 255;\n  }\n}\n","import { Color } from './gradients/color';\nimport { FontFamilies } from './types';\n\n/**\n * Color to use when rendering without any thresholds/overrides\n */\nexport const GLOBAL_FILL_COLOR_RGBA = 'rgba(10, 85, 161, 1)'; // \"#0a55a1\"\nexport const GLOBAL_FILL_COLOR_HEX = '#0a55a1';\nexport const GLOBAL_FILL_COLOR = new Color(10, 85, 161);\n\nexport const GLOBAL_BORDER_COLOR_RGBA = 'rgba(0, 0, 0, 0)'; // \"#000000\"\n/**\n * Color for threshold OK state\n */\nexport const DEFAULT_OK_COLOR_RGBA = 'rgba(41, 156, 70, 1))'; // #299c46\nexport const DEFAULT_OK_COLOR_HEX = '#299c46';\nexport const DEFAULT_OK_COLOR = new Color(41, 156, 70);\n/**\n * Color for threshold Warning state\n */\nexport const DEFAULT_WARNING_COLOR_RGBA = 'rgba(237, 129, 40, 1)'; // alternates // #FFC837 // '#e5ac0e'\nexport const DEFAULT_WARNING_COLOR_HEX = '#ed8128'; // alternates // #FFC837 // '#e5ac0e'\nexport const DEFAULT_WARNING_COLOR = new Color(237, 129, 40);\n/**\n * Color for threshold Critical state\n */\nexport const DEFAULT_CRITICAL_COLOR_RGBA = 'rgba(245, 54, 54, 1)';\nexport const DEFAULT_CRITICAL_COLOR_HEX = '#f53636';\nexport const DEFAULT_CRITICAL_COLOR = new Color(245, 54, 54);\n\nexport const DEFAULT_NO_THRESHOLD_COLOR_RGBA = GLOBAL_FILL_COLOR_RGBA;\nexport const DEFAULT_NO_THRESHOLD_COLOR_HEX = GLOBAL_FILL_COLOR_HEX;\nexport const DEFAULT_NO_THRESHOLD_COLOR = new Color(64, 64, 160);\n\nexport const DEFAULT_NO_DATA_COLOR_HEX = '#808080'; // \"grey\"\n\n/**\n * Unit to apply to all metrics without overrides\n */\nexport const GLOBAL_UNIT_FORMAT = 'short';\n/**\n * Number of decimals to display in polygon\n */\nexport const GLOBAL_DISPLAY_DECIMALS = 2;\n/**\n * Show all metrics\n */\nexport const GLOBAL_DISPLAY_MODE = 'all';\n/**\n * Display OK when global mode is set to triggered and there are no triggers\n */\nexport const GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY = 'OK';\n/**\n * Display average (mean) stat for metric\n */\nexport const GLOBAL_OPERATOR_NAME = 'mean'; // mean\n\nexport const GLOBAL_OVERRIDE_COLORS = [\n  DEFAULT_OK_COLOR_HEX,\n  DEFAULT_WARNING_COLOR_HEX,\n  DEFAULT_CRITICAL_COLOR_HEX,\n  DEFAULT_NO_THRESHOLD_COLOR_HEX,\n];\n\nexport const GLOBAL_TEXT_FONT_FAMILY = FontFamilies.INTER;\nexport const GLOBAL_TOOLTIP_FONT_FAMILY = FontFamilies.INTER;\nexport const GLOBAL_TEXT_FONT_FAMILY_LEGACY = FontFamilies.ROBOTO;\nexport const GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY = FontFamilies.ROBOTO;\n","import React, { useState } from 'react';\nimport { orderBy } from 'lodash';\nimport { Button, useTheme, useTheme2 } from '@grafana/ui';\nimport { v4 as UUIdv4 } from 'uuid';\nimport { PolystatThreshold, ThresholdItemTracker } from './types';\nimport { ThresholdItem } from './ThresholdItem';\nimport { DEFAULT_OK_COLOR_HEX, DEFAULT_WARNING_COLOR_HEX, DEFAULT_CRITICAL_COLOR_HEX } from '../defaults';\n\ninterface Props {\n  thresholds: PolystatThreshold[];\n  setter: any;\n  disabled?: boolean;\n}\nexport const ThresholdsEditor: React.FC<Props> = (options) => {\n  const [tracker, _setTracker] = useState((): ThresholdItemTracker[] => {\n    if (!options.thresholds) {\n      return [] as ThresholdItemTracker[];\n    }\n    const items: ThresholdItemTracker[] = [];\n    options.thresholds.forEach((value: PolystatThreshold, index: number) => {\n      items[index] = {\n        threshold: value,\n        order: index,\n        ID: UUIdv4(),\n      };\n    });\n    return items;\n  });\n  // v9 compatible\n  const theme2 = useTheme2();\n  const oldTheme = useTheme();\n\n  const setTracker = (v: ThresholdItemTracker[]) => {\n    _setTracker(v);\n    const allThresholds: PolystatThreshold[] = [];\n    v.forEach((element) => {\n      allThresholds.push(element.threshold);\n    });\n    options.setter(allThresholds);\n  };\n\n  const updateThresholdValue = (index: number, value: number) => {\n    tracker[index].threshold.value = Number(value);\n    // reorder\n    const allThresholds = [...tracker];\n    const orderedThresholds = orderBy(allThresholds, ['threshold.value'], ['asc']);\n    setTracker([...orderedThresholds]);\n  };\n\n  const updateThresholdColor = (index: number, color: string) => {\n    const useColor = theme2.visualization.getColorByName(color);\n    tracker[index].threshold.color = useColor;\n    setTracker([...tracker]);\n  };\n\n  const updateThresholdState = (index: number, state: any) => {\n    tracker[index].threshold.state = state;\n    // set the color if it is not a custom state\n    if (state < 3) {\n      tracker[index].threshold.color = colorForThresholdState(state);\n    }\n    setTracker([...tracker]);\n  };\n\n  const colorForThresholdState = (state: number) => {\n    switch (state) {\n      case 0:\n        return DEFAULT_OK_COLOR_HEX;\n      case 1:\n        return DEFAULT_WARNING_COLOR_HEX;\n      case 2:\n        return DEFAULT_CRITICAL_COLOR_HEX;\n      default:\n        return DEFAULT_OK_COLOR_HEX;\n    }\n  };\n\n  const removeThreshold = (index: number) => {\n    const allThresholds = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allThresholds.length; i++) {\n      if (allThresholds[i].order === index) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allThresholds.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allThresholds.length; i++) {\n      allThresholds[i].order = i;\n    }\n    setTracker([...allThresholds]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const aThreshold: PolystatThreshold = {\n      color: DEFAULT_OK_COLOR_HEX, // \"rgba(50, 172, 45, 1)\",  // green\n      state: 0,\n      value: 0,\n    };\n    const aTracker: ThresholdItemTracker = {\n      threshold: aThreshold,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n  };\n\n  return (\n    <>\n      <Button disabled={options.disabled} fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\n        Add Threshold\n      </Button>\n      {tracker &&\n        tracker.map((tracker: ThresholdItemTracker, index: number) => {\n          return (\n            <ThresholdItem\n              disabled={options.disabled || false}\n              key={`threshold-item-index-${tracker.ID}`}\n              ID={tracker.ID}\n              threshold={tracker.threshold}\n              valueSetter={updateThresholdValue}\n              colorSetter={updateThresholdColor}\n              stateSetter={updateThresholdState}\n              remover={removeThreshold}\n              index={index}\n            />\n          );\n        })}\n    </>\n  );\n};\n","import { FieldType } from '@grafana/data';\n\n// builds unique metric names to shorten the list displayed\nexport const getMetricHints = (frames: any) => {\n  let metricHints = new Set<string>();\n  for (let i = 0; i < frames.length; i++) {\n    // start with empty hint\n    let hintValue = '';\n    // the frame may have a name defined, start with it, fields will change it as needed\n    if (frames[i]?.name) {\n      hintValue = frames[i].name;\n    }\n    // iterate over fields, get all number types and provide as hints\n    for (const aField of frames[i].fields) {\n      if (aField.type === FieldType.number) {\n        // update the hint to use the field Name if we didn't get a value from above\n        if ((aField.name) && (hintValue === '')) {\n          hintValue = aField.name;\n        }\n        // check for a label with __name__ and use it instead\n        if (aField?.labels && ('__name__' in aField.labels)) {\n          hintValue = aField.labels['__name__'];\n          // append the rest of the labels\n          const appendLabels: string[] = [];\n          for (const aLabel in aField.labels) {\n            if (aLabel !== '__name__') {\n              appendLabels.push(`${aLabel}=\"${aField.labels[aLabel]}\"`);\n            }\n          }\n          if (appendLabels.length > 0) {\n            // sort them first\n            appendLabels.sort();\n            hintValue += '{' + appendLabels.join('') + '}';\n          }\n        }\n        // update the hint to use the displayNameFromDS value\n        // (the query has a specified a naming convention)\n        if (aField?.config && aField.config?.displayNameFromDS) {\n          hintValue = aField.config?.displayNameFromDS;\n        }\n        metricHints.add(hintValue);\n      }\n    }\n  }\n  return metricHints;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  IconName,\n  Input,\n  Field,\n  FieldSet,\n  Switch,\n  Card,\n  IconButton,\n  UnitPicker,\n  Select,\n  Cascader,\n  CascaderOption,\n} from '@grafana/ui';\nimport { OverrideItemProps, OverrideItemType } from './types';\nimport { ThresholdsEditor } from '../thresholds/ThresholdsEditor';\nimport { PolystatThreshold } from '../thresholds/types';\nimport { OperatorOptions, ShowTimestampFormats } from '../types';\nimport { SelectableValue } from '@grafana/data';\nimport { getMetricHints } from '../metric_hints';\n\nexport const OverrideItem: React.FC<OverrideItemProps> = (props) => {\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\n  const [override, _setOverride] = useState(props.override);\n\n  const setOverride = (value: OverrideItemType) => {\n    _setOverride(value);\n    props.setter(override.order, value);\n  };\n  const [visibleIcon] = useState<IconName>('eye');\n  const [hiddenIcon] = useState<IconName>('eye-slash');\n\n  const getOperator = (operatorName: string) => {\n    const keys = OperatorOptions.keys();\n    for (const aKey of keys) {\n      if (OperatorOptions[aKey].value === operatorName) {\n        return OperatorOptions[aKey];\n      }\n    }\n    // no match, return last not null by default\n    return OperatorOptions[5];\n  };\n  const [operatorName, setOperatorName] = useState<SelectableValue>(getOperator(props.override.operatorName));\n  const removeItem = () => {\n    props.remover(override.order);\n  };\n\n  const moveUp = () => {\n    props.moveUp(override.order);\n  };\n  const moveDown = () => {\n    props.moveDown(override.order);\n  };\n  const createDuplicate = () => {\n    props.createDuplicate(override.order);\n  };\n\n  const setThresholds = (val: PolystatThreshold[]) => {\n    setOverride({ ...override, thresholds: val });\n  };\n\n  useEffect(() => {\n    if (props.context.data) {\n      const frames = props.context.data;\n      let hints: CascaderOption[] = [];\n      let metricHints = getMetricHints(frames);\n      for (const metricName of metricHints) {\n        hints.push({\n          label: metricName,\n          value: metricName,\n        });\n      }\n      setMetricHints(hints);\n    }\n  }, [props.context.data]);\n\n  return (\n    <Card key={`override-card-${props.ID}`}>\n      <Card.Meta>\n        <FieldSet>\n          <Field\n            label=\"Label\"\n            description=\"Sets the name of the override in the configuration editor.\"\n            disabled={!override.enabled}\n          >\n            <Input\n              value={override.label}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, label: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Metric/RegEx\" disabled={!override.enabled}>\n            <Cascader\n              initialValue={override.metricName}\n              allowCustomValue\n              placeholder=\"\"\n              options={metricHints}\n              onSelect={(val: string) => setOverride({ ...override, metricName: val })}\n            />\n          </Field>\n          <Field label=\"Alias\" disabled={!override.enabled} hidden={true}>\n            <Input\n              value={override.alias}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, alias: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Decimals\" disabled={!override.enabled}>\n            <Input\n              value={override.decimals}\n              type=\"number\"\n              step={1}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, decimals: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Stat\" description=\"The statistic to be displayed\" disabled={!override.enabled}>\n            <Select\n              menuShouldPortal={true}\n              value={operatorName}\n              onChange={(v) => {\n                setOperatorName(v);\n                setOverride({ ...override, operatorName: v.value });\n              }}\n              options={OperatorOptions}\n            />\n          </Field>\n          <Field label=\"Unit Format\" disabled={!override.enabled}>\n            {override.enabled ? (\n              <UnitPicker\n                value={override.unitFormat}\n                onChange={(val: any) => setOverride({ ...override, unitFormat: val })}\n              />\n            ) : (\n              <span>{override.unitFormat}</span>\n            )}\n          </Field>\n          {/*\n          <Field label=\"Show Timestamp\" description=\"Toggle Display of Timestamp\" disabled={!override.enabled}>\n            <Switch\n              transparent={true}\n              value={override.showTimestampEnabled}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override, showTimestampEnabled: !override.showTimestampEnabled })}\n            />\n          </Field>\n          <Field label=\"Timestamp Format\" description=\"Format of timestamp to display\" disabled={!override.enabled} hidden={!override.showTimestampEnabled}>\n            <Cascader\n              initialValue={override.showTimestampFormat}\n              allowCustomValue\n              placeholder=\"\"\n              options={ShowTimestampFormats}\n              onSelect={(val: string) => setOverride({ ...override, showTimestampFormat: val })}\n            />\n          </Field>\n          <Field label=\"Timestamp Y Offset\" description=\"Adjust the displayed timestamp up or down the Y-Axis, use negative value to move up, positive for down\" disabled={!override.enabled} hidden={!override.showTimestampEnabled}>\n            <Input\n              value={override.showTimestampYOffset}\n              type=\"number\"\n              step={1}\n              placeholder=\"0\"\n              onChange={(v) => setOverride({ ...override, showTimestampYOffset: v.currentTarget.valueAsNumber })}\n            />\n          </Field>\n          */}\n\n          <Field label=\"Thresholds\" disabled={!override.enabled}>\n            <ThresholdsEditor disabled={!override.enabled} thresholds={override.thresholds} setter={setThresholds} />\n          </Field>\n          <Field label=\"Prefix\" description=\"Apply text to beginning of metric\" disabled={!override.enabled}>\n            <Input\n              value={override.prefix}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, prefix: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Suffix\" description=\"Apply text to end of metric\" disabled={!override.enabled}>\n            <Input\n              value={override.suffix}\n              placeholder=\"\"\n              onChange={(e) => setOverride({ ...override, suffix: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Clickthrough URL\" description=\"URL to Open on Click\" disabled={!override.enabled}>\n            <Input\n              value={override.clickThrough}\n              placeholder=\"https://\"\n              onChange={(e) => setOverride({ ...override, clickThrough: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Sanitize URL\" description=\"Sanitize URL before evaluating\" disabled={!override.enabled}>\n            <Switch\n              transparent={false}\n              disabled={!override.enabled}\n              value={override.clickThroughSanitize}\n              onChange={() => setOverride({ ...override, clickThroughSanitize: !override.clickThroughSanitize })}\n            />\n          </Field>\n          <Field label=\"Open URL in New Tab\" description=\"Open link in new tab\" disabled={!override.enabled}>\n            <Switch\n              transparent={false}\n              value={override.clickThroughOpenNewTab}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override, clickThroughOpenNewTab: !override.clickThroughOpenNewTab })}\n            />\n          </Field>\n          <Field label=\"Enable Custom URL Target\" description=\"Enable custom target\" disabled={!override.enabled} hidden={override.clickThroughOpenNewTab}>\n            <Switch\n              transparent={false}\n              value={override.clickThroughCustomTargetEnabled}\n              disabled={!override.enabled}\n              onChange={() => setOverride({ ...override,\n                clickThroughCustomTargetEnabled: !override.clickThroughCustomTargetEnabled,\n                clickThroughCustomTarget: override.clickThroughCustomTarget || ''\n              })}\n            />\n          </Field>\n          <Field label=\"Custom URL Target\" description=\"Specify a custom target, typical values are: _blank|_self|_parent|_top|framename\" disabled={!override.enabled} hidden={!override.clickThroughCustomTargetEnabled}>\n            <Input\n              value={override.clickThroughCustomTarget}\n              placeholder=\"_self\"\n              disabled={!override.enabled}\n              onChange={(e) => setOverride({ ...override, clickThroughCustomTarget: e.currentTarget.value })}\n            />\n          </Field>\n        </FieldSet>\n      </Card.Meta>\n\n      <Card.Actions>\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\n        <IconButton\n          key=\"overrideEnabled\"\n          name={override.enabled ? visibleIcon : hiddenIcon}\n          tooltip=\"Hide/Show Override\"\n          onClick={() => setOverride({ ...override, enabled: !override.enabled })}\n        />\n        <IconButton key=\"copyOverride\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\n        <IconButton\n          key=\"deleteOverride\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete Override\"\n          onClick={removeItem}\n        />\n      </Card.Actions>\n    </Card>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { OverrideItem } from './OverrideItem';\nimport { OverrideItemType, OverrideItemTracker } from './types';\nimport { v4 as UUIdv4 } from 'uuid';\nimport { Button, Collapse } from '@grafana/ui';\nimport { PolystatThreshold } from '../thresholds/types';\nimport { OperatorOptions, ShowTimestampFormats } from '../types';\nimport {\n  DEFAULT_CRITICAL_COLOR_HEX,\n  DEFAULT_NO_THRESHOLD_COLOR_HEX,\n  DEFAULT_OK_COLOR_HEX,\n  DEFAULT_WARNING_COLOR_HEX,\n} from '../defaults';\n\nexport interface OverrideEditorSettings {\n  overrides: OverrideItemType[];\n  enabled: boolean;\n}\n\ninterface Props extends StandardEditorProps<string | string[] | null, OverrideEditorSettings> {}\n\nexport const OverrideEditor: React.FC<Props> = ({ item, context, onChange }) => {\n  const [settings] = useState(context.options.overrideConfig);\n  const [tracker, _setTracker] = useState((): OverrideItemTracker[] => {\n    if (!settings.overrides) {\n      return [] as OverrideItemTracker[];\n    }\n    const items: OverrideItemTracker[] = [];\n    settings.overrides.forEach((value: OverrideItemType, index: number) => {\n      items[index] = {\n        override: value,\n        order: index,\n        ID: UUIdv4(),\n      };\n    });\n    return items;\n  });\n\n  const setTracker = (v: OverrideItemTracker[]) => {\n    _setTracker(v);\n    const allOverrides: OverrideItemType[] = [];\n    v.forEach((element) => {\n      allOverrides.push(element.override);\n    });\n    const overrideConfig = {\n      overrides: allOverrides,\n      enabled: settings.enabled,\n    };\n    onChange(overrideConfig as any);\n  };\n\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\n    if (!tracker) {\n      return [] as boolean[];\n    }\n    let size = tracker.length;\n    const openStates: boolean[] = [];\n    while (size--) {\n      openStates[size] = false;\n    }\n    return openStates;\n  });\n\n  const updateOverride = (index: number, value: OverrideItemType) => {\n    tracker[index].override = value;\n    // works ... setTracker(tracker);\n    setTracker([...tracker]);\n  };\n\n  const createDuplicate = (index: number) => {\n    const original = tracker[index].override;\n    const order = tracker.length;\n    const anOverride: OverrideItemType = {\n      label: `${original.label} Copy`,\n      enabled: original.enabled,\n      metricName: original.metricName,\n      alias: original.alias,\n      thresholds: original.thresholds,\n      prefix: original.prefix,\n      suffix: original.suffix,\n      clickThrough: original.clickThrough,\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\n      clickThroughSanitize: original.clickThroughSanitize,\n      clickThroughCustomTargetEnabled: original.clickThroughCustomTargetEnabled,\n      clickThroughCustomTarget: original.clickThroughCustomTarget,\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      unitFormat: original.unitFormat,\n      scaledDecimals: original.scaledDecimals,\n      decimals: original.decimals,\n      colors: original.colors,\n      operatorName: original.operatorName,\n      order: order,\n    };\n    const aTracker: OverrideItemTracker = {\n      override: anOverride,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    setIsOpen([...isOpen, true]);\n  };\n\n  // generic move\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  };\n\n  const moveDown = (index: number) => {\n    if (index !== tracker.length - 1) {\n      arrayMove(tracker, index, index + 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].override.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const moveUp = (index: number) => {\n    if (index > 0) {\n      arrayMove(tracker, index, index - 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].override.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const removeOverride = (index: number) => {\n    const allOverrides = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allOverrides.length; i++) {\n      if (allOverrides[i].order === index) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allOverrides.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allOverrides.length; i++) {\n      allOverrides[i].order = i;\n      allOverrides[i].override.order = i;\n    }\n    setTracker([...allOverrides]);\n  };\n\n  const toggleOpener = (index: number) => {\n    const currentState = [...isOpen];\n    currentState[index] = !currentState[index];\n    setIsOpen([...currentState]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const anOverride: OverrideItemType = {\n      label: `Override-${order}`,\n      enabled: true,\n      metricName: '',\n      alias: '',\n      thresholds: [] as PolystatThreshold[],\n      prefix: '',\n      suffix: '',\n      clickThrough: '',\n      clickThroughOpenNewTab: true,\n      clickThroughSanitize: true,\n      clickThroughCustomTargetEnabled: false,\n      clickThroughCustomTarget: '',\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      unitFormat: 'short',\n      scaledDecimals: null,\n      decimals: '2',\n      colors: [\n        DEFAULT_OK_COLOR_HEX,\n        DEFAULT_WARNING_COLOR_HEX,\n        DEFAULT_CRITICAL_COLOR_HEX,\n        DEFAULT_NO_THRESHOLD_COLOR_HEX,\n      ],\n      operatorName: OperatorOptions[0].value,\n      order: order,\n    };\n    const aTracker: OverrideItemTracker = {\n      override: anOverride,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    // add an opener also\n    setIsOpen([...isOpen, true]);\n  };\n\n  return (\n    <>\n      <Button fill=\"solid\" variant=\"primary\" icon=\"plus\" onClick={addItem}>\n        Add Override\n      </Button>\n      {tracker &&\n        tracker.map((tracker: OverrideItemTracker, index: number) => {\n          return (\n            <Collapse\n              key={`collapse-item-index-${tracker.ID}`}\n              label={tracker.override.label}\n              isOpen={isOpen[index]}\n              onToggle={() => toggleOpener(index)}\n              collapsible\n            >\n              <OverrideItem\n                key={`override-item-index-${tracker.ID}`}\n                ID={tracker.ID}\n                override={tracker.override}\n                enabled={tracker.override.enabled}\n                setter={updateOverride}\n                remover={removeOverride}\n                moveDown={moveDown}\n                moveUp={moveUp}\n                createDuplicate={createDuplicate}\n                context={context}\n              />\n            </Collapse>\n          );\n        })}\n    </>\n  );\n};\n","var thirdPi = Math.PI / 3,\n    angles = [0, thirdPi, 2 * thirdPi, 3 * thirdPi, 4 * thirdPi, 5 * thirdPi];\n\nfunction pointX(d) {\n  return d[0];\n}\n\nfunction pointY(d) {\n  return d[1];\n}\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 1,\n      y1 = 1,\n      x = pointX,\n      y = pointY,\n      r,\n      dx,\n      dy;\n\n  function hexbin(points) {\n    var binsById = {}, bins = [], i, n = points.length;\n\n    for (i = 0; i < n; ++i) {\n      if (isNaN(px = +x.call(null, point = points[i], i, points))\n          || isNaN(py = +y.call(null, point, i, points))) continue;\n\n      var point,\n          px,\n          py,\n          pj = Math.round(py = py / dy),\n          pi = Math.round(px = px / dx - (pj & 1) / 2),\n          py1 = py - pj;\n\n      if (Math.abs(py1) * 3 > 1) {\n        var px1 = px - pi,\n            pi2 = pi + (px < pi ? -1 : 1) / 2,\n            pj2 = pj + (py < pj ? -1 : 1),\n            px2 = px - pi2,\n            py2 = py - pj2;\n        if (px1 * px1 + py1 * py1 > px2 * px2 + py2 * py2) pi = pi2 + (pj & 1 ? 1 : -1) / 2, pj = pj2;\n      }\n\n      var id = pi + \"-\" + pj, bin = binsById[id];\n      if (bin) bin.push(point);\n      else {\n        bins.push(bin = binsById[id] = [point]);\n        bin.x = (pi + (pj & 1) / 2) * dx;\n        bin.y = pj * dy;\n      }\n    }\n\n    return bins;\n  }\n\n  function hexagon(radius) {\n    var x0 = 0, y0 = 0;\n    return angles.map(function(angle) {\n      var x1 = Math.sin(angle) * radius,\n          y1 = -Math.cos(angle) * radius,\n          dx = x1 - x0,\n          dy = y1 - y0;\n      x0 = x1, y0 = y1;\n      return [dx, dy];\n    });\n  }\n\n  hexbin.hexagon = function(radius) {\n    return \"m\" + hexagon(radius == null ? r : +radius).join(\"l\") + \"z\";\n  };\n\n  hexbin.centers = function() {\n    var centers = [],\n        j = Math.round(y0 / dy),\n        i = Math.round(x0 / dx);\n    for (var y = j * dy; y < y1 + r; y += dy, ++j) {\n      for (var x = i * dx + (j & 1) * dx / 2; x < x1 + dx / 2; x += dx) {\n        centers.push([x, y]);\n      }\n    }\n    return centers;\n  };\n\n  hexbin.mesh = function() {\n    var fragment = hexagon(r).slice(0, 4).join(\"l\");\n    return hexbin.centers().map(function(p) { return \"M\" + p + \"m\" + fragment; }).join(\"\");\n  };\n\n  hexbin.x = function(_) {\n    return arguments.length ? (x = _, hexbin) : x;\n  };\n\n  hexbin.y = function(_) {\n    return arguments.length ? (y = _, hexbin) : y;\n  };\n\n  hexbin.radius = function(_) {\n    return arguments.length ? (r = +_, dx = r * 2 * Math.sin(thirdPi), dy = r * 1.5, hexbin) : r;\n  };\n\n  hexbin.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], hexbin) : [x1 - x0, y1 - y0];\n  };\n\n  hexbin.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], hexbin) : [[x0, y0], [x1, y1]];\n  };\n\n  return hexbin.radius(1);\n}\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return ['transform', 'translate', 'scale', 'rotate', 'perspective'].some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\nfunction rectsAreEqual(a, b) {\n  return a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height;\n}\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const elementRectForRootMargin = element.getBoundingClientRect();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = elementRectForRootMargin;\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      if (ratio === 1 && !rectsAreEqual(elementRectForRootMargin, element.getBoundingClientRect())) {\n        // It's possible that even though the ratio is reported as 1, the\n        // element is not actually fully within the IntersectionObserver's root\n        // area anymore. This can happen under performance constraints. This may\n        // be a bug in the browser's IntersectionObserver implementation. To\n        // work around this, we compare the element's bounding rect now with\n        // what it was at the time we created the IntersectionObserver. If they\n        // are not equal then the element moved, so we refresh.\n        refresh();\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && !rectsAreEqual(prevRefRect, nextRefRect)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","/*\n* React Tooltip\n* {@link https://github.com/ReactTooltip/react-tooltip}\n* @copyright ReactTooltip Team\n* @license MIT\n*/\nimport e,{useLayoutEffect as t,useEffect as o,createContext as l,useState as r,useCallback as n,useMemo as i,useContext as c,useRef as s,useImperativeHandle as a}from\"react\";import{arrow as u,computePosition as d,offset as p,flip as v,shift as m,autoUpdate as f}from\"@floating-ui/dom\";import y from\"classnames\";const h=\"react-tooltip-core-styles\",w=\"react-tooltip-base-styles\",b={core:!1,base:!1};function S({css:e,id:t=w,type:o=\"base\",ref:l}){var r,n;if(!e||\"undefined\"==typeof document||b[o])return;if(\"core\"===o&&\"undefined\"!=typeof process&&(null===(r=null===process||void 0===process?void 0:process.env)||void 0===r?void 0:r.REACT_TOOLTIP_DISABLE_CORE_STYLES))return;if(\"base\"!==o&&\"undefined\"!=typeof process&&(null===(n=null===process||void 0===process?void 0:process.env)||void 0===n?void 0:n.REACT_TOOLTIP_DISABLE_BASE_STYLES))return;\"core\"===o&&(t=h),l||(l={});const{insertAt:i}=l;if(document.getElementById(t))return;const c=document.head||document.getElementsByTagName(\"head\")[0],s=document.createElement(\"style\");s.id=t,s.type=\"text/css\",\"top\"===i&&c.firstChild?c.insertBefore(s,c.firstChild):c.appendChild(s),s.styleSheet?s.styleSheet.cssText=e:s.appendChild(document.createTextNode(e)),b[o]=!0}function g({type:e=\"base\",id:t=w}={}){if(!b[e])return;\"core\"===e&&(t=h);const o=document.getElementById(t);\"style\"===(null==o?void 0:o.tagName)?null==o||o.remove():console.warn(`[react-tooltip] Failed to remove 'style' element with id '${t}'. Call \\`injectStyle()\\` first`),b[e]=!1}const E=async({elementReference:e=null,tooltipReference:t=null,tooltipArrowReference:o=null,place:l=\"top\",offset:r=10,strategy:n=\"absolute\",middlewares:i=[p(Number(r)),v({fallbackAxisSideDirection:\"start\"}),m({padding:5})],border:c})=>{if(!e)return{tooltipStyles:{},tooltipArrowStyles:{},place:l};if(null===t)return{tooltipStyles:{},tooltipArrowStyles:{},place:l};const s=i;return o?(s.push(u({element:o,padding:5})),d(e,t,{placement:l,strategy:n,middleware:s}).then((({x:e,y:t,placement:o,middlewareData:l})=>{var r,n;const i={left:`${e}px`,top:`${t}px`,border:c},{x:s,y:a}=null!==(r=l.arrow)&&void 0!==r?r:{x:0,y:0},u=null!==(n={top:\"bottom\",right:\"left\",bottom:\"top\",left:\"right\"}[o.split(\"-\")[0]])&&void 0!==n?n:\"bottom\",d=c&&{borderBottom:c,borderRight:c};let p=0;if(c){const e=`${c}`.match(/(\\d+)px/);p=(null==e?void 0:e[1])?Number(e[1]):1}return{tooltipStyles:i,tooltipArrowStyles:{left:null!=s?`${s}px`:\"\",top:null!=a?`${a}px`:\"\",right:\"\",bottom:\"\",...d,[u]:`-${4+p}px`},place:o}}))):d(e,t,{placement:\"bottom\",strategy:n,middleware:s}).then((({x:e,y:t,placement:o})=>({tooltipStyles:{left:`${e}px`,top:`${t}px`},tooltipArrowStyles:{},place:o})))},A=(e,t)=>!(\"CSS\"in window&&\"supports\"in window.CSS)||window.CSS.supports(e,t),_=(e,t,o)=>{let l=null;const r=function(...r){const n=()=>{l=null,o||e.apply(this,r)};o&&!l&&(e.apply(this,r),l=setTimeout(n,t)),o||(l&&clearTimeout(l),l=setTimeout(n,t))};return r.cancel=()=>{l&&(clearTimeout(l),l=null)},r},O=e=>null!==e&&!Array.isArray(e)&&\"object\"==typeof e,k=(e,t)=>{if(e===t)return!0;if(Array.isArray(e)&&Array.isArray(t))return e.length===t.length&&e.every(((e,o)=>k(e,t[o])));if(Array.isArray(e)!==Array.isArray(t))return!1;if(!O(e)||!O(t))return e===t;const o=Object.keys(e),l=Object.keys(t);return o.length===l.length&&o.every((o=>k(e[o],t[o])))},T=e=>{if(!(e instanceof HTMLElement||e instanceof SVGElement))return!1;const t=getComputedStyle(e);return[\"overflow\",\"overflow-x\",\"overflow-y\"].some((e=>{const o=t.getPropertyValue(e);return\"auto\"===o||\"scroll\"===o}))},L=e=>{if(!e)return null;let t=e.parentElement;for(;t;){if(T(t))return t;t=t.parentElement}return document.scrollingElement||document.documentElement},C=\"undefined\"!=typeof window?t:o,R=e=>{e.current&&(clearTimeout(e.current),e.current=null)},x=\"DEFAULT_TOOLTIP_ID\",N={anchorRefs:new Set,activeAnchor:{current:null},attach:()=>{},detach:()=>{},setActiveAnchor:()=>{}},$=l({getTooltipData:()=>N}),I=({children:t})=>{const[o,l]=r({[x]:new Set}),[c,s]=r({[x]:{current:null}}),a=(e,...t)=>{l((o=>{var l;const r=null!==(l=o[e])&&void 0!==l?l:new Set;return t.forEach((e=>r.add(e))),{...o,[e]:new Set(r)}}))},u=(e,...t)=>{l((o=>{const l=o[e];return l?(t.forEach((e=>l.delete(e))),{...o}):o}))},d=n(((e=x)=>{var t,l;return{anchorRefs:null!==(t=o[e])&&void 0!==t?t:new Set,activeAnchor:null!==(l=c[e])&&void 0!==l?l:{current:null},attach:(...t)=>a(e,...t),detach:(...t)=>u(e,...t),setActiveAnchor:t=>((e,t)=>{s((o=>{var l;return(null===(l=o[e])||void 0===l?void 0:l.current)===t.current?o:{...o,[e]:t}}))})(e,t)}}),[o,c,a,u]),p=i((()=>({getTooltipData:d})),[d]);return e.createElement($.Provider,{value:p},t)};function j(e=x){return c($).getTooltipData(e)}const B=({tooltipId:t,children:l,className:r,place:n,content:i,html:c,variant:a,offset:u,wrapper:d,events:p,positionStrategy:v,delayShow:m,delayHide:f})=>{const{attach:h,detach:w}=j(t),b=s(null);return o((()=>(h(b),()=>{w(b)})),[]),e.createElement(\"span\",{ref:b,className:y(\"react-tooltip-wrapper\",r),\"data-tooltip-place\":n,\"data-tooltip-content\":i,\"data-tooltip-html\":c,\"data-tooltip-variant\":a,\"data-tooltip-offset\":u,\"data-tooltip-wrapper\":d,\"data-tooltip-events\":p,\"data-tooltip-position-strategy\":v,\"data-tooltip-delay-show\":m,\"data-tooltip-delay-hide\":f},l)};var z={tooltip:\"core-styles-module_tooltip__3vRRp\",fixed:\"core-styles-module_fixed__pcSol\",arrow:\"core-styles-module_arrow__cvMwQ\",noArrow:\"core-styles-module_noArrow__xock6\",clickable:\"core-styles-module_clickable__ZuTTB\",show:\"core-styles-module_show__Nt9eE\",closing:\"core-styles-module_closing__sGnxF\"},D={tooltip:\"styles-module_tooltip__mnnfp\",arrow:\"styles-module_arrow__K0L3T\",dark:\"styles-module_dark__xNqje\",light:\"styles-module_light__Z6W-X\",success:\"styles-module_success__A2AKt\",warning:\"styles-module_warning__SCK0X\",error:\"styles-module_error__JvumD\",info:\"styles-module_info__BWdHW\"};const q=({forwardRef:t,id:l,className:i,classNameArrow:c,variant:u=\"dark\",anchorId:d,anchorSelect:p,place:v=\"top\",offset:m=10,events:h=[\"hover\"],openOnClick:w=!1,positionStrategy:b=\"absolute\",middlewares:S,wrapper:g,delayShow:A=0,delayHide:O=0,float:T=!1,hidden:x=!1,noArrow:N=!1,clickable:$=!1,closeOnEsc:I=!1,closeOnScroll:B=!1,closeOnResize:q=!1,openEvents:H,closeEvents:M,globalCloseEvents:W,imperativeModeOnly:P,style:V,position:F,afterShow:K,afterHide:U,disableTooltip:X,content:Y,contentWrapperRef:G,isOpen:Z,defaultIsOpen:J=!1,setIsOpen:Q,activeAnchor:ee,setActiveAnchor:te,border:oe,opacity:le,arrowColor:re,role:ne=\"tooltip\"})=>{var ie;const ce=s(null),se=s(null),ae=s(null),ue=s(null),de=s(null),[pe,ve]=r({tooltipStyles:{},tooltipArrowStyles:{},place:v}),[me,fe]=r(!1),[ye,he]=r(!1),[we,be]=r(null),Se=s(!1),ge=s(null),{anchorRefs:Ee,setActiveAnchor:Ae}=j(l),_e=s(!1),[Oe,ke]=r([]),Te=s(!1),Le=w||h.includes(\"click\"),Ce=Le||(null==H?void 0:H.click)||(null==H?void 0:H.dblclick)||(null==H?void 0:H.mousedown),Re=H?{...H}:{mouseover:!0,focus:!0,mouseenter:!1,click:!1,dblclick:!1,mousedown:!1};!H&&Le&&Object.assign(Re,{mouseenter:!1,focus:!1,mouseover:!1,click:!0});const xe=M?{...M}:{mouseout:!0,blur:!0,mouseleave:!1,click:!1,dblclick:!1,mouseup:!1};!M&&Le&&Object.assign(xe,{mouseleave:!1,blur:!1,mouseout:!1});const Ne=W?{...W}:{escape:I||!1,scroll:B||!1,resize:q||!1,clickOutsideAnchor:Ce||!1};P&&(Object.assign(Re,{mouseenter:!1,focus:!1,click:!1,dblclick:!1,mousedown:!1}),Object.assign(xe,{mouseleave:!1,blur:!1,click:!1,dblclick:!1,mouseup:!1}),Object.assign(Ne,{escape:!1,scroll:!1,resize:!1,clickOutsideAnchor:!1})),C((()=>(Te.current=!0,()=>{Te.current=!1})),[]);const $e=e=>{Te.current&&(e&&he(!0),setTimeout((()=>{Te.current&&(null==Q||Q(e),void 0===Z&&fe(e))}),10))};o((()=>{if(void 0===Z)return()=>null;Z&&he(!0);const e=setTimeout((()=>{fe(Z)}),10);return()=>{clearTimeout(e)}}),[Z]),o((()=>{if(me!==Se.current)if(R(de),Se.current=me,me)null==K||K();else{const e=(e=>{const t=e.match(/^([\\d.]+)(ms|s)$/);if(!t)return 0;const[,o,l]=t;return Number(o)*(\"ms\"===l?1:1e3)})(getComputedStyle(document.body).getPropertyValue(\"--rt-transition-show-delay\"));de.current=setTimeout((()=>{he(!1),be(null),null==U||U()}),e+25)}}),[me]);const Ie=e=>{ve((t=>k(t,e)?t:e))},je=(e=A)=>{R(ae),ye?$e(!0):ae.current=setTimeout((()=>{$e(!0)}),e)},Be=(e=O)=>{R(ue),ue.current=setTimeout((()=>{_e.current||$e(!1)}),e)},ze=e=>{var t;if(!e)return;const o=null!==(t=e.currentTarget)&&void 0!==t?t:e.target;if(!(null==o?void 0:o.isConnected))return te(null),void Ae({current:null});A?je():$e(!0),te(o),Ae({current:o}),R(ue)},De=()=>{$?Be(O||100):O?Be():$e(!1),R(ae)},qe=({x:e,y:t})=>{var o;const l={getBoundingClientRect:()=>({x:e,y:t,width:0,height:0,top:t,left:e,right:e,bottom:t})};E({place:null!==(o=null==we?void 0:we.place)&&void 0!==o?o:v,offset:m,elementReference:l,tooltipReference:ce.current,tooltipArrowReference:se.current,strategy:b,middlewares:S,border:oe}).then((e=>{Ie(e)}))},He=e=>{if(!e)return;const t=e,o={x:t.clientX,y:t.clientY};qe(o),ge.current=o},Me=e=>{var t;if(!me)return;const o=e.target;if(!o.isConnected)return;if(null===(t=ce.current)||void 0===t?void 0:t.contains(o))return;[document.querySelector(`[id='${d}']`),...Oe].some((e=>null==e?void 0:e.contains(o)))||($e(!1),R(ae))},We=_(ze,50,!0),Pe=_(De,50,!0),Ve=e=>{Pe.cancel(),We(e)},Fe=()=>{We.cancel(),Pe()},Ke=n((()=>{var e,t;const o=null!==(e=null==we?void 0:we.position)&&void 0!==e?e:F;o?qe(o):T?ge.current&&qe(ge.current):(null==ee?void 0:ee.isConnected)&&E({place:null!==(t=null==we?void 0:we.place)&&void 0!==t?t:v,offset:m,elementReference:ee,tooltipReference:ce.current,tooltipArrowReference:se.current,strategy:b,middlewares:S,border:oe}).then((e=>{Te.current&&Ie(e)}))}),[me,ee,Y,V,v,null==we?void 0:we.place,m,b,F,null==we?void 0:we.position,T]);o((()=>{var e,t;const o=new Set(Ee);Oe.forEach((e=>{(null==X?void 0:X(e))||o.add({current:e})}));const l=document.querySelector(`[id='${d}']`);l&&!(null==X?void 0:X(l))&&o.add({current:l});const r=()=>{$e(!1)},n=L(ee),i=L(ce.current);Ne.scroll&&(window.addEventListener(\"scroll\",r),null==n||n.addEventListener(\"scroll\",r),null==i||i.addEventListener(\"scroll\",r));let c=null;Ne.resize?window.addEventListener(\"resize\",r):ee&&ce.current&&(c=f(ee,ce.current,Ke,{ancestorResize:!0,elementResize:!0,layoutShift:!0}));const s=e=>{\"Escape\"===e.key&&$e(!1)};Ne.escape&&window.addEventListener(\"keydown\",s),Ne.clickOutsideAnchor&&window.addEventListener(\"click\",Me);const a=[],u=e=>{me&&(null==e?void 0:e.target)===ee||ze(e)},p=e=>{me&&(null==e?void 0:e.target)===ee&&De()},v=[\"mouseover\",\"mouseout\",\"mouseenter\",\"mouseleave\",\"focus\",\"blur\"],m=[\"click\",\"dblclick\",\"mousedown\",\"mouseup\"];Object.entries(Re).forEach((([e,t])=>{t&&(v.includes(e)?a.push({event:e,listener:Ve}):m.includes(e)&&a.push({event:e,listener:u}))})),Object.entries(xe).forEach((([e,t])=>{t&&(v.includes(e)?a.push({event:e,listener:Fe}):m.includes(e)&&a.push({event:e,listener:p}))})),T&&a.push({event:\"pointermove\",listener:He});const y=()=>{_e.current=!0},h=()=>{_e.current=!1,De()};return $&&!Ce&&(null===(e=ce.current)||void 0===e||e.addEventListener(\"mouseenter\",y),null===(t=ce.current)||void 0===t||t.addEventListener(\"mouseleave\",h)),a.forEach((({event:e,listener:t})=>{o.forEach((o=>{var l;null===(l=o.current)||void 0===l||l.addEventListener(e,t)}))})),()=>{var e,t;Ne.scroll&&(window.removeEventListener(\"scroll\",r),null==n||n.removeEventListener(\"scroll\",r),null==i||i.removeEventListener(\"scroll\",r)),Ne.resize?window.removeEventListener(\"resize\",r):null==c||c(),Ne.clickOutsideAnchor&&window.removeEventListener(\"click\",Me),Ne.escape&&window.removeEventListener(\"keydown\",s),$&&!Ce&&(null===(e=ce.current)||void 0===e||e.removeEventListener(\"mouseenter\",y),null===(t=ce.current)||void 0===t||t.removeEventListener(\"mouseleave\",h)),a.forEach((({event:e,listener:t})=>{o.forEach((o=>{var l;null===(l=o.current)||void 0===l||l.removeEventListener(e,t)}))}))}}),[ee,Ke,ye,Ee,Oe,H,M,W,Le,A,O]),o((()=>{var e,t;let o=null!==(t=null!==(e=null==we?void 0:we.anchorSelect)&&void 0!==e?e:p)&&void 0!==t?t:\"\";!o&&l&&(o=`[data-tooltip-id='${l.replace(/'/g,\"\\\\'\")}']`);const r=new MutationObserver((e=>{const t=[],r=[];e.forEach((e=>{if(\"attributes\"===e.type&&\"data-tooltip-id\"===e.attributeName){e.target.getAttribute(\"data-tooltip-id\")===l?t.push(e.target):e.oldValue===l&&r.push(e.target)}if(\"childList\"===e.type){if(ee){const t=[...e.removedNodes].filter((e=>1===e.nodeType));if(o)try{r.push(...t.filter((e=>e.matches(o)))),r.push(...t.flatMap((e=>[...e.querySelectorAll(o)])))}catch(e){}t.some((e=>{var t;return!!(null===(t=null==e?void 0:e.contains)||void 0===t?void 0:t.call(e,ee))&&(he(!1),$e(!1),te(null),R(ae),R(ue),!0)}))}if(o)try{const l=[...e.addedNodes].filter((e=>1===e.nodeType));t.push(...l.filter((e=>e.matches(o)))),t.push(...l.flatMap((e=>[...e.querySelectorAll(o)])))}catch(e){}}})),(t.length||r.length)&&ke((e=>[...e.filter((e=>!r.includes(e))),...t]))}));return r.observe(document.body,{childList:!0,subtree:!0,attributes:!0,attributeFilter:[\"data-tooltip-id\"],attributeOldValue:!0}),()=>{r.disconnect()}}),[l,p,null==we?void 0:we.anchorSelect,ee]),o((()=>{Ke()}),[Ke]),o((()=>{if(!(null==G?void 0:G.current))return()=>null;const e=new ResizeObserver((()=>{setTimeout((()=>Ke()))}));return e.observe(G.current),()=>{e.disconnect()}}),[Y,null==G?void 0:G.current]),o((()=>{var e;const t=document.querySelector(`[id='${d}']`),o=[...Oe,t];ee&&o.includes(ee)||te(null!==(e=Oe[0])&&void 0!==e?e:t)}),[d,Oe,ee]),o((()=>(J&&$e(!0),()=>{R(ae),R(ue)})),[]),o((()=>{var e;let t=null!==(e=null==we?void 0:we.anchorSelect)&&void 0!==e?e:p;if(!t&&l&&(t=`[data-tooltip-id='${l.replace(/'/g,\"\\\\'\")}']`),t)try{const e=Array.from(document.querySelectorAll(t));ke(e)}catch(e){ke([])}}),[l,p,null==we?void 0:we.anchorSelect]),o((()=>{ae.current&&(R(ae),je(A))}),[A]);const Ue=null!==(ie=null==we?void 0:we.content)&&void 0!==ie?ie:Y,Xe=me&&Object.keys(pe.tooltipStyles).length>0;return a(t,(()=>({open:e=>{if(null==e?void 0:e.anchorSelect)try{document.querySelector(e.anchorSelect)}catch(t){return void console.warn(`[react-tooltip] \"${e.anchorSelect}\" is not a valid CSS selector`)}be(null!=e?e:null),(null==e?void 0:e.delay)?je(e.delay):$e(!0)},close:e=>{(null==e?void 0:e.delay)?Be(e.delay):$e(!1)},activeAnchor:ee,place:pe.place,isOpen:Boolean(ye&&!x&&Ue&&Xe)}))),ye&&!x&&Ue?e.createElement(g,{id:l,role:ne,className:y(\"react-tooltip\",z.tooltip,D.tooltip,D[u],i,`react-tooltip__place-${pe.place}`,z[Xe?\"show\":\"closing\"],Xe?\"react-tooltip__show\":\"react-tooltip__closing\",\"fixed\"===b&&z.fixed,$&&z.clickable),onTransitionEnd:e=>{R(de),me||\"opacity\"!==e.propertyName||(he(!1),be(null),null==U||U())},style:{...V,...pe.tooltipStyles,opacity:void 0!==le&&Xe?le:void 0},ref:ce},Ue,e.createElement(g,{className:y(\"react-tooltip-arrow\",z.arrow,D.arrow,c,N&&z.noArrow),style:{...pe.tooltipArrowStyles,background:re?`linear-gradient(to right bottom, transparent 50%, ${re} 50%)`:void 0},ref:se})):null},H=({content:t})=>e.createElement(\"span\",{dangerouslySetInnerHTML:{__html:t}}),M=e.forwardRef((({id:t,anchorId:l,anchorSelect:n,content:i,html:c,render:a,className:u,classNameArrow:d,variant:p=\"dark\",place:v=\"top\",offset:m=10,wrapper:f=\"div\",children:h=null,events:w=[\"hover\"],openOnClick:b=!1,positionStrategy:S=\"absolute\",middlewares:g,delayShow:E=0,delayHide:_=0,float:O=!1,hidden:k=!1,noArrow:T=!1,clickable:L=!1,closeOnEsc:C=!1,closeOnScroll:R=!1,closeOnResize:x=!1,openEvents:N,closeEvents:$,globalCloseEvents:I,imperativeModeOnly:B=!1,style:z,position:D,isOpen:M,defaultIsOpen:W=!1,disableStyleInjection:P=!1,border:V,opacity:F,arrowColor:K,setIsOpen:U,afterShow:X,afterHide:Y,disableTooltip:G,role:Z=\"tooltip\"},J)=>{const[Q,ee]=r(i),[te,oe]=r(c),[le,re]=r(v),[ne,ie]=r(p),[ce,se]=r(m),[ae,ue]=r(E),[de,pe]=r(_),[ve,me]=r(O),[fe,ye]=r(k),[he,we]=r(f),[be,Se]=r(w),[ge,Ee]=r(S),[Ae,_e]=r(null),[Oe,ke]=r(null),Te=s(P),{anchorRefs:Le,activeAnchor:Ce}=j(t),Re=e=>null==e?void 0:e.getAttributeNames().reduce(((t,o)=>{var l;if(o.startsWith(\"data-tooltip-\")){t[o.replace(/^data-tooltip-/,\"\")]=null!==(l=null==e?void 0:e.getAttribute(o))&&void 0!==l?l:null}return t}),{}),xe=e=>{const t={place:e=>{var t;re(null!==(t=e)&&void 0!==t?t:v)},content:e=>{ee(null!=e?e:i)},html:e=>{oe(null!=e?e:c)},variant:e=>{var t;ie(null!==(t=e)&&void 0!==t?t:p)},offset:e=>{se(null===e?m:Number(e))},wrapper:e=>{var t;we(null!==(t=e)&&void 0!==t?t:f)},events:e=>{const t=null==e?void 0:e.split(\" \");Se(null!=t?t:w)},\"position-strategy\":e=>{var t;Ee(null!==(t=e)&&void 0!==t?t:S)},\"delay-show\":e=>{ue(null===e?E:Number(e))},\"delay-hide\":e=>{pe(null===e?_:Number(e))},float:e=>{me(null===e?O:\"true\"===e)},hidden:e=>{ye(null===e?k:\"true\"===e)},\"class-name\":e=>{_e(e)}};Object.values(t).forEach((e=>e(null))),Object.entries(e).forEach((([e,o])=>{var l;null===(l=t[e])||void 0===l||l.call(t,o)}))};o((()=>{ee(i)}),[i]),o((()=>{oe(c)}),[c]),o((()=>{re(v)}),[v]),o((()=>{ie(p)}),[p]),o((()=>{se(m)}),[m]),o((()=>{ue(E)}),[E]),o((()=>{pe(_)}),[_]),o((()=>{me(O)}),[O]),o((()=>{ye(k)}),[k]),o((()=>{Ee(S)}),[S]),o((()=>{Te.current!==P&&console.warn(\"[react-tooltip] Do not change `disableStyleInjection` dynamically.\")}),[P]),o((()=>{\"undefined\"!=typeof window&&window.dispatchEvent(new CustomEvent(\"react-tooltip-inject-styles\",{detail:{disableCore:\"core\"===P,disableBase:P}}))}),[]),o((()=>{var e;const o=new Set(Le);let r=n;if(!r&&t&&(r=`[data-tooltip-id='${t.replace(/'/g,\"\\\\'\")}']`),r)try{document.querySelectorAll(r).forEach((e=>{o.add({current:e})}))}catch(e){console.warn(`[react-tooltip] \"${r}\" is not a valid CSS selector`)}const i=document.querySelector(`[id='${l}']`);if(i&&o.add({current:i}),!o.size)return()=>null;const c=null!==(e=null!=Oe?Oe:i)&&void 0!==e?e:Ce.current,s=new MutationObserver((e=>{e.forEach((e=>{var t;if(!c||\"attributes\"!==e.type||!(null===(t=e.attributeName)||void 0===t?void 0:t.startsWith(\"data-tooltip-\")))return;const o=Re(c);xe(o)}))})),a={attributes:!0,childList:!1,subtree:!1};if(c){const e=Re(c);xe(e),s.observe(c,a)}return()=>{s.disconnect()}}),[Le,Ce,Oe,l,n]),o((()=>{(null==z?void 0:z.border)&&console.warn(\"[react-tooltip] Do not set `style.border`. Use `border` prop instead.\"),V&&!A(\"border\",`${V}`)&&console.warn(`[react-tooltip] \"${V}\" is not a valid \\`border\\`.`),(null==z?void 0:z.opacity)&&console.warn(\"[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead.\"),F&&!A(\"opacity\",`${F}`)&&console.warn(`[react-tooltip] \"${F}\" is not a valid \\`opacity\\`.`)}),[]);let Ne=h;const $e=s(null);if(a){const t=a({content:(null==Oe?void 0:Oe.getAttribute(\"data-tooltip-content\"))||Q||null,activeAnchor:Oe});Ne=t?e.createElement(\"div\",{ref:$e,className:\"react-tooltip-content-wrapper\"},t):null}else Q&&(Ne=Q);te&&(Ne=e.createElement(H,{content:te}));const Ie={forwardRef:J,id:t,anchorId:l,anchorSelect:n,className:y(u,Ae),classNameArrow:d,content:Ne,contentWrapperRef:$e,place:le,variant:ne,offset:ce,wrapper:he,events:be,openOnClick:b,positionStrategy:ge,middlewares:g,delayShow:ae,delayHide:de,float:ve,hidden:fe,noArrow:T,clickable:L,closeOnEsc:C,closeOnScroll:R,closeOnResize:x,openEvents:N,closeEvents:$,globalCloseEvents:I,imperativeModeOnly:B,style:z,position:D,isOpen:M,defaultIsOpen:W,border:V,opacity:F,arrowColor:K,setIsOpen:U,afterShow:X,afterHide:Y,disableTooltip:G,activeAnchor:Oe,setActiveAnchor:e=>ke(e),role:Z};return e.createElement(q,{...Ie})}));\"undefined\"!=typeof window&&window.addEventListener(\"react-tooltip-inject-styles\",(e=>{e.detail.disableCore||S({css:`:root{--rt-color-white:#fff;--rt-color-dark:#222;--rt-color-success:#8dc572;--rt-color-error:#be6464;--rt-color-warning:#f0ad4e;--rt-color-info:#337ab7;--rt-opacity:0.9;--rt-transition-show-delay:0.15s;--rt-transition-closing-delay:0.15s}.core-styles-module_tooltip__3vRRp{position:absolute;top:0;left:0;pointer-events:none;opacity:0;will-change:opacity}.core-styles-module_fixed__pcSol{position:fixed}.core-styles-module_arrow__cvMwQ{position:absolute;background:inherit}.core-styles-module_noArrow__xock6{display:none}.core-styles-module_clickable__ZuTTB{pointer-events:auto}.core-styles-module_show__Nt9eE{opacity:var(--rt-opacity);transition:opacity var(--rt-transition-show-delay)ease-out}.core-styles-module_closing__sGnxF{opacity:0;transition:opacity var(--rt-transition-closing-delay)ease-in}`,type:\"core\"}),e.detail.disableBase||S({css:`\n.styles-module_tooltip__mnnfp{padding:8px 16px;border-radius:3px;font-size:90%;width:max-content}.styles-module_arrow__K0L3T{width:8px;height:8px}[class*='react-tooltip__place-top']>.styles-module_arrow__K0L3T{transform:rotate(45deg)}[class*='react-tooltip__place-right']>.styles-module_arrow__K0L3T{transform:rotate(135deg)}[class*='react-tooltip__place-bottom']>.styles-module_arrow__K0L3T{transform:rotate(225deg)}[class*='react-tooltip__place-left']>.styles-module_arrow__K0L3T{transform:rotate(315deg)}.styles-module_dark__xNqje{background:var(--rt-color-dark);color:var(--rt-color-white)}.styles-module_light__Z6W-X{background-color:var(--rt-color-white);color:var(--rt-color-dark)}.styles-module_success__A2AKt{background-color:var(--rt-color-success);color:var(--rt-color-white)}.styles-module_warning__SCK0X{background-color:var(--rt-color-warning);color:var(--rt-color-white)}.styles-module_error__JvumD{background-color:var(--rt-color-error);color:var(--rt-color-white)}.styles-module_info__BWdHW{background-color:var(--rt-color-info);color:var(--rt-color-white)}`,type:\"base\"})}));export{M as Tooltip,I as TooltipProvider,B as TooltipWrapper,g as removeStyle};\n","import { DEFAULT_CRITICAL_COLOR, DEFAULT_OK_COLOR, DEFAULT_WARNING_COLOR } from '../defaults';\nimport React from 'react';\n\nimport { Color } from './color';\n\nexport interface GradientProps {\n  data: any;\n  gradientId: string;\n}\nexport const Gradients: React.FC<GradientProps> = (options) => {\n  const pureLight = new Color(255, 255, 255);\n\n  const createGradients = (data: any): any => {\n    const gradients = [];\n    const pureLight = new Color(255, 255, 255);\n    for (let i = 0; i < data.length; i++) {\n      const aColorStart = new Color(0, 0, 0);\n      // color can be in hex or in rgb\n      let useColor: string = data[i].color;\n      if (useColor.startsWith('rgba')) {\n        useColor = Color.RGBAToHex(useColor);\n      }\n      aColorStart.fromHex(useColor);\n      const aColorEnd = aColorStart.Mul(pureLight, 0.7);\n      gradients.push({ start: aColorStart.asHex(), end: aColorEnd.asHex() });\n    }\n    return gradients;\n  };\n  const colorGradients = createGradients(options.data);\n  const okColorStart = DEFAULT_OK_COLOR; // '#299c46', // \"rgba(50, 172, 45, 1)\", // green\n  const okColorEnd = okColorStart.Mul(pureLight, 0.7);\n  const warningColorStart = DEFAULT_WARNING_COLOR; // #FFC837 // '#e5ac0e', // \"rgba(237, 129, 40, 1)\", // yellow\n  const warningColorEnd = warningColorStart.Mul(pureLight, 0.7);\n  const criticalColorStart = DEFAULT_CRITICAL_COLOR; // #e52d27 // '#bf1b00', // \"rgba(245, 54, 54, 1)\", // red\n  const criticalColorEnd = criticalColorStart.Mul(pureLight, 0.7);\n\n  const gradientId = options.gradientId;\n  return (\n    <>\n      <defs>\n        {colorGradients.map((aGradient: any, index: number) => {\n          return (\n            <linearGradient\n              key={index}\n              id={gradientId + '_linear_gradient_state_data_' + index}\n              x1={'30%'}\n              y1={'30%'}\n              x2={'70%'}\n              y2={'70%'}\n            >\n              <stop offset={'0%'} stopColor={aGradient.start} />\n              <stop offset={'100%'} stopColor={aGradient.end} />\n            </linearGradient>\n          );\n        })}\n        <linearGradient id={gradientId + '_linear_gradient_state_ok'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={okColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={okColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient_state_warning'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={warningColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={warningColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient-state_critical'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={criticalColorStart.asHex()} />\n          <stop offset={'100%'} stopColor={criticalColorEnd.asHex()} />\n        </linearGradient>\n        <linearGradient id={gradientId + '_linear_gradient_state_unknown'} x1={'30%'} y1={'30%'} x2={'70%'} y2={'70%'}>\n          <stop offset={'0%'} stopColor={'#73808A'} />\n          <stop offset={'100%'} stopColor={'#73808A'} />\n        </linearGradient>\n      </defs>\n    </>\n  );\n};\n","import * as d3 from 'd3';\nimport { PolygonShapes, PolystatDiameters } from '../types';\nimport { LayoutPoint } from './types';\n/**\n * LayoutManager creates layouts for supported polygon shapes\n */\nexport class LayoutManager {\n  width: number;\n  height: number;\n  numColumns: number;\n  numRows: number;\n  radius: number;\n  autoSize: boolean;\n  maxRowsUsed: number;\n  maxColumnsUsed: number;\n  displayLimit: number;\n  shape: PolygonShapes;\n  readonly SQRT3 = 1.7320508075688772;\n\n  constructor(\n    width: number,\n    height: number,\n    numColumns: number,\n    numRows: number,\n    displayLimit: number,\n    autoSize: boolean,\n    shape: PolygonShapes\n  ) {\n    this.width = width;\n    this.height = height;\n    // check for less than 1 or NaN, force to 8\n    if (numColumns < 1 || isNaN(numColumns)) {\n      this.numColumns = 8;\n    } else {\n      this.numColumns = numColumns;\n    }\n    // check for less than 1 or NaN, force to 8\n    if (numRows < 1 || isNaN(numRows)) {\n      this.numRows = 8;\n    } else {\n      this.numRows = numRows;\n    }\n\n    this.maxColumnsUsed = 0;\n    this.maxRowsUsed = 0;\n\n    // negative or NaN limit gets set to 100, 0 is allowed for unlimited\n    if (displayLimit < 0 || isNaN(displayLimit)) {\n      this.displayLimit = 100;\n    } else {\n      this.displayLimit = displayLimit;\n    }\n    this.shape = shape;\n    this.radius = 0;\n    this.autoSize = autoSize;\n  }\n\n  /**\n   * Sets the radius to be used in all layout calculations\n   *\n   * @param radius user defined value\n   */\n  setRadius(radius: number) {\n    this.radius = radius;\n  }\n  setHeight(height: number) {\n    this.height = height;\n  }\n  setWidth(width: number) {\n    this.width = width;\n  }\n  /**\n   * returns a layout for hexagons with pointed tops\n   */\n  generateHexagonPointedTopLayout(): any {\n    const layout = {};\n    this.radius = this.getHexFlatTopRadius();\n    return layout;\n  }\n\n  /**\n   * returns a layout for square-shapes\n   */\n  generateUniformLayout(): any {\n    const layout = {};\n    this.radius = this.getUniformRadius();\n    return layout;\n  }\n\n  /**\n   * The maximum radius the hexagons can have to still fit the screen\n   * With (long) radius being R:\n   *  - Total width (rows > 1) = 1 small radius (sqrt(3) * R / 2) + columns * small diameter (sqrt(3) * R)\n   *  - Total height = 1 pointy top (1/2 * R) + rows * size of the rest (3/2 * R)\n   */\n  getHexFlatTopRadius(): number {\n    const polygonBorderSize = 0; // TODO: borderRadius should be configurable and part of the config\n    let hexRadius = d3.min([\n      this.width / ((this.numColumns + 0.5) * this.SQRT3),\n      this.height / ((this.numRows + 1 / 3) * 1.5),\n    ]);\n    if (hexRadius !== undefined) {\n      hexRadius = hexRadius - polygonBorderSize;\n      return this.truncateFloat(hexRadius);\n    }\n    // default to a reasonable value (should not happen though)\n    return 40;\n  }\n\n  /**\n   * Helper method to return rendered width and height of hexagon shape\n   */\n  getHexFlatTopDiameters(): PolystatDiameters {\n    const hexRadius = this.getHexFlatTopRadius();\n    const diameterX = this.truncateFloat(hexRadius * this.SQRT3);\n    const diameterY = this.truncateFloat(hexRadius * 2);\n    return { diameterX, diameterY };\n  }\n\n  /**\n   * Helper method to return rendered width and height of a circle/square shapes\n   */\n  getUniformDiameters(): PolystatDiameters {\n    const radius = this.getUniformRadius();\n    const diameterX = radius * 2;\n    const diameterY = radius * 2;\n    return { diameterX, diameterY };\n  }\n  /**\n   * Given the number of columns and rows, calculate the maximum size of a uniform shaped polygon that can be used\n   *   uniformed shapes are: square/circle\n   * width divided by the number of columns determines the max horizontal of the square\n   * height divided by the number of rows determines the max vertical size of the square\n   * the smaller of the two is used since that is the \"best fit\" for a square\n   */\n  getUniformRadius(): number {\n    const polygonBorderSize = 0; // TODO: borderRadius should be configurable and part of the config\n    // width divided by the number of columns determines the max horizontal of the square\n    // height divided by the number of rows determines the max vertical size of the square\n    // the smaller of the two is used since that is the \"best fit\"\n    const horizontalMax = (this.width / this.maxColumnsUsed) * 0.5;\n    const verticalMax = (this.height / this.maxRowsUsed) * 0.5;\n    let uniformRadius = horizontalMax;\n    if (uniformRadius > verticalMax) {\n      // vertically limited\n      uniformRadius = verticalMax;\n    }\n    // internal border\n    uniformRadius = uniformRadius - polygonBorderSize;\n    return this.truncateFloat(uniformRadius);\n  }\n\n  generatePossibleColumnAndRowsSizes(columnAutoSize: boolean, rowAutoSize: boolean, dataSize: number) {\n    if (rowAutoSize && columnAutoSize) {\n      // sqrt of # data items\n      const squared = Math.sqrt(dataSize);\n      // favor columns when width is greater than height\n      // favor rows when width is less than height\n      if (this.width > this.height) {\n        this.numColumns = Math.ceil((this.width / this.height) * squared * 0.75);\n        // always at least 1 column and max. data.length columns\n        if (this.numColumns < 1) {\n          this.numColumns = 1;\n        } else if (this.numColumns > dataSize) {\n          this.numColumns = dataSize;\n        }\n\n        // Align rows count to computed columns count\n        this.numRows = Math.ceil(dataSize / this.numColumns);\n        // always at least 1 row\n        if (this.numRows < 1) {\n          this.numRows = 1;\n        }\n      } else {\n        this.numRows = Math.ceil((this.height / this.width) * squared * 0.75);\n        // always at least 1 row and max. data.length rows\n        if (this.numRows < 1) {\n          this.numRows = 1;\n        } else if (this.numRows > dataSize) {\n          this.numRows = dataSize;\n        }\n        // Align columns count to computed rows count\n        this.numColumns = Math.ceil(dataSize / this.numRows);\n        // always at least 1 column\n        if (this.numColumns < 1) {\n          this.numColumns = 1;\n        }\n      }\n    } else if (rowAutoSize) {\n      // Align rows count to fixed columns count\n      this.numRows = Math.ceil(dataSize / this.numColumns);\n      // always at least 1 row\n      if (this.numRows < 1) {\n        this.numRows = 1;\n      }\n    } else if (columnAutoSize) {\n      // Align columns count to fixed rows count\n      this.numColumns = Math.ceil(dataSize / this.numRows);\n      // always at least 1 column\n      if (this.numColumns < 1) {\n        this.numColumns = 1;\n      }\n    }\n  }\n\n  /**\n   * This determines how many rows and columns are going to be rendered, which can then\n   * be used to calculate the radius size (which is needed before generating points)\n   * @param data metrics\n   * @param displayLimit max number of polygons to show\n   */\n  generateActualColumnAndRowUsage(data: any, displayLimit: number) {\n    let polygonsUsed = 0;\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || polygonsUsed < displayLimit) && polygonsUsed < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || polygonsUsed < displayLimit) && polygonsUsed < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            polygonsUsed++;\n          }\n        }\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n  }\n\n  shapeToCoordinates(shape: PolygonShapes, radius: number, column: number, row: number) {\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        let x = radius * column * this.SQRT3;\n        //Offset each uneven row by half of a \"hex-width\" to the right\n        if (row % 2 === 1) {\n          x += (radius * this.SQRT3) / 2;\n        }\n        const y = radius * row * 1.5;\n        return [x, y];\n      case PolygonShapes.CIRCLE:\n        return [radius * column * 2, radius * row * 2];\n      case PolygonShapes.SQUARE:\n        return [radius * column * 2, radius * row * 2];\n      default:\n        return [radius * column * 1.75, radius * row * 1.5];\n    }\n  }\n\n  // Builds the placeholder polygons needed to represent each metric\n  generatePoints(data: any, displayLimit: number, shape: PolygonShapes): LayoutPoint[] {\n    const points: LayoutPoint[] = [];\n    if (typeof data === 'undefined') {\n      return points;\n    }\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    // when duplicating panels, this gets odd\n    if (this.numRows === Infinity) {\n      return points;\n    }\n    if (isNaN(this.numColumns)) {\n      return points;\n    }\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            let coords = this.shapeToCoordinates(shape, this.radius, j, i);\n            const aPoint: LayoutPoint = {\n              x: coords[0],\n              y: coords[1],\n            }\n            points.push(aPoint);\n          }\n        }\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n    return points;\n  }\n\n  generateUniformPoints(data: any, displayLimit: number): any {\n    const points = [] as any;\n    if (typeof data === 'undefined') {\n      return points;\n    }\n    let maxRowsUsed = 0;\n    let columnsUsed = 0;\n    let maxColumnsUsed = 0;\n    let xPos = 1;\n    let yPos = 1;\n\n    // when duplicating panels, this gets odd\n    if (this.numRows === Infinity) {\n      return points;\n    }\n    if (isNaN(this.numColumns)) {\n      return points;\n    }\n    for (let i = 0; i < this.numRows; i++) {\n      if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n        maxRowsUsed += 1;\n        columnsUsed = 0;\n        for (let j = 0; j < this.numColumns; j++) {\n          if ((!displayLimit || points.length < displayLimit) && points.length < data.length) {\n            columnsUsed += 1;\n            // track the most number of columns\n            if (columnsUsed > maxColumnsUsed) {\n              maxColumnsUsed = columnsUsed;\n            }\n            points.push({\n              x: xPos,\n              y: yPos,\n              width: this.radius * 2,\n              height: this.radius * 2,\n            });\n            xPos += this.radius * 2;\n          }\n        }\n        xPos = 1;\n        yPos += this.radius * 2;\n      }\n    }\n    this.maxRowsUsed = maxRowsUsed;\n    this.maxColumnsUsed = maxColumnsUsed;\n    return points;\n  }\n\n  generateRadius(shape: PolygonShapes): number {\n    if (!this.autoSize) {\n      return this.radius;\n    }\n    let radius = 0;\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        radius = this.getHexFlatTopRadius();\n        break;\n      case PolygonShapes.CIRCLE:\n        radius = this.getUniformRadius();\n        break;\n      case PolygonShapes.SQUARE:\n        radius = this.getUniformRadius();\n        break;\n      default:\n        radius = this.getHexFlatTopRadius();\n        break;\n    }\n    this.radius = radius;\n    return radius;\n  }\n\n  truncateFloat(value: number): number {\n    if (value === Infinity || isNaN(value)) {\n      return 0;\n    }\n    const matches = value.toString().match(/^-?\\d+(?:\\.\\d{0,2})?/);\n    if (matches !== null && matches.length > 0) {\n      return Number(matches[0]);\n    }\n    return 0;\n  }\n\n  getOffsets(shape: PolygonShapes, dataSize: number): any {\n    switch (shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return this.getOffsetsHexagonPointedTop(dataSize);\n      case PolygonShapes.SQUARE:\n        return this.getOffsetsSquare(dataSize);\n      case PolygonShapes.CIRCLE:\n        return this.getOffsetsUniform(dataSize);\n      default:\n        return this.getOffsetsUniform(dataSize);\n    }\n  }\n\n  getOffsetsHexagonPointedTop(dataSize: number): any {\n    let hexRadius = d3.min([\n      this.width / ((this.numColumns + 0.5) * this.SQRT3),\n      this.height / ((this.numRows + 1 / 3) * 1.5),\n    ]);\n    hexRadius = this.truncateFloat(hexRadius as number);\n    const shapeWidth = this.truncateFloat(hexRadius * this.SQRT3);\n    const shapeHeight = this.truncateFloat(hexRadius * 2);\n\n    const offsetToViewY = shapeHeight * 0.5;\n    // even rows are half-sized\n    const { oddCount, evenCount } = this.getOddEvenCountForRange(1, this.maxRowsUsed);\n    // odd-numbered hexagons are full height, evens are half height\n    const actualHeightUsed = oddCount * shapeHeight + evenCount * shapeHeight * 0.5;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n\n    const offsetToViewX = shapeWidth * 0.5;\n    // columns have a half-width offset if there are more than 1 rows\n    let widthOffset = 0;\n    if (this.numRows > 1) {\n      // if the dataSize is equal to or larger than the 2*Columns, there is an additional offset needed\n      if (dataSize >= this.maxColumnsUsed * 2) {\n        widthOffset = 0.5;\n      }\n    }\n    const actualWidthUsed = (this.numColumns + widthOffset) * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOffsetsUniform(dataSize: number): any {\n    const { diameterX, diameterY } = this.getDiameters();\n    const shapeWidth = this.truncateFloat(diameterX);\n    const shapeHeight = this.truncateFloat(diameterY);\n    const offsetToViewY = shapeHeight * 0.5;\n    const actualHeightUsed = this.maxRowsUsed * shapeHeight;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n    const offsetToViewX = shapeWidth * 0.5;\n    const actualWidthUsed = this.numColumns * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOffsetsSquare(dataSize: number): any {\n    const { diameterX, diameterY } = this.getDiameters();\n    const shapeWidth = this.truncateFloat(diameterX);\n    const shapeHeight = this.truncateFloat(diameterY);\n    const offsetToViewY = 0; // shapeHeight * 0.5;\n    const actualHeightUsed = this.maxRowsUsed * shapeHeight;\n    let yoffset = (this.height - actualHeightUsed) / 2;\n    yoffset = -(yoffset + offsetToViewY);\n    const offsetToViewX = 0; //shapeWidth * 0.5;\n    const actualWidthUsed = this.numColumns * shapeWidth;\n    let xoffset = (this.width - actualWidthUsed) / 2;\n    xoffset = -(xoffset + offsetToViewX);\n    return { xoffset, yoffset };\n  }\n\n  getOddEvenCountForRange(L: number, R: number): any {\n    let oddCount = (R - L) / 2;\n    // if either R or L is odd\n    if (R % 2 !== 0 || L % 2 !== 0) {\n      oddCount++;\n    }\n    const evenCount = R - L + 1 - oddCount;\n    return { oddCount, evenCount };\n  }\n\n  /**\n   * Returns diameterX and diameterY for given shape\n   */\n  getDiameters(): PolystatDiameters {\n    switch (this.shape) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return this.getHexFlatTopDiameters();\n      case PolygonShapes.SQUARE:\n        return this.getUniformDiameters();\n      case PolygonShapes.CIRCLE:\n        return this.getUniformDiameters();\n      default:\n        return this.getUniformDiameters();\n    }\n  }\n}\n","import { GrafanaTheme2 } from '@grafana/data';\nimport { css } from '@emotion/css';\n\nexport const getErrorMessageStyles = (theme: GrafanaTheme2) => css`\n  font-size: ${theme.typography.h1.fontSize};\n  text-align: center;\n  justify-content: center;\n  color: ${theme.colors.error.shade};\n`;\n\nexport const getNoTriggerTextStyles = (theme: GrafanaTheme2) => css`\n  font-size: ${theme.typography.h1.fontSize};\n  text-align: center;\n  justify-content: center;\n  color: ${theme.colors.success.shade};\n`;\n\nexport const getWrapperStyles = (theme: GrafanaTheme2) => css`\n  fill: transparent;\n  display: flex;\n  align-items: center;\n  text-align: center;\n  justify-content: center;\n`;\n\nexport const getSVGStyles = (theme: GrafanaTheme2) => css`\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n  fill: transparent;\n`;\n\nexport const getSVGPathStyles = (theme: GrafanaTheme2) => css`\n  outline: none !important;\n`;\n","import React from 'react';\nimport { css } from '@emotion/css';\nimport { orderBy as lodashOrderBy } from 'lodash';\nimport { useStyles2 } from '@grafana/ui';\nimport { GrafanaTheme2, dateTimeFormatWithAbbrevation } from '@grafana/data';\nimport { PolystatModel, SortOptions } from '../types';\n\nexport interface TooltipProps {\n  data: PolystatModel | undefined;\n  valueEnabled: boolean;\n  tooltipColumnHeadersEnabled: boolean;\n  renderTime: Date;\n  showTime: boolean;\n  primarySortByField: string;\n  primarySortDirection: number;\n  secondarySortByField: string;\n  secondarySortDirection: number;\n  displayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n  tooltipFontFamily: string;\n}\n\nexport const Tooltip = ({\n  data,\n  renderTime,\n  showTime,\n  valueEnabled,\n  tooltipColumnHeadersEnabled,\n  primarySortByField,\n  primarySortDirection,\n  secondarySortByField,\n  secondarySortDirection,\n  displayMode,\n  tooltipDisplayTextTriggeredEmpty,\n  tooltipFontFamily,\n}: TooltipProps) => {\n  const styles = useStyles2(getTooltipStyles);\n\n  // check for timestamp in data, override renderTime when present\n  if (data?.timestamp) {\n    renderTime = new Date(data?.timestamp);\n  }\n  /* the name of the composite is shown at the top */\n  const getCompositeHeader = (data: PolystatModel | null) => {\n    if (data && data.members && data.members.length === 0) {\n      return '';\n    }\n    return (\n      <tr>\n        <th className={styles.tooltipCompositeHeading} colSpan={2}>\n          {data?.displayName}\n        </th>\n      </tr>\n    );\n  };\n\n  const multiSort = (\n    data: PolystatModel,\n    primarySortDirection: number,\n    primarySortByField: string,\n    secondarySortDirection: number,\n    secondarySortByField: string\n  ) => {\n    let sortSettings = getSortDirection(SortOptions[primarySortDirection].value);\n    const pUseLowercase = sortSettings.lowerCase;\n    const pDirection = sortSettings.direction as any;\n    sortSettings = getSortDirection(SortOptions[secondarySortDirection].value);\n    const sDirection = sortSettings.direction as any;\n    const sUseLowercase = sortSettings.lowerCase;\n\n    let pSortFunction = primarySortByField as any;\n    if (pUseLowercase) {\n      pSortFunction = (item: any) => {\n        let val = item[primarySortByField];\n        if (typeof val !== 'number') {\n          val = val.toLowerCase();\n        }\n        return val;\n      };\n    }\n    let sSortFunction = secondarySortByField as any;\n    if (sUseLowercase) {\n      sSortFunction = (item: any) => {\n        let val = item[secondarySortByField];\n        if (typeof val !== 'number') {\n          val = val.toLowerCase();\n        }\n        return val;\n      };\n    }\n    return lodashOrderBy(data.members, [pSortFunction, sSortFunction], [pDirection, sDirection]);\n  };\n\n  const getTriggeredCount = (data: PolystatModel) => {\n    let triggered = 0;\n    if (data.thresholdLevel !== 0) {\n      triggered++;\n    }\n    for (let j = 0; j < data.members.length; j++) {\n      if (data.members[j].thresholdLevel !== 0) {\n        triggered++;\n      }\n    }\n    return triggered;\n  };\n\n  const filterTriggered = (items: PolystatModel) => {\n    const triggerCount = getTriggeredCount(items);\n    // clone model\n    const compositeWithTriggeredItemsOnly = Object.assign({}, items);\n    // start with no triggered members\n    compositeWithTriggeredItemsOnly.members = [];\n    if (triggerCount > 0) {\n      for (let i = 0; i < items.members.length; i++) {\n        // non-OK (state 0) members will be appended to the cloned model\n        if (items.members[i].thresholdLevel !== 0) {\n          compositeWithTriggeredItemsOnly.members.push(items.members[i]);\n        }\n      }\n      return compositeWithTriggeredItemsOnly;\n    } else {\n      return null;\n    }\n  };\n\n  const getCompositeMetrics = (data: PolystatModel | null) => {\n    let dataToSort = data;\n    if (dataToSort && data && displayMode === 'triggered') {\n      dataToSort = filterTriggered(data);\n    }\n    if (dataToSort === null) {\n      return <>{tooltipDisplayTextTriggeredEmpty}</>;\n    }\n    const sortedMembers = multiSort(\n      dataToSort,\n      primarySortDirection,\n      primarySortByField,\n      secondarySortDirection,\n      secondarySortByField\n    );\n    return sortedMembers.map((item: PolystatModel, index: number) => {\n      return (\n        <tr key={index} style={{ color: item.color }}>\n          <td className={styles.tooltipName}>{item.displayName}</td>\n          {valueEnabled && <td className={styles.tooltipValue}>{item.valueFormatted}</td>}\n        </tr>\n      );\n    });\n  };\n\n  const generateContent = () => {\n    return (\n      <table style={{ fontFamily: tooltipFontFamily }} className={styles.tooltipTable}>\n        <thead>\n          {data && data.isComposite && getCompositeHeader(data)}\n          <tr>\n            {tooltipColumnHeadersEnabled && <th className={styles.tooltipNameHeading}>Name</th>}\n            {tooltipColumnHeadersEnabled && valueEnabled && <th className={styles.tooltipValueHeading}>Value</th>}\n          </tr>\n        </thead>\n        <tfoot>\n          {showTime && (\n            <tr>\n              <td className={styles.tooltipTime} colSpan={2}>\n                {dateTimeFormatWithAbbrevation(renderTime)}\n              </td>\n            </tr>\n          )}\n        </tfoot>\n        <tbody>\n          {data && data.isComposite ? (\n            getCompositeMetrics(data)\n          ) : (\n            <tr style={{ color: data?.color }}>\n              <td className={styles.tooltipName}>{data?.displayName}</td>\n              {valueEnabled && <td className={styles.tooltipValue}>{data?.valueFormatted}</td>}\n            </tr>\n          )}\n        </tbody>\n      </table>\n    );\n  };\n\n  // Generate content\n  return generateContent();\n};\n\nconst getTooltipStyles = (theme: GrafanaTheme2) => {\n  return {\n    root: css`\n      border-radius: ${theme.shape.borderRadius(1)};\n      background-color: ${theme.colors.background.primary};\n      box-shadow: ${theme.shadows.z2};\n      padding: ${theme.spacing(1)};\n    `,\n    tooltipTable: css`\n      width: 100%;\n      color: ${theme.colors.text.primary};\n      height: auto;\n      padding: 10px;\n    `,\n    tooltipTime: css`\n      text-align: center;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipNameHeading: css`\n      text-align: left;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipValueHeading: css`\n      text-align: right;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipCompositeHeading: css`\n      text-align: center;\n      color: ${theme.colors.text.primary};\n    `,\n    tooltipName: css`\n      text-align: left;\n    `,\n    tooltipValue: css`\n      text-align: right;\n      padding-left: 15px;\n    `,\n  };\n};\n\nconst getSortDirection = (val: number) => {\n  switch (val) {\n    case 0:\n      return { direction: null, lowerCase: false };\n    case 1:\n      return { direction: 'asc', lowerCase: false };\n    case 2:\n      return { direction: 'desc', lowerCase: false };\n    case 3:\n      return { direction: 'asc', lowerCase: false };\n    case 4:\n      return { direction: 'desc', lowerCase: false };\n    case 5:\n      return { direction: 'asc', lowerCase: true };\n    case 6:\n      return { direction: 'desc', lowerCase: true };\n    default:\n      return { direction: 'asc', lowerCase: false };\n  }\n};\n","import { sortBy as lodashSortBy, toLower as lodashToLower, isNumber as lodashIsNumber } from 'lodash';\n\nfunction GetDecimalsForValue(value: any, panelDecimals: any): { decimals: number; scaledDecimals: any } {\n  if (lodashIsNumber(panelDecimals)) {\n    return { decimals: panelDecimals, scaledDecimals: null };\n  }\n\n  const delta = value / 2;\n  let dec = -Math.floor(Math.log(delta) / Math.LN10);\n\n  const magn = Math.pow(10, -dec);\n  const norm = delta / magn; // norm is between 1.0 and 10.0\n  let size;\n\n  if (norm < 1.5) {\n    size = 1;\n  } else if (norm < 3) {\n    size = 2;\n    // special case for 2.5, requires an extra decimal\n    if (norm > 2.25) {\n      size = 2.5;\n      ++dec;\n    }\n  } else if (norm < 7.5) {\n    size = 5;\n  } else {\n    size = 10;\n  }\n\n  size *= magn;\n\n  // reduce starting decimals if not needed\n  if (Math.floor(value) === value) {\n    dec = 0;\n  }\n\n  const result = {\n    decimals: 0,\n    scaledDecimals: 0,\n  };\n  result.decimals = Math.max(0, dec);\n  result.scaledDecimals = result.decimals - Math.floor(Math.log(size) / Math.LN10) + 2;\n  return result;\n}\n\n/**\n * Find the largest font size (in pixels) that allows the string to fit in the given width.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold ?px verdana\")\n *                      -- note the use of ? in place of the font size.\n * @param {number} width width in pixels the string must fit in\n * @param {number} minFontPx the smallest acceptable font size in pixels\n * @param {number} maxFontPx the largest acceptable font size in pixels\n */\nfunction getTextSizeForWidth(text: string, font: any, width: number, minFontPx: number, maxFontPx: number) {\n  let s = font.replace('?', maxFontPx);\n  let w = getTextWidth(text, s);\n  if (w <= width) {\n    return maxFontPx;\n  }\n  // pad width by 10px\n  width = width - 20;\n  // start from large to small, return 0 for no-fit\n  for (let fontSize = maxFontPx; fontSize >= minFontPx; fontSize--) {\n    s = font.replace('?', fontSize);\n    w = getTextWidth(text, s);\n    if (w < width) {\n      return Math.ceil(fontSize);\n    }\n  }\n  // 0 if no fit\n  return 0;\n}\n\n/**\n * Find the largest font size (in pixels) that allows the string to fit in the given width.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold ?px verdana\")\n *                      -- note the use of ? in place of the font size.\n * @param {number} width the width in pixels the string must fit in\n * @param {number} height the height in pixels\n * @param {number} minFontPx the smallest acceptable font size in pixels\n * @param {number} maxFontPx the largest acceptable font size in pixels\n */\nfunction getTextSizeForWidthAndHeight(\n  text: string,\n  font: any,\n  width: number,\n  height: number,\n  minFontPx: number,\n  maxFontPx: number\n) {\n  let s = font.replace('?', maxFontPx);\n  let w = getTextWidth(text, s);\n  // need to pad the width: use 80% of the space (leave 10% padding on each side)\n  width = width * 0.95;\n  if (w <= width && maxFontPx <= height) {\n    return maxFontPx;\n  }\n  // start from large to small, return 0 for no-fit\n  for (let fontSize = maxFontPx; fontSize >= minFontPx; fontSize--) {\n    s = font.replace('?', fontSize);\n    w = getTextWidth(text, s);\n    // has to fit within the width of the text area, and not exceed the height\n    if (w < width && fontSize <= height) {\n      return Math.ceil(fontSize);\n    }\n  }\n  // 0 if no fit\n  return 0;\n}\n\n/**\n * Uses canvas.measureText to compute and return the width of the given text of given font in pixels.\n *\n * @param {String} text The text to be rendered.\n * @param {String} font The css font descriptor that text is to be rendered with (e.g. \"bold 14px verdana\").\n *\n * @see https://stackoverflow.com/questions/118241/calculate-text-width-with-javascript/21015393#21015393\n */\nfunction getTextWidth(text: string, font: string) {\n  // re-use canvas object for better performance\n  // intentional use of deprecated function (no widely implemented alternative)\n  // eslint-disable-next-line deprecation/deprecation\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext('2d');\n  if (context) {\n    context.font = font;\n    const metrics = context.measureText(text);\n    return metrics.width;\n  }\n  return 40; // unknown due to context failure\n}\n\nfunction RGBToHex(text: string) {\n  // check if in rgb notation\n  if (!text.startsWith('rgb')) {\n    return text;\n  }\n  let hex = '#FFFFFF';\n  try {\n    const a = text.split('(')[1].split(')')[0];\n    const b = a.split(',');\n    const c = b.map((x) => {\n      // For each array element\n      x = parseInt(x, 10).toString(16); // Convert to a base16 string\n      return x.length === 1 ? '0' + x : x; // Add zero if we get only one character\n    });\n    hex = '#' + c.join('');\n  } catch (e) {\n    return hex;\n  }\n  return hex;\n}\n\nfunction getTextOrValue(o: any) {\n  if (isNaN(o)) {\n    return o;\n  } else {\n    return Number(o);\n  }\n}\n\nfunction SortVariableValuesByField(options: any, sortField: string, sortOrder: number) {\n  if (sortOrder === 0) {\n    return options;\n  }\n  const sortType = Math.ceil(sortOrder / 2);\n  const reverseSort = sortOrder % 2 === 0;\n\n  switch (sortType) {\n    case 1: // Alphabetical Case Sensitive\n      options = lodashSortBy(options, sortField);\n      break;\n    case 2: // Numerical with sub-match\n      options = lodashSortBy(options, (item) => {\n        // if the content of the field to sort by is textual, check if there is a numerical area to sort by\n        if (isNaN(item[sortField])) {\n          const matchField = item[sortField];\n          const matches = matchField.match(/.*?(\\d+).*/);\n          if (!matches || matches.length < 2) {\n            return -1;\n          } else {\n            return parseInt(matches[1], 10);\n          }\n        } else {\n          return getTextOrValue(item[sortField]);\n        }\n      });\n      break;\n    case 3: // Alphabetical Case Insensitive\n      options = lodashSortBy(options, (item) => {\n        const itemContent = item[sortField];\n        if (isNaN(itemContent)) {\n          return lodashToLower(item[sortField]);\n        } else {\n          return itemContent;\n        }\n      });\n      break;\n    case 4: // Natural Sort\n      const collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n      options = options.slice(); // Shallow clone original array\n      options.sort((a: any, b: any) => {\n        return collator.compare(a[sortField], b[sortField]);\n      });\n      break;\n  }\n\n  if (reverseSort) {\n    options = options.reverse();\n  }\n\n  return options;\n}\n\nconst roundValue = (num: number, decimals: number): number | null => {\n  if (num === null) {\n    return null;\n  }\n  const n = Math.pow(10, decimals);\n  const formatted = (n * num).toFixed(decimals);\n  return Math.round(parseFloat(formatted)) / n;\n};\n\nexport {\n  GetDecimalsForValue,\n  getTextSizeForWidth,\n  getTextSizeForWidthAndHeight,\n  getTextWidth,\n  RGBToHex,\n  SortVariableValuesByField,\n  getTextOrValue,\n  roundValue\n};\n","import { PolystatModel } from \"./types\";\nimport { getTextSizeForWidthAndHeight } from '../utils';\n\n\nexport const AutoFontScalar = (\n  fontFamily: string,\n  textAreaWidth: number,\n  textAreaHeight: number,\n  valueEnabled: boolean,\n  showTimestamp: boolean,\n  data: PolystatModel[]\n) => {\n  // TODO: 6 is VERY small, perhaps 10 as a min?\n  // A hint from the config could be used (max characters)\n  const minFont = 6;\n  const maxFont = 240;\n  // this ensures we have space between label and value\n  const maxLinesToDisplay = 2;\n  let showEllipses = false;\n  // number of characters to show on polygon\n  let numOfChars = 0;\n\n  // find the most text that will be displayed over all items\n  // displayName will have the \"processed\" name with Global Regex applied\n  let maxLabel = getMaxLabel(data);\n  // estimate how big of a font can be used\n  // Two lines of text must fit with vertical spacing included\n  // if it is too small, hide everything\n  let activeLabelFontSize = computeTextFontSize(\n    maxLabel,\n    fontFamily,\n    minFont,\n    maxFont,\n    maxLinesToDisplay,\n    textAreaWidth,\n    textAreaHeight\n  );\n  if (activeLabelFontSize < minFont) {\n    showEllipses = true;\n    numOfChars = 18;\n    maxLabel = maxLabel.substring(0, numOfChars + 2);\n    activeLabelFontSize = computeTextFontSize(\n      maxLabel,\n      fontFamily,\n      minFont,\n      maxFont,\n      maxLinesToDisplay,\n      textAreaWidth,\n      textAreaHeight\n    );\n    if (activeLabelFontSize < minFont) {\n      numOfChars = 10;\n      maxLabel = maxLabel.substring(0, numOfChars + 2);\n      activeLabelFontSize = computeTextFontSize(\n        maxLabel,\n        fontFamily,\n        minFont,\n        maxFont,\n        maxLinesToDisplay,\n        textAreaWidth,\n        textAreaHeight\n      );\n      if (activeLabelFontSize < minFont) {\n        numOfChars = 6;\n        maxLabel = maxLabel.substring(0, numOfChars + 2);\n        activeLabelFontSize = computeTextFontSize(\n          maxLabel,\n          fontFamily,\n          minFont,\n          maxFont,\n          maxLinesToDisplay,\n          textAreaWidth,\n          textAreaHeight\n        );\n      }\n    }\n  }\n\n  // same for the value and timestamp option, also check for sub metrics size in case of composite\n  let {maxValue, maxTimestamp} = getMaxValueAndTimestamp(data);\n  // assume no timestamp\n  let activeValueFontSize = computeTextFontSize(\n    maxValue,\n    fontFamily,\n    minFont,\n    maxFont,\n    maxLinesToDisplay,\n    textAreaWidth,\n    textAreaHeight\n  );\n  if (showTimestamp) {\n    // two lines to be displayed, sharing half of the normal space for the value\n    activeValueFontSize = computeTextFontSize(\n      maxValue,\n      fontFamily,\n      minFont,\n      maxFont,\n      2,\n      textAreaWidth,\n      (textAreaHeight * 0.67)\n    );\n  }\n  // timestamp shares the same space as the value, but is always smaller\n  let activeTimestampFontSize = computeTextFontSize(\n    maxTimestamp,\n    fontFamily,\n    minFont,\n    maxFont,\n    2,\n    textAreaWidth,\n    (textAreaHeight * 0.33)\n  );\n\n  if (activeTimestampFontSize < minFont) {\n    // do not render it, too small\n    activeTimestampFontSize = 0;\n  }\n\n  // NOTE: allow different sizes, the value could be displayed larger than the label\n  // value should never be larger than the label\n  //if (activeValueFontSize > activeLabelFontSize) {\n  //  activeValueFontSize = activeLabelFontSize;\n  //}\n  let activeCompositeValueFontSize = activeValueFontSize;\n  let haveCompositeValueEnabled = false;\n  // check if there are any composites with value enabled\n  if (data) {\n    for (let i = 0; i < data.length; i++) {\n      const item = data[i];\n      if (item.isComposite && item.showValue) {\n        // at least one composite has showValue set\n        haveCompositeValueEnabled = true;\n        break;\n      }\n    }\n  }\n  if (!valueEnabled) {\n    activeValueFontSize = 0;\n    // if there are no composites with value enabled, set it to zero also\n    if (!haveCompositeValueEnabled) {\n      activeCompositeValueFontSize = 0;\n    }\n  }\n\n  return { activeLabelFontSize, activeValueFontSize, activeCompositeValueFontSize, activeTimestampFontSize, showEllipses, numOfChars };\n};\n\n/**\n * Finds the longest text that to be displayed\n *\n * @param   {PolystatModel[]}  data  [PolystatModel data]\n *\n * @return  {string}                     [longest label as a string]\n */\nconst getMaxLabel = (data: PolystatModel[]): string => {\n  let maxLabel = '';\n  for (let i = 0; i < data.length; i++) {\n    let nameToCheck = data[i].name;\n    // use the displayName since it has been formatted\n    if (data[i].displayName !== '') {\n      nameToCheck = data[i].displayName;\n    }\n    if (nameToCheck.length > maxLabel.length) {\n      maxLabel = nameToCheck;\n    }\n  }\n  return maxLabel;\n};\n\n/**\n * Finds the longest value and timestamp text to be displayed\n *\n * @param   {PolystatModel[]} data [PolystatModel data]\n *\n * @return  {string[]} [value,timestamp]\n */\nconst getMaxValueAndTimestamp = (data: PolystatModel[]) => {\n  // same for the value, also check for sub metrics size in case of composite\n  // timestamp is also calculated here\n  let maxValue = '';\n  let maxTimestamp = '';\n  for (let i = 0; i < data.length; i++) {\n    if (data[i].valueFormatted.length > maxValue.length) {\n      maxValue = data[i].valueFormatted;\n    }\n    if (data[i].timestampFormatted.length > maxTimestamp.length) {\n      maxTimestamp = data[i].timestampFormatted;\n    }\n    const subMetricCount = data[i].members.length;\n    if (subMetricCount > 0) {\n      let counter = 0;\n      while (counter < subMetricCount) {\n        const checkContent = data[i].members[counter].displayName + ': ' + data[i].members[counter].valueFormatted;\n        if (checkContent && checkContent.length > maxValue.length) {\n          maxValue = checkContent;\n        }\n        const checkCompositeTimestamp = data[i].members[counter].timestampFormatted;\n        if (checkCompositeTimestamp && checkCompositeTimestamp.length > maxTimestamp.length) {\n          maxTimestamp = checkCompositeTimestamp;\n        }\n        counter++;\n      }\n    }\n  }\n  return {maxValue, maxTimestamp};\n};\n\nconst computeTextFontSize = (\n  text: string,\n  font: string,\n  minFont: number,\n  maxFont: number,\n  linesToDisplay: number,\n  textAreaWidth: number,\n  textAreaHeight: number\n): number => {\n  return getTextSizeForWidthAndHeight(\n    text,\n    `?px ${font}`,\n    textAreaWidth,\n    textAreaHeight / linesToDisplay, // multiple lines of text\n    minFont,\n    maxFont\n  );\n};\n","import React, { useEffect, createRef, useCallback } from 'react';\nimport { textUtil } from '@grafana/data';\nimport { useStyles2, Portal, useTheme2 } from '@grafana/ui';\nimport { symbol as d3symbol, symbolCircle, symbolSquare } from 'd3';\nimport { hexbin } from 'd3-hexbin';\nimport { orderBy as lodashOrderBy } from 'lodash';\nimport { Tooltip as ReactTooltip } from 'react-tooltip';\n\nimport { Gradients } from './gradients/Gradients';\nimport { LayoutManager } from './layout/layoutManager';\nimport { PolystatOptions, PolygonShapes, PolystatModel, DisplayModes, TimestampPositions } from './types';\n\nimport { getErrorMessageStyles, getNoTriggerTextStyles, getSVGPathStyles, getSVGStyles, getWrapperStyles } from './styles';\nimport { Tooltip } from './tooltips/Tooltip';\nimport { AutoFontScalar } from './auto_font_scaler';\nimport { GetAlignments } from './alignment';\n\nexport const Polystat: React.FC<PolystatOptions> = (options) => {\n  const divStyles = useStyles2(getWrapperStyles);\n  const svgStyles = useStyles2(getSVGStyles);\n  const svgPathStyles = useStyles2(getSVGPathStyles);\n  const noTriggerTextStyles = useStyles2(getNoTriggerTextStyles);\n  const errorMessageStyles = useStyles2(getErrorMessageStyles);\n  const tooltipTheme = useTheme2().isDark ? 'dark' : 'light';\n  // used to change/animate text in polygon\n  const [animationRefs, setAnimationRefs] = React.useState([] as any);\n  const [animationTimestampRefs, setAnimationTimestampRefs] = React.useState([] as any);\n  // tracks which metric to display during animation of a composite\n  const [animationMetricIndexes, setAnimationMetricIndexes] = React.useState([] as any);\n  const [animatedItems, setAnimatedItems] = React.useState<number[]>([]);\n  const margin = { top: 0, right: 0, bottom: 0, left: 0 };\n  // this MUST be unique for gradients to work properly\n  const [uniquePanelId] = React.useState<string>(`polystat_${options.panelId}_` + Math.floor(Math.random() * 10000).toString());\n\n  const updateAnimation = (data: PolystatModel[]) => {\n    if (data.length > 0) {\n      const newAnimationRefs = [];\n      const newAnimationTimestampRefs = [];\n      const newAnimationMetricIndexes = [];\n      for (let i = 0; i < data!.length; i++) {\n        newAnimationRefs.push(createRef());\n        newAnimationTimestampRefs.push(createRef());\n        newAnimationMetricIndexes.push(0);\n      }\n      if (newAnimationRefs.length > 0) {\n        if (animationRefs.length !== newAnimationRefs.length) {\n          setAnimationRefs(newAnimationRefs);\n          setAnimationTimestampRefs(newAnimationTimestampRefs);\n          setAnimationMetricIndexes(newAnimationMetricIndexes);\n        }\n      }\n    }\n  };\n\n  /*\n    This is the animation method that will cycle through the metrics for a composite\n   */\n  const animateComposite = useCallback(() => {\n    for (let i = 0; i < animatedItems.length; i++) {\n      let index = animatedItems[i];\n      let metricIndex = animationMetricIndexes[index];\n\n      // composites can have animated values displayed\n      let isValueAnimated = false;\n      if (options.globalShowValueEnabled ||\n        (options.processedData && options.processedData[index].isComposite && options.processedData[index].showValue)\n      ) {\n        isValueAnimated = true;\n      }\n      if (isValueAnimated && options.processedData && (animationRefs.length > 0 && animationRefs[index].current)) {\n        const item = options.processedData[index];\n        const val = formatCompositeValueAndTimestamp(metricIndex, item, options.globalDisplayTextTriggeredEmpty)[0];\n        if (animationRefs[index].current.innerHTML !== null) {\n          animationRefs[index].current.innerHTML = val;\n        }\n      }\n      // currently global setting determines if timestamp is animated\n      if (options.globalShowTimestampEnabled && options.processedData && (animationTimestampRefs.length > 0 && animationTimestampRefs[index].current)) {\n        const item = options.processedData[index];\n        const ts = formatCompositeValueAndTimestamp(metricIndex, item, options.globalDisplayTextTriggeredEmpty)[1];\n        if (animationTimestampRefs[index].current.innerHTML !== null) {\n          animationTimestampRefs[index].current.innerHTML = ts;\n        }\n      }\n      metricIndex++;\n      if (options.processedData && options.processedData[index] && options.processedData[index].members.length) {\n        metricIndex %= options.processedData[index].members.length;\n      }\n      animationMetricIndexes[index] = metricIndex;\n      setAnimationMetricIndexes(animationMetricIndexes);\n    }\n  }, [\n    animationMetricIndexes,\n    animationRefs,\n    animationTimestampRefs,\n    animatedItems,\n    options.processedData,\n    options.globalDisplayTextTriggeredEmpty,\n    options.globalShowTimestampEnabled,\n    options.globalShowValueEnabled,\n  ]);\n\n  /*\n    Determine which items should be animated\n  */\n\n  useEffect(() => {\n    let shouldAnimate = false;\n    const animate: number[] = [];\n    options.processedData!.map((item, index) => {\n      if (item.isComposite && item.showValue) {\n        shouldAnimate = true;\n        animate.push(index);\n      }\n    });\n    // check array content equality\n    if (JSON.stringify(animatedItems) !== JSON.stringify(animate)) {\n      if (options.processedData) {\n        updateAnimation(options.processedData);\n        setAnimatedItems(animate);\n      }\n    }\n    let tick: NodeJS.Timeout;\n    if (shouldAnimate) {\n      let speed = parseInt(options.compositeConfig.animationSpeed, 10);\n      if (speed < 200 || isNaN(speed)) {\n        console.log(`WARNING: speed in configuration is too fast, setting to 200ms`);\n        speed = 200;\n      }\n      tick = setInterval(animateComposite, speed);\n    }\n    return () => {\n      clearInterval(tick);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [options.compositeConfig.animationSpeed, options.processedData, animationRefs]);\n\n  const detectNoDataEmptyState = () => {\n    if (options.processedData && options.processedData.length === 0) {\n      return <div className={noTriggerTextStyles}>{options.globalDisplayTextTriggeredEmpty}</div>;\n    }\n    return null;\n  };\n\n  const detectLayoutIssue = () => {\n    if (!options.autoSizeColumns && !options.autoSizeRows) {\n      const limit = options.layoutNumColumns * options.layoutNumRows;\n      if (limit < options.processedData!.length) {\n        return (\n          <div className={errorMessageStyles}>\n            Not enough rows and columns for data. There are {options.processedData!.length} items to display, and only{' '}\n            {limit} places allocated.{' '} See the Display Limit setting in category Layout{' '}\n          </div>\n        );\n      }\n    }\n    return null;\n  };\n\n  const lm = new LayoutManager(\n    options.panelWidth,\n    options.panelHeight,\n    options.layoutNumColumns,\n    options.layoutNumRows,\n    options.layoutDisplayLimit,\n    options.autoSizePolygons,\n    options.globalShape\n  );\n\n  // determine how many rows and columns are going to be generated\n  lm.generatePossibleColumnAndRowsSizes(options.autoSizeColumns, options.autoSizeRows, options.processedData!.length);\n  // to determine the radius, the actual number of rows and columns that will be used needs to be calculated\n  lm.generateActualColumnAndRowUsage(options.processedData, options.layoutDisplayLimit);\n  // next the radius can be determined from actual rows and columns being used\n  let radius = 0;\n  if (!options.autoSizePolygons && options.globalPolygonSize) {\n    if (options.globalPolygonSize < 0 || isNaN(options.globalPolygonSize)) {\n      // force min size if below zero or NaN\n      options.globalPolygonSize = 50;\n      console.log(`WARNING: polygon size is manually set to an invalid value, forcing to 50px`);\n    } else {\n      lm.setRadius(options.globalPolygonSize);\n    }\n    radius = options.globalPolygonSize;\n  } else {\n    radius = lm.generateRadius(options.globalShape);\n  }\n\n  // using the known number of columns and rows that can be used in addition to the radius,\n  // generate the points to be filled\n  const calculatedPoints = lm.generatePoints(options.processedData, options.layoutDisplayLimit, options.globalShape);\n  const aHexbin = hexbin()\n    .radius(radius)\n    .extent([\n      [0, 0],\n      [options.panelWidth, options.panelHeight],\n    ]);\n  const { diameterX, diameterY } = lm.getDiameters();\n  const { xoffset, yoffset } = lm.getOffsets(options.globalShape, options.processedData!.length);\n\n  // compute text area size (used to calculate the fontsize)\n  const textAreaWidth = diameterX;\n  const textAreaHeight = diameterY / 2; // Top and bottom of hexagon are not used\n  // symbols use the area for their size\n  let innerArea = diameterX * diameterY;\n  // use the smallest of diameterX or Y\n  if (diameterX < diameterY) {\n    innerArea = diameterX * diameterX;\n  }\n  if (diameterY < diameterX) {\n    innerArea = diameterY * diameterY;\n  }\n  // square and circle do not use this\n  const symbol = d3symbol().size(innerArea);\n\n  let customShape: any;\n  switch (options.globalShape) {\n    case PolygonShapes.HEXAGON_POINTED_TOP:\n      customShape = aHexbin.hexagon(radius);\n      break;\n    case PolygonShapes.CIRCLE:\n      customShape = symbol.type(symbolCircle);\n      break;\n    case PolygonShapes.SQUARE:\n      customShape = symbol.type(symbolSquare);\n      break;\n    default:\n      customShape = aHexbin.hexagon(radius);\n      break;\n  }\n\n  const resolveClickThroughTarget = (d: PolystatModel): string => {\n    let clickThroughTarget = '_self';\n    if (d.newTabEnabled) {\n      clickThroughTarget = '_blank';\n    }\n    // when a custom clickthrough is enabled, override the default _self\n    if (d.customClickthroughTargetEnabled) {\n      clickThroughTarget = d.customClickthroughTarget;\n    }\n    return clickThroughTarget;\n  };\n\n  const getCoords = (i: number) => {\n    const xValue = calculatedPoints[i].x;\n    const yValue = calculatedPoints[i].y;\n    return { x: xValue, y: yValue };\n  };\n\n  // calculate the fontsize based on the shape and the text\n  let activeLabelFontSize = options.globalFontSize;\n  // font sizes are independent for label and values\n  let activeValueFontSize = options.globalFontSize;\n  let activeCompositeValueFontSize = options.globalFontSize;\n  // timestamp sizing\n  let activeTimestampFontSize = options.globalShowTimestampFontSize;\n  let showEllipses = false;\n  let numOfChars = options.ellipseCharacters;\n\n  let hasShowTimeStampEnabled = options.globalShowTimestampEnabled;\n  let hasShowValueEnabled = options.globalShowValueEnabled;\n\n  if (options.globalAutoScaleFonts) {\n    const result = AutoFontScalar(\n      options.globalTextFontFamily,\n      textAreaWidth,\n      textAreaHeight,\n      hasShowValueEnabled,\n      hasShowTimeStampEnabled,\n      options.processedData!\n    );\n    activeLabelFontSize = result.activeLabelFontSize;\n    activeValueFontSize = result.activeValueFontSize;\n    activeTimestampFontSize = result.activeTimestampFontSize;\n    activeCompositeValueFontSize = result.activeCompositeValueFontSize;\n    showEllipses = result.showEllipses;\n    numOfChars = result.numOfChars;\n  }\n\n  const alignments = GetAlignments(\n    options.globalShape,\n    diameterX,\n    diameterY,\n    textAreaHeight,\n    activeValueFontSize,\n    activeLabelFontSize,\n    activeTimestampFontSize,\n    hasShowTimeStampEnabled\n  );\n\n  let timestampLineSpacing = Math.ceil(activeValueFontSize * 0.20);\n  if (activeValueFontSize > activeTimestampFontSize) {\n    timestampLineSpacing = Math.ceil(activeTimestampFontSize * 0.20);\n  }\n  // composites can have their own settings for displaying the value\n  let compositeTimestampLineSpacing = Math.ceil(activeCompositeValueFontSize);\n  if (activeCompositeValueFontSize > activeTimestampFontSize) {\n    // ABOVE\n    compositeTimestampLineSpacing = Math.ceil(activeTimestampFontSize * 0.75);\n    // BELOW\n    if (options.globalShowTimestampPosition === TimestampPositions.BELOW_VALUE) {\n      compositeTimestampLineSpacing = Math.ceil(activeTimestampFontSize);\n    }\n  }\n\n\n  const drawShape = (index: number, shape: PolygonShapes) => {\n    let fillColor = options.processedData![index].color;\n    if (options.globalGradientsEnabled) {\n      // TODO: safari needs the location.href\n      fillColor = `url(#${uniquePanelId}_linear_gradient_state_data_${index})`;\n    }\n    const useRadius = lm.generateRadius(options.globalShape);\n    const coords = getCoords(index);\n\n    switch (shape as any) {\n      case PolygonShapes.HEXAGON_POINTED_TOP:\n        return (\n          <path\n            data-tooltip-id={options.globalTooltipsEnabled ? `polystat-tooltip-${uniquePanelId}` : null}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            className={svgPathStyles}\n            key={`polystat-tooltip-${uniquePanelId}`}\n            transform={`translate(${coords.x}, ${coords.y})`}\n            d={customShape}\n            fill={fillColor}\n            stroke={options.globalPolygonBorderColor}\n            strokeWidth={options.globalPolygonBorderSize + 'px'}\n          />\n        );\n      case PolygonShapes.CIRCLE:\n        return (\n          <circle\n            data-tooltip-id={options.globalTooltipsEnabled ? `polystat-tooltip-${uniquePanelId}` : null}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            key={`polystat-tooltip-${uniquePanelId}`}\n            className={svgPathStyles}\n            cx={coords.x}\n            cy={coords.y}\n            r={useRadius}\n            fill={fillColor}\n          />\n        );\n      case PolygonShapes.SQUARE:\n        return (\n          <rect\n            data-tooltip-id={options.globalTooltipsEnabled ? `polystat-tooltip-${uniquePanelId}` : null}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            key={`polystat-tooltip-${uniquePanelId}`}\n            className={svgPathStyles}\n            x={coords.x}\n            y={coords.y}\n            height={useRadius * 2}\n            width={useRadius * 2}\n            fill={fillColor}\n          />\n        );\n      default:\n        return (\n          <path\n            data-tooltip-id={options.globalTooltipsEnabled ? `polystat-tooltip-${uniquePanelId}` : null}\n            data-tooltip-content={index}\n            data-tooltip-position-strategy='fixed'\n            className={svgPathStyles}\n            key={`polystat-tooltip-${uniquePanelId}`}\n            transform={`translate(${coords.x}, ${coords.y})`}\n            d={customShape}\n            fill={fillColor}\n            stroke={options.globalPolygonBorderColor}\n            strokeWidth={options.globalPolygonBorderSize + 'px'}\n          />\n        );\n    }\n  };\n\n  // allows the polygon to fill the horizontal space if the manually specified number of columns has not been used\n  let marginLeft = margin.left;\n  if ((!options.autoSizeColumns) && (radius) && (lm.maxColumnsUsed < options.layoutNumColumns)) {\n    let difference = options.layoutNumColumns - lm.maxColumnsUsed;\n    marginLeft += radius * difference;\n  }\n  // allows the polygon to fill the vertical space if the manually specified number of rows has not been used\n  let marginTop = margin.top;\n  if ((!options.autoSizeRows) && (radius) && (lm.maxRowsUsed < options.layoutNumRows)) {\n    let difference = options.layoutNumRows - lm.maxRowsUsed;\n    // always starts at zero, skip offset for first row used\n    marginTop += radius * (difference - 1);\n  }\n\n  const getLabelContent = (item: PolystatModel, index: number, coords: { x: number, y: number }) => {\n    let verticalAlignment = alignments.labelWithValueTextAlignment;\n    if (!item.showValue) {\n      verticalAlignment = alignments.labelOnlyTextAlignment;\n    }\n    return (\n      <text\n        className=\"toplabel\"\n        x={coords.x + alignments.labelTextAlignmentX}\n        y={coords.y + verticalAlignment}\n        textAnchor=\"middle\"\n        fontFamily={options.globalTextFontFamily}\n        fontSize={activeLabelFontSize + 'px'}\n        style={{\n          fill: options.globalTextFontAutoColorEnabled\n            ? options.globalTextFontAutoColor\n            : options.globalTextFontColor,\n          pointerEvents: 'none',\n        }}\n      >\n        {\n          item.showName &&\n          getTextToDisplay(\n            options.globalAutoScaleFonts,\n            options.ellipseEnabled,\n            options.ellipseCharacters,\n            showEllipses,\n            numOfChars,\n            item.name,\n            item.displayName\n          )}\n      </text>\n    );\n  };\n\n  const getValueContent = (item: PolystatModel, index: number, coords: { x: number, y: number }) => {\n    // default\n    let verticalAlignment = alignments.valueWithLabelTextAlignment;\n    // check if showTimeStamp is enabled\n    // TODO: the show value should be inside the item also\n    if (options.globalShowTimestampEnabled) {\n      // TODO: the offset should be put inside the item also to handle overrides and composites correctly\n      if (isNaN(options.globalShowTimestampYOffset)) {\n        options.globalShowTimestampYOffset = 0;\n      }\n      switch (options.globalShowTimestampPosition) {\n        case TimestampPositions.ABOVE_VALUE:\n          verticalAlignment = alignments.valueWithLabelTextAlignment;\n          break;\n        case TimestampPositions.BELOW_VALUE:\n          verticalAlignment = alignments.timestampAlignment + timestampLineSpacing;\n          if (item.isComposite && item.showValue) {\n            // compositeTimestampLineSpacing not used for composite here\n            verticalAlignment = alignments.timestampAlignment;\n          }\n          break;\n      }\n    }\n    let valueContent = \"\";\n    if (item.isComposite) {\n      if (item.showValue) {\n        valueContent = formatCompositeValueAndTimestamp(0, item,\n          options.globalDisplayTextTriggeredEmpty)[0];\n      }\n    } else {\n      if (options.globalShowValueEnabled) {\n        valueContent = item.valueFormatted;\n      }\n    }\n    let useFontSize = activeValueFontSize;\n    if (item.isComposite) {\n      useFontSize = activeCompositeValueFontSize;\n    }\n    return (\n      <text\n        ref={animationRefs[index]}\n        className={`valueLabel${index}`}\n        x={coords.x + alignments.labelValueAlignmentX}\n        y={coords.y + verticalAlignment}\n        textAnchor=\"middle\"\n        fontFamily={options.globalTextFontFamily}\n        fontSize={useFontSize + 'px'}\n        style={{\n          fill: options.globalTextFontAutoColorEnabled\n            ? options.globalTextFontAutoColor\n            : options.globalTextFontColor,\n          pointerEvents: 'none',\n        }}\n      >\n        {valueContent}\n      </text>\n    );\n  };\n\n  const getTimestampForValueContent = (item: PolystatModel, index: number, coords: { x: number, y: number }) => {\n    // TODO: the offset should be put inside the item also to handle overrides and composites correctly\n    if (isNaN(options.globalShowTimestampYOffset)) {\n      options.globalShowTimestampYOffset = 0;\n    }\n    let verticalAlignment = alignments.timestampAlignment - timestampLineSpacing + options.globalShowTimestampYOffset;\n    switch (options.globalShowTimestampPosition) {\n      case TimestampPositions.ABOVE_VALUE:\n        if (item.showValue) {\n          verticalAlignment = alignments.timestampAlignment - timestampLineSpacing + options.globalShowTimestampYOffset;\n          if (item.isComposite) {\n            verticalAlignment = alignments.timestampAlignment - compositeTimestampLineSpacing + options.globalShowTimestampYOffset;\n          }\n        } else {\n          // the below calc can be used when value is not displayed\n          verticalAlignment = alignments.valueWithLabelTextAlignment + options.globalShowTimestampYOffset;\n        }\n        break;\n      case TimestampPositions.BELOW_VALUE:\n        verticalAlignment = alignments.valueWithLabelTextAlignment + options.globalShowTimestampYOffset;\n        if (item.isComposite && item.showValue) {\n          verticalAlignment = activeCompositeValueFontSize + compositeTimestampLineSpacing + options.globalShowTimestampYOffset;\n        }\n        break;\n    }\n    return (\n      <text\n        ref={animationTimestampRefs[index]}\n        className={`timestampLabel${index}`}\n        x={coords.x + alignments.labelValueAlignmentX}\n        y={coords.y + verticalAlignment}\n        textAnchor=\"middle\"\n        fontFamily={options.globalTextFontFamily}\n        fontSize={activeTimestampFontSize + 'px'}\n        style={{\n          fill: options.globalTextFontAutoColorEnabled\n            ? options.globalTextFontAutoColor\n            : options.globalTextFontColor,\n          pointerEvents: 'none',\n        }}\n      >\n        {options.globalShowTimestampEnabled &&\n          (item.isComposite\n            ? formatCompositeValueAndTimestamp(0, item, options.globalDisplayTextTriggeredEmpty)[1]\n            : item.timestampFormatted)}\n      </text>\n    )\n  };\n\n  const detectEmptyState = detectNoDataEmptyState();\n  if (detectEmptyState !== null) {\n    return detectEmptyState;\n  }\n\n  const layoutIssueDetected = detectLayoutIssue();\n  if (layoutIssueDetected !== null) {\n    return layoutIssueDetected;\n  }\n\n  return (\n    <div className={divStyles}>\n      <svg\n        className={svgStyles}\n        width={options.panelWidth}\n        height={options.panelHeight}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n        viewBox={`${xoffset},${yoffset},${options.panelWidth},${options.panelHeight}`}\n      >\n\n        <g transform={`translate(${marginLeft},${marginTop})`}>\n          <Gradients gradientId={uniquePanelId} data={options.processedData} />\n\n          {options.processedData!.map((item, index) => {\n            const coords = getCoords(index);\n            const useUrl = item.sanitizeURLEnabled ? item.sanitizedURL : item.clickThrough;\n            // determine if a target is required\n            const resolvedClickthroughTarget = resolveClickThroughTarget(item);\n            let clickableUrl: JSX.Element;\n            // only add target attribute when there is one specified\n            if ((resolvedClickthroughTarget.length > 0) && (useUrl.length > 0)) {\n              clickableUrl = <a target={resolvedClickthroughTarget} href={useUrl}>\n                {drawShape(index, options.globalShape)}\n              </a>;\n            } else {\n              clickableUrl = <a href={useUrl}>\n                {drawShape(index, options.globalShape)}\n              </a>;\n            }\n            return (\n              <>\n                {useUrl.length > 0 && clickableUrl ? (\n                  clickableUrl\n                ) : (\n                  drawShape(index, options.globalShape)\n                )}\n                {getLabelContent(item, index, coords)}\n                {getValueContent(item, index, coords)}\n                {getTimestampForValueContent(item, index, coords)}\n              </>\n            );\n          })}\n        </g>\n      </svg>\n      {options.globalTooltipsEnabled && (\n        <Portal>\n          <ReactTooltip\n            style={{\n              boxShadow: 'rgba(1, 4, 9, 0.75) 0px 4px 8px 0px',\n            }}\n            id={options.globalTooltipsEnabled ? `polystat-tooltip-${uniquePanelId}` : undefined}\n            place={'bottom'} // TODO: make this configurable\n            float={true}\n            variant={tooltipTheme} // TODO: this could be made configurable (auto, or specified)\n            opacity={1} // TODO: make this configurable\n            clickable={false} // TODO: make this configurable, extend with per-line clickthrough\n            render={({ content }) => {\n              // generate tooltip for item\n              if (content) {\n                const contentIndex = parseInt(content, 10);\n                return (\n                  <Tooltip\n                    data={options.processedData![contentIndex]}\n                    renderTime={options.renderTime!}\n                    showTime={options.globalTooltipsShowTimestampEnabled}\n                    valueEnabled={options.globalTooltipsShowValueEnabled}\n                    tooltipColumnHeadersEnabled={options.globalShowTooltipColumnHeadersEnabled}\n                    primarySortByField={options.tooltipPrimarySortByField}\n                    primarySortDirection={options.tooltipPrimarySortDirection}\n                    secondarySortByField={options.tooltipSecondarySortByField}\n                    secondarySortDirection={options.tooltipSecondarySortDirection}\n                    displayMode={options.tooltipDisplayMode}\n                    tooltipDisplayTextTriggeredEmpty={options.tooltipDisplayTextTriggeredEmpty}\n                    tooltipFontFamily={options.globalTooltipsFontFamily}\n                  />\n                )\n              }\n              return (<></>)\n            }} />\n        </Portal>\n\n      )}\n    </div>\n  );\n};\n\nexport const getTextToDisplay = (\n  autoSizeFonts: boolean,\n  ellipseEnabled: boolean,\n  ellipseCharacters: number,\n  showEllipses: boolean,\n  numOfChars: number,\n  text: string,\n  displayName: string\n) => {\n  if (displayName !== '') {\n    text = displayName;\n  }\n  if (showEllipses) {\n    if (text.length > numOfChars) {\n      return text.substring(0, numOfChars) + '...';\n    }\n  }\n  if (!autoSizeFonts && ellipseEnabled && text.length > ellipseCharacters) {\n    return text.substring(0, ellipseCharacters) + '...';\n  }\n  return text;\n};\n\n/*\n              The element #{content} is currently not active.\n              <br />\n              Relevant attribute: {activeAnchor?.getAttribute('data-some-relevant-attr') || 'not set'}\n            </span>\n*/\n\nconst buildTriggerCache = (item: any) => {\n  let triggerCache = [];\n  for (let i = 0; i < item.members.length; i++) {\n    const aMember = item.members[i];\n    if (aMember.thresholdLevel > 0) {\n      // add to list\n      const cachedMemberState = {\n        index: i,\n        name: aMember.name,\n        value: aMember.value,\n        thresholdLevel: aMember.thresholdLevel,\n      };\n      triggerCache.push(cachedMemberState);\n    }\n  }\n  // sort it\n  triggerCache = lodashOrderBy(triggerCache, ['thresholdLevel', 'value', 'name'], ['desc', 'desc', 'asc']);\n  return triggerCache;\n};\n\nconst formatCompositeValueAndTimestamp = (frames: number, item: PolystatModel, globalDisplayTextTriggeredEmpty: string) => {\n  // TODO: if just one value, could speed this up\n  let content = item.valueFormatted;\n  let timestampContent = item.timestampFormatted;\n  const len = item.members.length;\n  if (len > 0) {\n    let triggeredIndex = -1;\n    if (item.displayMode === DisplayModes[0].value) {\n      triggeredIndex = frames % len;\n    } else {\n      if (typeof item.triggerCache === 'undefined') {\n        item.triggerCache = buildTriggerCache(item);\n      }\n      if (item.triggerCache.length > 0) {\n        const z = frames % item.triggerCache.length;\n        triggeredIndex = item.triggerCache[z].index;\n      } else {\n        // nothing triggered        //triggeredIndex = frames % len;\n        return [globalDisplayTextTriggeredEmpty, ''];\n      }\n    }\n    const aMember = Object.assign({}, item.members[triggeredIndex]);\n    content = aMember.name + ': ' + aMember.valueFormatted;\n    timestampContent = aMember.timestampFormatted;\n  }\n  return [textUtil.sanitize(content), timestampContent];\n};\n","import { PolygonShapes } from \"./types\";\n\nexport const GetAlignments = (\n  shape: PolygonShapes,\n  diameterX: number,\n  diameterY: number,\n  textAreaHeight: number,\n  activeValueFontSize: number,\n  activeLabelFontSize: number,\n  activeTimestampFontSize: number,\n  showTimestampEnabled: boolean,\n) => {\n  let valueWithLabelTextAlignment = textAreaHeight / 2 / 2 + activeValueFontSize / 2;\n  let valueOnlyTextAlignment = activeValueFontSize / 2;\n  let labelWithValueTextAlignment = -(textAreaHeight / 2 / 2) + activeLabelFontSize / 2;\n  let labelOnlyTextAlignment = activeLabelFontSize / 2;\n  let labelTextAlignmentX = 0;\n  let labelValueAlignmentX = 0;\n  let valueWithTimestampAlignment = valueWithLabelTextAlignment / 2;\n  let timestampAlignment = textAreaHeight * 0.33 / 2 + activeTimestampFontSize / 2;\n  switch (shape) {\n    case PolygonShapes.HEXAGON_POINTED_TOP:\n      // offset when only showing label\n      labelOnlyTextAlignment = activeLabelFontSize * 0.37;\n      if (showTimestampEnabled && activeTimestampFontSize > 0) {\n        // adjust value down\n        valueWithLabelTextAlignment = textAreaHeight * 0.67 / 2 + activeValueFontSize / 2;\n      }\n      break;\n    case PolygonShapes.CIRCLE:\n      // offset when only showing label\n      labelOnlyTextAlignment = activeLabelFontSize * 0.37;\n      if (showTimestampEnabled && activeTimestampFontSize > 0) {\n        // adjust value down\n        valueWithLabelTextAlignment = textAreaHeight * 0.67 / 2 + activeValueFontSize / 2;\n      }\n      break;\n    case PolygonShapes.SQUARE:\n      // square is \"centered\" at top left, not the center\n\n      // compute alignment for each text element, base coordinate is in the top left corner (text is anchored at its bottom):\n      // - Value text (bottom text) will be aligned (positively i.e. lower) in the middle of the bottom half of the text area\n      // - Label text (top text) will be aligned in the middle of the top half of the text area\n      valueWithLabelTextAlignment = diameterY / 1.5 + activeValueFontSize / 2;\n      valueOnlyTextAlignment = diameterY / 2 + activeLabelFontSize * 0.37;\n      labelWithValueTextAlignment = diameterY / 4 + activeLabelFontSize / 2;\n      // alignment is equal to the half of height plus a fraction of the fontSize\n      labelOnlyTextAlignment = diameterY / 2 + activeLabelFontSize * 0.37;\n      //\n      labelTextAlignmentX = diameterX / 2;\n      labelValueAlignmentX = diameterX / 2;\n      if (showTimestampEnabled && activeTimestampFontSize > 0) {\n        // line spacing offset is needed\n        timestampAlignment = diameterY / 1.5 - (activeTimestampFontSize * 0.67);\n      }\n      break;\n  }\n  return {\n    valueWithLabelTextAlignment,\n    valueOnlyTextAlignment,\n    valueWithTimestampAlignment,\n    labelWithValueTextAlignment,\n    labelOnlyTextAlignment,\n    labelTextAlignmentX,\n    labelValueAlignmentX,\n    timestampAlignment,\n  };\n};\n","import { DataFrame, Field, FieldType, FieldConfig, Vector } from '@grafana/data';\n\n// Inserts a \"Time\" field into each dataframe if it is missing\n// the value of the timestamp is \"now\"\n// any field without a numeric type is considered a label\nexport function InsertTime(data: DataFrame[]): DataFrame[] {\n  // TODO: time to insert can be taken from the first row if there are timeseries already\n  // for now, just insert now\n  const timeToInsert = Date.now();\n  const newData: DataFrame[] = [];\n  for (const frame of data) {\n    const newFrame: DataFrame = {\n      ...frame,\n      meta: {...frame.meta},\n      fields: [], // clear the fields\n    };\n    const hasTimestamp = frameHasTimestamp(frame);\n    // rebuild a new frame with labels on the numerical fields\n    for (const aField of frame.fields) {\n      if (aField.type === FieldType.number) {\n        if (!hasTimestamp) {\n          const copiedField = Object.assign({}, aField);\n          // need to get the number of rows of data for this frame\n          const aFieldValues = copiedField.values.toArray();\n          const rowsOfField = aFieldValues.length;\n          for (let rowNum = 0; rowNum < rowsOfField; rowNum++) {\n            // only create a new field when the rowValue is not null\n            if (aFieldValues[rowNum] !== null) {\n              if (aField.state) {\n                copiedField.state = Object.assign({}, aField.state);\n              }\n              newFrame.fields.push({\n                ...copiedField,\n                labels: flattenLabels(frame, rowNum),\n                values: [getValueOfField(copiedField, rowNum)] as any,\n              });\n            }\n          }\n        } else {\n          // copy the object\n          const copiedField = Object.assign({}, aField);\n          if (aField.state) {\n            copiedField.state = Object.assign({}, aField.state);\n          }\n          newFrame.fields.push(copiedField);\n        }\n      }\n    }\n    if (!hasTimestamp) {\n      const fc: FieldConfig = {};\n      const timeField: Field = {\n        name: 'Time',\n        type: FieldType.time,\n        values: [timeToInsert] as any,\n        config: fc,\n      };\n      // insert it\n      newFrame.fields.push(timeField);\n    } else {\n      // time field already exists\n      // copy all non-number fields from original frame\n      for (const aField of frame.fields) {\n        if (aField.type !== FieldType.number) {\n          const copiedField = Object.assign({}, aField);\n          if (aField.state) {\n            copiedField.state = Object.assign({}, aField.state);\n          }\n          newFrame.fields.push(copiedField);\n        }\n      }\n    }\n    newData.push(newFrame);\n  }\n\n  return newData;\n}\n\nfunction frameHasTimestamp(frame: DataFrame): boolean {\n  for (let j = 0; j < frame.fields.length; j++) {\n    const aField = frame.fields[j];\n    if (aField.type === FieldType.time) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction flattenLabels(frame: DataFrame, rowNum: number) {\n  let labelIndexes = [];\n  const numFields = frame.fields.length;\n\n  // first get the fields of type string\n  for (let j = 0; j < numFields; j++) {\n    if (frame.fields[j].type === FieldType.string) {\n      labelIndexes.push(j);\n    }\n  }\n  let labelWithValues = getLabelValues(frame, labelIndexes, rowNum);\n  return labelWithValues;\n}\n\nfunction getValueOfField(field: Field, index: number) {\n  const bufferValue = field.values.toArray()[index];\n  return bufferValue;\n}\n\nfunction getLabelValues(frame: DataFrame, indexes: any[], rowNum: number) {\n  let labelAndValue = {};\n  for (let index = 0; index < indexes.length; index++) {\n    let indexValue = indexes[index];\n    let aField = frame.fields[indexValue];\n    if (aField.type !== FieldType.number) {\n      let value = getValueOfField(aField, rowNum);\n      // TODO: fix this...\n      // @ts-ignore\n      labelAndValue[aField.name] = value;\n    }\n  }\n  return labelAndValue;\n}\n","import { DEFAULT_NO_DATA_COLOR_HEX } from '../components/defaults';\nimport { PolystatThreshold } from '../components/thresholds/types';\nimport { PolystatModel } from '../components/types';\n/*\n\nThis supports ranged states\n\nThresholds are expected to be sorted by ascending value, where\n  T0 = lowest decimal value, any state\n  TN = highest decimal value, any state\n\nInitial state is set to \"ok\"\n\nA comparison is made using \"greater than or equal to\" against the value\n  If value >= thresholdValue state = X\n\nComparisons are made in reverse order, using the range between the Nth (inclusive) threshold and N+1 (exclusive)\n  InclusiveValue = T(n).value\n  ExclusiveValue = T(n+1).value\n\nWhen there is no n+1 threshold, the highest value threshold T(n), a simple inclusive >= comparison is made\n\n  Example 1: (typical linear)\n    T0 - 5, ok\n    T1 - 10, warning\n    T2 - 20, critical\n\n  Value >= 20 (Value >= T2)\n  10 <= Value < 20  (T1 <= Value < T2)\n  5 <= Value < 10   (T0 <= Value < T1)\n\n  Example 2: (reverse linear)\n    T0 - 50, critical\n    T1 - 90, warning\n    T2 - 100, ok\n\n  Value >= 100\n  90 <= value < 100\n  50 <= value < 90\n\n  Example 3: (bounded)\n    T0 - 50, critical\n    T1 - 60, warning\n    T2 - 70, ok\n    T3 - 80, warning\n    T4 - 90, critical\n\n    Value >= 90\n    80 <= Value < 90\n    70 <= Value < 80\n    60 <= Value < 70\n    50 <= Value < 60\n\nThe \"worst\" state is returned after checking every threshold range\n\n*/\nfunction getWorstSeries(series1: PolystatModel, series2: PolystatModel): any {\n  let worstSeries = series1;\n  const series1ThresholdLevel = series1.thresholdLevel;\n  const series2ThresholdLevel = series2.thresholdLevel;\n\n  if (series1ThresholdLevel === undefined || series2ThresholdLevel === undefined) {\n    return worstSeries;\n  }\n\n  // State 3 is Unknown and is not be worse than CRITICAL (state 2)\n  if (series2ThresholdLevel > series1ThresholdLevel) {\n    // series2 has higher threshold violation\n    worstSeries = series2;\n  }\n  if (series1ThresholdLevel === 3) {\n    // series1 is in state unknown, check if series2 is in state 1 or 2\n    switch (series2ThresholdLevel) {\n      case 1:\n        worstSeries = series2;\n        break;\n      case 2:\n        worstSeries = series2;\n        break;\n    }\n  }\n  return worstSeries;\n}\n\nfunction getThresholdLevelForValue(\n  thresholds: PolystatThreshold[] | undefined,\n  value: number | null,\n  defaultColor: string\n): { thresholdLevel: number; color: string } {\n  let currentColor = defaultColor;\n  if (value === null) {\n    return { thresholdLevel: 3, color: DEFAULT_NO_DATA_COLOR_HEX }; // No Data\n  }\n  // assume UNKNOWN state\n  let currentState = -1;\n  // skip evaluation when there are no thresholds\n  if (typeof thresholds === 'undefined') {\n    return { thresholdLevel: currentState, color: defaultColor };\n  }\n  // test \"Nth\" threshold\n  const thresholdCount = thresholds.length;\n  if (thresholdCount === 0) {\n    return { thresholdLevel: currentState, color: defaultColor };\n  }\n  const aThreshold = thresholds[thresholdCount - 1];\n  if (value >= aThreshold.value) {\n    currentState = aThreshold.state;\n    currentColor = aThreshold.color;\n  }\n  // if there's one threshold, just return the result\n  if (thresholds.length === 1) {\n    return { thresholdLevel: currentState, color: currentColor };\n  }\n  // now test in reverse\n  for (let i = thresholdCount - 1; i > 0; i--) {\n    const upperThreshold = thresholds[i];\n    const lowerThreshold = thresholds[i - 1];\n    if (lowerThreshold.value <= value && value < upperThreshold.value) {\n      if (currentState < lowerThreshold.state) {\n        currentState = lowerThreshold.state;\n        currentColor = lowerThreshold.color;\n      }\n    }\n  }\n  // last check, if currentState is not set, and there is a lower threshold, use that value (inclusive range up to T1)\n  if (currentState === -1) {\n    currentState = thresholds[0].state;\n    currentColor = thresholds[0].color;\n  }\n  return { thresholdLevel: currentState, color: currentColor };\n}\n\nexport { getWorstSeries, getThresholdLevelForValue };\n","/**\n * Convert model data to url params\n */\nimport { stringToJsRegex } from '@grafana/data';\nimport { PolystatModel } from '../components/types';\n\nclass ClickThroughTransformer {\n  static cellName = /\\${__cell_name}/;\n  static cellValue = /\\${__cell}/;\n  static cellRawValue = /\\${__cell:raw}/;\n\n  static nthCellName = /\\${__cell_name_(\\d+)}/;\n  static nthCellValue = /\\${__cell_(\\d+)}/;\n  static nthCellRawValue = /\\${__cell_(\\d+):raw}/;\n\n  static compositeNameRegex = /\\${__composite_name}/;\n\n  static transformSingleMetric(index: number, url: string, data: PolystatModel[]): string {\n    if (isNaN(index)) {\n      return url;\n    }\n    const item = data[index];\n    // check if url contains any dereferencing\n    while (url.match(this.cellName)) {\n      // replace with series name\n      url = url.replace(this.cellName, item.name);\n    }\n    while (url.match(this.cellValue)) {\n      // replace with formatted value, and encoded\n      url = url.replace(this.cellValue, encodeURIComponent(item.valueFormatted));\n    }\n    while (url.match(this.cellRawValue)) {\n      // replace with value\n      url = url.replace(this.cellRawValue, item.value.toString());\n    }\n    return url;\n  }\n\n  static transformNthMetric(url: string, data: PolystatModel[]) {\n    while (url.match(this.nthCellName)) {\n      const matched = url.match(this.nthCellName);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthName = data[captureIndex].name;\n        // replace with series name\n        url = url.replace(this.nthCellName, nthName);\n      }\n    }\n    while (url.match(this.nthCellValue)) {\n      const matched = url.match(this.nthCellValue);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthValue = data[captureIndex].valueFormatted;\n        // replace with formatted value encoded\n        url = url.replace(this.nthCellValue, encodeURIComponent(nthValue));\n      }\n    }\n    while (url.match(this.nthCellRawValue)) {\n      const matched = url.match(this.nthCellRawValue);\n      if (matched && matched.length >= 2) {\n        // get the capture number\n        const captureIndex = matched[1] as unknown as number;\n        const nthValue = data[captureIndex].value;\n        // replace with raw value\n        url = url.replace(this.nthCellRawValue, nthValue.toString());\n      }\n    }\n    return url;\n  }\n\n  static transformComposite(name: string, url: string) {\n    // check if url contains any dereferencing\n    while (url.match(this.compositeNameRegex)) {\n      // replace with series name\n      url = url.replace(this.compositeNameRegex, name);\n    }\n    return url;\n  }\n\n  static transformByRegex(pattern: string, item: PolystatModel, url: string) {\n    // detect regex capture groups from override.metricName and replace any occurrences in the click-through\n    const regex = stringToJsRegex(pattern);\n    const matches = item.name.match(regex);\n    if (matches && matches.length > 0) {\n      matches.forEach((aMatch, index) => {\n        const value = matches[index];\n        // console.log(`a match ${aMatch} index ${index} value ${value}`);\n        const matchType1 = `\\$\\{${index}\\}`;\n        url = url.replace(matchType1, value);\n        const matchType2 = `\\$${index}`;\n        url = url.replace(matchType2, value);\n      });\n    }\n    if (matches && matches.groups) {\n      for (const key in matches.groups) {\n        const value = matches.groups[key];\n        // console.log(`key = ${key} value = ${value}`);\n        // support $CAPTURE and ${CAPTURE}\n        const matchType1 = `\\$\\{${key}\\}`;\n        url = url.replace(matchType1, value);\n        const matchType2 = `\\$${key}`;\n        url = url.replace(matchType2, value);\n      }\n    }\n    return url;\n  }\n}\n\nexport { ClickThroughTransformer };\n","export const CUSTOM_SPLIT_DELIMITER = '#️⃣🔠🆗🆗🔠#️⃣';\n","import { dateTime } from '@grafana/data';\n\nexport const TimeFormatter = (timeZone: string, timestamp: number, timestampFormat: string): string => {\n  const timestampFormatted =\n    timeZone === 'utc'\n      ? dateTime(timestamp)\n        .utc()\n        .format(timestampFormat)\n      : dateTime(timestamp).format(timestampFormat);\n  return timestampFormatted;\n}\n","import { includes as lodashIncludes } from 'lodash';\nimport { PolystatModel } from '../components/types';\nimport { getWorstSeries } from './threshold_processor';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { stringToJsRegex, escapeStringForRegex, ScopedVars, InterpolateFunction, textUtil } from '@grafana/data';\nimport { getTemplateSrv } from '@grafana/runtime';\nimport { CompositeItemType, CompositeMetric } from '../components/composites/types';\nimport { CUSTOM_SPLIT_DELIMITER } from './types';\nimport { ApplyGlobalRegexPattern } from './processor';\nimport { TimeFormatter } from './time_formatter';\n\nexport const resolveCompositeTemplates = (\n  metricComposites: CompositeItemType[],\n  replaceVariables: InterpolateFunction\n): CompositeItemType[] => {\n  const ret: CompositeItemType[] = [];\n  metricComposites.forEach((item: CompositeItemType) => {\n    const resolved = replaceVariables(item.name, undefined, customFormatter).split(CUSTOM_SPLIT_DELIMITER);\n    // if the composite name has template syntax, mark it as isTemplated true\n    const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n    const matchResult = item.name.match(variableRegex);\n    if (matchResult && matchResult.length > 0) {\n      item.isTemplated = true;\n    }\n    resolved.forEach((newName: string) => {\n      ret.push({\n        ...item,\n        name: newName,\n        isTemplated: item.isTemplated,\n      });\n    });\n  });\n\n  return ret;\n};\n\nexport const customFormatter = (value: any) => {\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return value.join(CUSTOM_SPLIT_DELIMITER);\n  }\n  return value;\n};\n\nexport const resolveMemberTemplates = (\n  compositeName: string,\n  members: CompositeMetric[],\n  replaceVariables: InterpolateFunction\n): CompositeMetric[] => {\n  const ret: CompositeMetric[] = [];\n  const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n  // the metric name must exactly match the composite name\n  const compositeNameRegex = new RegExp(`^${compositeName}$`);\n  members.forEach((member) => {\n    // Resolve templates in series names\n    if (member.seriesMatch) {\n      const matchResult = member.seriesMatch.match(variableRegex);\n      if (matchResult && matchResult.length > 0) {\n        matchResult.forEach((aMatch) => {\n          // expand the templatedName (append compositeName to the variables first)\n          const scopedVars: ScopedVars = {\n            compositeName: { text: 'compositeName', value: compositeName },\n          };\n          // template variables can be multi-select, or \"all\", iterate over each match\n          const resolvedSeriesNames = replaceVariables(aMatch, scopedVars, customFormatter).split(CUSTOM_SPLIT_DELIMITER);\n          // iterate over the array of names\n          if (resolvedSeriesNames && resolvedSeriesNames.length) {\n            resolvedSeriesNames.forEach((aName) => {\n              // exact match of the composite name is required\n              if (aName.match(compositeNameRegex)) {\n                const newName = member.seriesMatch.replace(aMatch, aName);\n                const escapedName = escapeStringForRegex(aName);\n                const newNameEscaped = member.seriesMatch.replace(aMatch, escapedName);\n                ret.push({\n                  ...member,\n                  seriesName: newName,\n                  seriesNameEscaped: newNameEscaped,\n                });\n              }\n            });\n          }\n        });\n      } else {\n        ret.push(member);\n      }\n    }\n  });\n\n  return ret;\n};\n\nconst resolveMemberAliasTemplates = (name: string, matches: any): string => {\n  const scopedVars: ScopedVars = {};\n  matches.forEach((name: string, i: number) => {\n    scopedVars[i] = { text: i, value: name };\n  });\n  if (matches.groups) {\n    Object.keys(matches.groups).forEach((key) => {\n      scopedVars[key.replace(/\\s+/g, '_')] = { text: key, value: matches.groups[key] };\n    });\n  }\n  return getTemplateSrv().replace(name, scopedVars);\n};\n\n/**\n * Copies values, leaves members empty\n */\nconst shallowClone = (item: PolystatModel): PolystatModel => {\n  const clone: PolystatModel = {\n    value: item.value,\n    valueFormatted: item.valueFormatted,\n    valueRounded: item.valueRounded,\n    stats: item.stats,\n    name: item.name,\n    displayName: item.displayName,\n    timestamp: item.timestamp,\n    timestampFormatted: item.timestampFormatted,\n    prefix: item.prefix,\n    suffix: item.suffix,\n    color: item.color,\n    clickThrough: item.clickThrough,\n    operatorName: item.operatorName,\n    newTabEnabled: item.newTabEnabled,\n    sanitizedURL: item.sanitizedURL,\n    sanitizeURLEnabled: item.sanitizeURLEnabled,\n    customClickthroughTargetEnabled: false,\n    customClickthroughTarget: '',\n    showName: item.showName,\n    showValue: item.showValue,\n    showTimestamp: item.showTimestamp,\n    isComposite: item.isComposite,\n    members: []\n  };\n  return clone;\n};\n\nexport const ApplyComposites = (\n  composites: CompositeItemType[],\n  data: PolystatModel[],\n  replaceVariables: InterpolateFunction,\n  compositesGlobalAliasingEnabled: boolean,\n  timeZone: string,\n  globalRegexPattern?: string,\n): PolystatModel[] => {\n  if (!composites) {\n    return data;\n  }\n\n  const filteredMetrics: number[] = [];\n  const keepMetrics: number[] = [];\n  const clonedComposites: PolystatModel[] = [];\n  // the composite Name can be a template variable\n  // the composite should only match specific metrics or expanded templated metrics that use the composite name\n  const resolvedComposites = resolveCompositeTemplates(composites, replaceVariables);\n  for (let i = 0; i < resolvedComposites.length; i++) {\n    const matchedMetrics: number[] = [];\n    const aComposite = resolvedComposites[i];\n    if (!aComposite.showComposite) {\n      continue;\n    }\n    let currentWorstSeries = null;\n    // this should filter the members that are matches for the composite name\n    const templatedMembers = resolveMemberTemplates(aComposite.name, aComposite.metrics, replaceVariables);\n    for (let j = 0; j < templatedMembers.length; j++) {\n      const aMetric = templatedMembers[j];\n      // look for the matches to the pattern in the data\n      for (let index = 0; index < data.length; index++) {\n        // match regex\n        // seriesName may not be defined yet, skip\n        if (typeof aMetric.seriesMatch === 'undefined') {\n          continue;\n        }\n        // name may not be escaped, check both\n        let metricName = aMetric.seriesMatch;\n        if (aMetric.seriesNameEscaped !== undefined) {\n          metricName = aMetric.seriesNameEscaped;\n        }\n        const regex = stringToJsRegex(metricName);\n        const matches = regex.exec(data[index].name);\n        if (matches && matches.length > 0) {\n          const seriesItem = data[index];\n          // Template out the name of the metric using the alias\n          if (aMetric.alias && aMetric.alias.length > 0) {\n            seriesItem.displayName = resolveMemberAliasTemplates(aMetric.alias, matches);\n          }\n\n          // keep index of the matched metric\n          matchedMetrics.push(index);\n          // only hide if requested\n          if (!aComposite.showMembers) {\n            filteredMetrics.push(index);\n          } else {\n            keepMetrics.push(index);\n          }\n          if (aComposite.clickThrough && aComposite.clickThrough.length > 0) {\n            let url = aComposite.clickThrough;\n            // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n            url = ClickThroughTransformer.transformComposite(aComposite.name, url);\n            url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n            url = ClickThroughTransformer.transformNthMetric(url, data);\n            // lastly apply template variables\n            url = replaceVariables(url);\n            seriesItem.clickThrough = url;\n            seriesItem.sanitizedURL = textUtil.sanitizeUrl(url);\n            seriesItem.customClickthroughTarget = aComposite.clickThroughCustomTarget;\n            seriesItem.customClickthroughTargetEnabled = aComposite.clickThroughCustomTargetEnabled;\n          }\n          // process the timestamp display\n          if (aComposite.showTimestampEnabled) {\n            seriesItem.timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, aComposite.showTimestampFormat);\n            seriesItem.showTimestamp = true;\n          }\n        }\n      }\n    }\n    if (matchedMetrics.length === 0) {\n      continue;\n    }\n    // now determine the most triggered threshold\n\n    for (let k = 0; k < matchedMetrics.length; k++) {\n      const itemIndex = matchedMetrics[k];\n      const seriesItem = data[itemIndex];\n      // check thresholds\n      if (currentWorstSeries === null) {\n        currentWorstSeries = seriesItem;\n      } else {\n        currentWorstSeries = getWorstSeries(currentWorstSeries, seriesItem);\n      }\n    }\n    // Prefix the valueFormatted with the actual metric name\n    if (currentWorstSeries !== null) {\n      const clone = shallowClone(currentWorstSeries);\n      clone.name = aComposite.name;\n      clone.displayName = aComposite.name;\n      // tooltip/legend uses this to expand what values are inside the composite\n      for (let index = 0; index < matchedMetrics.length; index++) {\n        const itemIndex = matchedMetrics[index];\n        clone.members.push({\n          ...data[itemIndex],\n          name: data[itemIndex].displayName || data[itemIndex].name,\n        });\n      }\n      clone.thresholdLevel = currentWorstSeries.thresholdLevel;\n      // currentWorstSeries.valueFormatted = currentWorstSeriesName + ': ' + currentWorstSeries.valueFormatted;\n      // now push the composite into data\n      // add the composite setting for showing the name/value to the new cloned model\n      clone.showName = aComposite.showName;\n      clone.showValue = aComposite.showValue;\n      clone.showTimestamp = aComposite.showTimestampEnabled;\n      clone.displayMode = aComposite.displayMode;\n      clone.newTabEnabled = aComposite.clickThroughOpenNewTab;\n      clone.sanitizeURLEnabled = aComposite.clickThroughSanitize;\n      clone.customClickthroughTarget = aComposite.clickThroughCustomTarget;\n      clone.customClickthroughTargetEnabled = aComposite.clickThroughCustomTargetEnabled;\n      // mark this series as a composite\n      clone.isComposite = true;\n      clonedComposites.push(clone);\n    }\n  }\n  // now merge the clonedComposites into data\n  if(compositesGlobalAliasingEnabled && globalRegexPattern) {\n    Array.prototype.push.apply(data, ApplyGlobalRegexPattern(clonedComposites, globalRegexPattern))\n  } else {\n    Array.prototype.push.apply(data, clonedComposites);\n  }\n  // remove the keepMetrics from the filteredMetrics list\n  // these have been marked by at least one composite to be displayed\n  for (let i = 0; i < keepMetrics.length; i++) {\n    const keptMetric = keepMetrics[i];\n    const location = filteredMetrics.indexOf(keptMetric);\n    if (location >= 0) {\n      filteredMetrics.splice(location, 1);\n    }\n  }\n  // sort by value descending\n  filteredMetrics.sort((a, b) => {\n    return b - a;\n  });\n  // now remove the filtered metrics from final list\n  // remove filtered metrics, use splice in reverse order\n  for (let i = data.length; i >= 0; i--) {\n    if (lodashIncludes(filteredMetrics, i)) {\n      data.splice(i, 1);\n    }\n  }\n  return data;\n};\n","import { FieldCalcs } from '@grafana/data';\nimport { PolystatModel } from '../components/types';\n\nexport function GetValueByOperator(\n  metricName: string,\n  data: PolystatModel | null,\n  operatorName: string,\n  calcs: FieldCalcs\n) {\n  switch (operatorName) {\n    case 'name':\n      return metricName;\n    case 'last_time':\n      if (data) {\n        return data.timestamp;\n      } else {\n        return Date.now();\n      }\n    default:\n      let aValue = calcs[operatorName];\n      return aValue;\n  }\n}\n","export enum MappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\ninterface BaseMap {\n  id: number; // this could/should just be the array index\n  text: string; // the final display value\n  type: MappingType;\n}\n\nexport type ValueMapping = ValueMap | RangeMap;\n\nexport interface ValueMap extends BaseMap {\n  value: string;\n}\n\nexport interface RangeMap extends BaseMap {\n  from: string;\n  to: string;\n}\ntype TimeSeriesValue = string | number | null;\n\nconst addValueToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  valueToTextMapping: ValueMap,\n  value: TimeSeriesValue\n) => {\n  if (valueToTextMapping.value === undefined) {\n    return allValueMappings;\n  }\n\n  if (value === null && isNullValueMap(valueToTextMapping)) {\n    return allValueMappings.concat(valueToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const valueToTextMappingAsNumber = parseFloat(valueToTextMapping.value as string);\n\n  if (isNaN(valueAsNumber) || isNaN(valueToTextMappingAsNumber)) {\n    if (value === valueToTextMapping.value) {\n      return allValueMappings.concat(valueToTextMapping);\n    }\n  }\n\n  if (valueAsNumber !== valueToTextMappingAsNumber) {\n    return allValueMappings;\n  }\n\n  return allValueMappings.concat(valueToTextMapping);\n};\n\nconst addRangeToTextMappingText = (\n  allValueMappings: ValueMapping[],\n  rangeToTextMapping: RangeMap,\n  value: TimeSeriesValue\n) => {\n  if (rangeToTextMapping.from === undefined || rangeToTextMapping.to === undefined || value === undefined) {\n    return allValueMappings;\n  }\n\n  if (\n    value === null &&\n    rangeToTextMapping.from &&\n    rangeToTextMapping.to &&\n    rangeToTextMapping.from.toLowerCase() === 'null' &&\n    rangeToTextMapping.to.toLowerCase() === 'null'\n  ) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  const valueAsNumber = parseFloat(value as string);\n  const fromAsNumber = parseFloat(rangeToTextMapping.from as string);\n  const toAsNumber = parseFloat(rangeToTextMapping.to as string);\n\n  if (isNaN(valueAsNumber) || isNaN(fromAsNumber) || isNaN(toAsNumber)) {\n    return allValueMappings;\n  }\n\n  if (valueAsNumber >= fromAsNumber && valueAsNumber <= toAsNumber) {\n    return allValueMappings.concat(rangeToTextMapping);\n  }\n\n  return allValueMappings;\n};\n\nconst getAllFormattedValueMappings = (valueMappings: ValueMapping[], value: TimeSeriesValue) => {\n  const allFormattedValueMappings = valueMappings.reduce((allValueMappings, valueMapping) => {\n    if (valueMapping.type === MappingType.ValueToText) {\n      allValueMappings = addValueToTextMappingText(allValueMappings, valueMapping as ValueMap, value);\n    } else if (valueMapping.type === MappingType.RangeToText) {\n      allValueMappings = addRangeToTextMappingText(allValueMappings, valueMapping as RangeMap, value);\n    }\n\n    return allValueMappings;\n  }, [] as ValueMapping[]);\n\n  allFormattedValueMappings.sort((t1, t2) => {\n    return t1.id - t2.id;\n  });\n\n  return allFormattedValueMappings;\n};\n\nexport const getMappedValue = (valueMappings: ValueMapping[], value: TimeSeriesValue): ValueMapping => {\n  return getAllFormattedValueMappings(valueMappings, value)[0];\n};\n\nconst isNullValueMap = (mapping: ValueMap): boolean => {\n  if (!mapping || !mapping.value) {\n    return false;\n  }\n  return mapping.value.toLowerCase() === 'null';\n};\n","/**\n * @alpha\n */\nexport enum MappingType {\n  ValueToText = 'value', // was 1\n  RangeToText = 'range', // was 2\n  RegexToText = 'regex',\n  SpecialValue = 'special',\n}\n\n/**\n * @alpha\n */\nexport interface ValueMappingResult {\n  text?: string;\n  color?: string;\n  icon?: string;\n  index?: number;\n}\n\n/**\n * @alpha\n */\ninterface BaseValueMap<T> {\n  type: MappingType;\n  options: T;\n}\n\n/**\n * @alpha\n */\nexport interface ValueMap extends BaseValueMap<Record<string, ValueMappingResult>> {\n  type: MappingType.ValueToText;\n}\n\n/**\n * @alpha\n */\nexport interface RangeMapOptions {\n  from: number | null; // changed from string\n  to: number | null;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport interface RangeMap extends BaseValueMap<RangeMapOptions> {\n  type: MappingType.RangeToText;\n}\n\n/**\n * @alpha\n */\nexport interface RegexMapOptions {\n  pattern: string;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport interface RegexMap extends BaseValueMap<RegexMapOptions> {\n  type: MappingType.RegexToText;\n}\n\n/**\n * @alpha\n */\nexport interface SpecialValueOptions {\n  match: SpecialValueMatch;\n  result: ValueMappingResult;\n}\n\n/**\n * @alpha\n */\nexport enum SpecialValueMatch {\n  True = 'true',\n  False = 'false',\n  Null = 'null',\n  NaN = 'nan',\n  NullAndNaN = 'null+nan',\n  Empty = 'empty',\n}\n\n/**\n * @alpha\n */\nexport interface SpecialValueMap extends BaseValueMap<SpecialValueOptions> {\n  type: MappingType.SpecialValue;\n}\n\n/**\n * @alpha\n */\nexport type ValueMapping = ValueMap | RangeMap | RegexMap | SpecialValueMap;\n","import { getActiveThreshold } from './thresholds';\nimport { stringToJsRegex } from '@grafana/data';\nimport {\n  MappingType,\n  SpecialValueMatch,\n  ValueMap,\n  ValueMapping,\n  ValueMappingResult,\n  SpecialValueOptions,\n} from './types/valueMappings';\nimport { ThresholdsConfig } from './types/thresholds';\n\nexport function getValueMappingResult(valueMappings: ValueMapping[], value: any): ValueMappingResult | null {\n  for (const vm of valueMappings) {\n    switch (vm.type) {\n      case MappingType.ValueToText:\n        if (value == null) {\n          continue;\n        }\n\n        const result = vm.options[value];\n        if (result) {\n          return result;\n        }\n\n        break;\n\n      case MappingType.RangeToText:\n        if (value == null) {\n          continue;\n        }\n\n        const valueAsNumber = parseFloat(value as string);\n        if (isNaN(valueAsNumber)) {\n          continue;\n        }\n\n        const isNumFrom = !isNaN(vm.options.from!);\n        if (isNumFrom && valueAsNumber < vm.options.from!) {\n          continue;\n        }\n\n        const isNumTo = !isNaN(vm.options.to!);\n        if (isNumTo && valueAsNumber > vm.options.to!) {\n          continue;\n        }\n\n        return vm.options.result;\n\n      case MappingType.RegexToText:\n        if (value == null) {\n          continue;\n        }\n\n        if (typeof value !== 'string') {\n          continue;\n        }\n\n        const regex = stringToJsRegex(vm.options.pattern);\n        if (value.match(regex)) {\n          const res = { ...vm.options.result };\n\n          if (res.text != null) {\n            res.text = value.replace(regex, vm.options.result.text || '');\n          }\n\n          return res;\n        }\n\n      case MappingType.SpecialValue:\n        switch ((vm.options as SpecialValueOptions).match) {\n          case SpecialValueMatch.Null: {\n            if (value == null) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.NaN: {\n            if (isNaN(value as any)) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.NullAndNaN: {\n            if (isNaN(value as any) || value == null) {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.True: {\n            if (value === true || value === 'true') {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.False: {\n            if (value === false || value === 'false') {\n              return vm.options.result;\n            }\n            break;\n          }\n          case SpecialValueMatch.Empty: {\n            if (value === '') {\n              return vm.options.result;\n            }\n            break;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// Ref https://stackoverflow.com/a/58550111\nexport function isNumeric(num: any) {\n  return (typeof num === 'number' || (typeof num === 'string' && num.trim() !== '')) && !isNaN(num as number);\n}\n\n/**\n * @deprecated use MappingType instead\n * @internal\n */\nexport enum LegacyMappingType {\n  ValueToText = 1,\n  RangeToText = 2,\n}\n\n/**\n * @deprecated use MappingType instead\n * @internal\n */\nexport interface LegacyBaseMap {\n  id: number; // this could/should just be the array index\n  text: string; // the final display value\n  // intentional use of deprecated function for v8 compat\n  // eslint-disable-next-line deprecation/deprecation\n  type: LegacyMappingType;\n}\n\n/**\n * @deprecated use ValueMapping instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport type LegacyValueMapping = LegacyValueMap | LegacyRangeMap;\n\n/**\n * @deprecated use ValueMap instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport interface LegacyValueMap extends LegacyBaseMap {\n  value: string;\n}\n\n/**\n * @deprecated use RangeMap instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport interface LegacyRangeMap extends LegacyBaseMap {\n  from: string;\n  to: string;\n}\n\n/**\n * @deprecated use getValueMappingResult instead\n * @internal\n */\n// intentional use of deprecated function for v8 compat\n// eslint-disable-next-line deprecation/deprecation\nexport function getMappedValue(valueMappings: LegacyValueMapping[], value: any): LegacyValueMapping {\n  // intentional use of deprecated function for v8 compat\n  // eslint-disable-next-line deprecation/deprecation\n  const emptyResult = { type: LegacyMappingType.ValueToText, value: '', text: '', from: '', to: '', id: 0 };\n  if (!valueMappings?.length) {\n    return emptyResult;\n  }\n\n  const upgraded: ValueMapping[] = [];\n  for (const vm of valueMappings) {\n    if (isValueMapping(vm)) {\n      upgraded.push(vm);\n      continue;\n    }\n    upgraded.push(upgradeOldAngularValueMapping(vm));\n  }\n\n  if (!upgraded?.length) {\n    return emptyResult;\n  }\n\n  const result = getValueMappingResult(upgraded, value);\n  if (!result) {\n    return emptyResult;\n  }\n\n  return {\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    type: LegacyMappingType.ValueToText,\n    value: result.text,\n    text: result.text ?? '',\n    from: '',\n    to: '',\n    id: result.index ?? 0,\n  };\n}\n\n/**\n * @alpha\n * Converts the old Angular value mappings to new react style\n */\nexport function convertOldAngularValueMappings(panel: any, migratedThresholds?: ThresholdsConfig): ValueMapping[] {\n  const mappings: ValueMapping[] = [];\n\n  // Guess the right type based on options\n  let mappingType = panel.mappingType;\n  if (!panel.mappingType) {\n    if (panel.valueMaps && panel.valueMaps.length) {\n      mappingType = 1;\n    } else if (panel.rangeMaps && panel.rangeMaps.length) {\n      mappingType = 2;\n    }\n  }\n  if (mappingType === 1) {\n    for (let i = 0; i < panel.valueMaps.length; i++) {\n      const map = panel.valueMaps[i];\n      mappings.push(\n        upgradeOldAngularValueMapping(\n          {\n            ...map,\n            id: i, // used for order\n            type: MappingType.ValueToText,\n          },\n          panel.fieldConfig?.defaults?.thresholds || migratedThresholds\n        )\n      );\n    }\n  } else if (mappingType === 2) {\n    for (let i = 0; i < panel.rangeMaps.length; i++) {\n      const map = panel.rangeMaps[i];\n      mappings.push(\n        upgradeOldAngularValueMapping(\n          {\n            ...map,\n            id: i, // used for order\n            type: MappingType.RangeToText,\n          },\n          panel.fieldConfig?.defaults?.thresholds || migratedThresholds\n        )\n      );\n    }\n  }\n\n  return mappings;\n}\n\nfunction upgradeOldAngularValueMapping(old: any, thresholds?: ThresholdsConfig): ValueMapping {\n  const valueMaps: ValueMap = { type: MappingType.ValueToText, options: {} };\n  const newMappings: ValueMapping[] = [];\n\n  // Use the color we would have picked from thresholds\n  let color: string | undefined = undefined;\n  const numeric = parseFloat(old.text);\n  if (thresholds && !isNaN(numeric)) {\n    const level = getActiveThreshold(numeric, thresholds.steps);\n    if (level && level.color) {\n      color = level.color;\n    }\n  }\n\n  switch (old.type) {\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    case LegacyMappingType.ValueToText:\n    case MappingType.ValueToText:\n      if (old.value != null) {\n        if (old.value === 'null') {\n          newMappings.push({\n            type: MappingType.SpecialValue,\n            options: {\n              match: SpecialValueMatch.Null,\n              result: { text: old.text, color },\n            },\n          });\n        } else {\n          valueMaps.options[String(old.value)] = {\n            text: old.text,\n            color,\n          };\n        }\n      }\n      break;\n    // intentional use of deprecated function for v8 compat\n    // eslint-disable-next-line deprecation/deprecation\n    case LegacyMappingType.RangeToText:\n    case MappingType.RangeToText:\n      if (old.from === 'null' || old.to === 'null') {\n        newMappings.push({\n          type: MappingType.SpecialValue,\n          options: {\n            match: SpecialValueMatch.Null,\n            result: { text: old.text, color },\n          },\n        });\n      } else {\n        newMappings.push({\n          type: MappingType.RangeToText,\n          options: {\n            from: +old.from,\n            to: +old.to,\n            result: { text: old.text, color },\n          },\n        });\n      }\n      break;\n  }\n\n  if (Object.keys(valueMaps.options).length > 0) {\n    newMappings.unshift(valueMaps);\n  }\n\n  return newMappings[0];\n}\n\nfunction isValueMapping(map: any): map is ValueMapping {\n  if (!map) {\n    return false;\n  }\n\n  return map.hasOwnProperty('options') && typeof map.options === 'object';\n}\n","import { getMappedValue } from './v7/valueMappings';\nimport { getValueMappingResult } from './v8/valueMappings';\n\n//\n// To maintain compatibility back to Grafana >=v7.3, this wrapper is needed\n// to process the value mappings based on the object passed in.\n//\n// the method `getMappedValue()` function was removed in v9\n// the replacement `getValueMappingResult()` only appears in v8.1.0+\n//\n// At runtime, this cannot be determined so the legacy function and the new function are both provided\n// here, to allow this to work work across all versions (7.3 > 9.x)\n//\nexport const GetMappedValue = (valueMappings: any[], value: any): any => {\n  let mappedValue = getMappedValue(valueMappings, value);\n  if (typeof mappedValue === 'undefined') {\n    return getValueMappingResult(valueMappings, value);\n  }\n  return mappedValue;\n};\n","import {\n  getValueFormat,\n  stringToJsRegex,\n  ScopedVars,\n  InterpolateFunction,\n  textUtil,\n  FieldConfigSource,\n  GrafanaTheme2,\n  GrafanaTheme,\n} from '@grafana/data';\nimport { getThresholdLevelForValue } from './threshold_processor';\nimport { GetValueByOperator } from './stats';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { PolystatModel } from '../components/types';\nimport { CUSTOM_SPLIT_DELIMITER } from './types';\nimport { OverrideItemType } from '../components/overrides/types';\nimport { PolystatThreshold } from 'components/thresholds/types';\nimport { GetMappedValue } from './valueMappingsWrapper';\nimport { roundValue } from 'utils';\nimport { TimeFormatter } from './time_formatter';\n\nconst customFormatter = (value: any): string => {\n  if (Object.prototype.toString.call(value) === '[object Array]') {\n    return value.join(CUSTOM_SPLIT_DELIMITER);\n  }\n  return value;\n};\n\nconst resolveOverrideTemplates = (overrides: OverrideItemType[], replaceVariables: InterpolateFunction): OverrideItemType[] => {\n  const ret: OverrideItemType[] = [];\n  const variableRegex = /\\$(\\w+)|\\[\\[([\\s\\S]+?)(?::(\\w+))?\\]\\]|\\${(\\w+)(?:\\.([^:^\\}]+))?(?::(\\w+))?}/g;\n  overrides.forEach((override) => {\n    // Resolve templates in series names\n    if (override.metricName) {\n      const matchResult = override.metricName.match(variableRegex);\n      if (matchResult && matchResult.length > 0) {\n        matchResult.forEach((template: any) => {\n          const scopedVars: ScopedVars = {};\n          const resolvedSeriesNames = replaceVariables(\n            template, scopedVars, customFormatter)\n            .split(CUSTOM_SPLIT_DELIMITER);\n\n          resolvedSeriesNames.forEach((seriesName) => {\n            const newName = override.metricName.replace(template, seriesName);\n            ret.push({\n              ...override,\n              metricName: newName,\n            });\n          });\n        });\n      } else {\n        // does not match template, but can match a simple regex\n        ret.push(override);\n      }\n    }\n  });\n\n  return ret;\n};\n\nexport const MatchOverride = (pattern: string, overrides: OverrideItemType[], replaceVariables: InterpolateFunction): OverrideItemType | null => {\n  const resolvedOverrides = resolveOverrideTemplates(overrides, replaceVariables);\n  for (let index = 0; index < resolvedOverrides.length; index++) {\n    const anOverride = resolvedOverrides[index];\n    const regex = stringToJsRegex(anOverride.metricName);\n    const matches = pattern.match(regex);\n    if (matches && matches.length > 0 && anOverride.enabled) {\n      return resolvedOverrides[index];\n    }\n  }\n  return null;\n};\n\nexport const ApplyOverrides = (\n  overrides: OverrideItemType[],\n  data: PolystatModel[],\n  fieldConfig: FieldConfigSource<any>,\n  globalFillColor: string,\n  globalThresholds: PolystatThreshold[],\n  replaceVariables: InterpolateFunction,\n  timeZone: string,\n  themeV1: GrafanaTheme, // V8\n  themeV2: GrafanaTheme2 // V9+\n) => {\n  // determine real color\n  const realGlobalFillColor = themeV2.visualization.getColorByName(globalFillColor);\n\n  if (!overrides) {\n    return data;\n  }\n\n  for (let index = 0; index < data.length; index++) {\n    const anOverride = MatchOverride(data[index].name, overrides, replaceVariables);\n    if (anOverride) {\n      const aSeries = data[index];\n      // set the operators\n      aSeries.operatorName = anOverride.operatorName;\n      const dataValue = GetValueByOperator(aSeries.name, aSeries, aSeries.operatorName, aSeries.stats);\n      // Use defaults or the specific threshold\n      const thresholds =\n        anOverride.thresholds && anOverride.thresholds.length ? anOverride.thresholds : globalThresholds;\n      const result = getThresholdLevelForValue(thresholds, dataValue, globalFillColor);\n      const useColor = themeV2.visualization.getColorByName(result.color);\n      // set value to what was returned\n      data[index].value = dataValue;\n      data[index].color = useColor;\n      data[index].thresholdLevel = result.thresholdLevel;\n      // format it\n      // TODO: fix me!\n      const mappedValue = GetMappedValue(fieldConfig.defaults.mappings!, data[index].value);\n      if (mappedValue && mappedValue.text !== '') {\n        data[index].valueFormatted = mappedValue.text;\n        // set color also\n        if (mappedValue.color) {\n          let realColor = themeV2.visualization.getColorByName(mappedValue.color);\n          data[index].color = realColor;\n        } else {\n          data[index].color = realGlobalFillColor;\n        }\n        // override the timestamp format also\n        if (anOverride.showTimestampEnabled) {\n          data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, anOverride.showTimestampFormat);\n          data[index].showTimestamp = true;\n        }\n      } else {\n        const formatFunc = getValueFormat(anOverride.unitFormat);\n        if (formatFunc) {\n          // put the value in quotes to escape \"most\" special characters\n          const decimals: number = +anOverride.decimals;\n          const formatted = formatFunc(data[index].value, decimals, anOverride.scaledDecimals);\n          data[index].valueFormatted = formatted.text;\n          // spaces are included with the formatFunc\n          if (formatted.suffix) {\n            data[index].valueFormatted += formatted.suffix;\n          }\n          if (formatted.prefix) {\n            data[index].valueFormatted = formatted.prefix + data[index].valueFormatted;\n          }\n          data[index].valueRounded = roundValue(data[index].value, decimals) || data[index].value;\n        }\n        // process the timestamp display\n        if (anOverride.showTimestampEnabled) {\n          data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, anOverride.showTimestampFormat);\n          data[index].showTimestamp = true;\n        }\n\n      }\n      // add prefix/suffix to formatted value\n      if (anOverride.prefix !== '') {\n        data[index].valueFormatted = anOverride.prefix + ' ' + data[index].valueFormatted;\n      }\n      if (anOverride.suffix !== '') {\n        data[index].valueFormatted = data[index].valueFormatted + ' ' + anOverride.suffix;\n      }\n      if (anOverride.alias !== '') {\n        data[index].displayName = anOverride.alias;\n      }\n      data[index].prefix = anOverride.prefix;\n      data[index].suffix = anOverride.suffix;\n      // set the url, replace template vars\n      if (anOverride.clickThrough && anOverride.clickThrough.length > 0) {\n        let url = anOverride.clickThrough;\n        // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n        url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n        url = ClickThroughTransformer.transformNthMetric(url, data);\n        url = ClickThroughTransformer.transformByRegex(anOverride.metricName, data[index], url);\n        if (replaceVariables) {\n          url = replaceVariables(url);\n        }\n        data[index].clickThrough = url;\n        data[index].newTabEnabled = anOverride.clickThroughOpenNewTab;\n        data[index].sanitizeURLEnabled = anOverride.clickThroughSanitize;\n        // provide both versions, what is displayed is determined later\n        data[index].sanitizedURL = textUtil.sanitize(data[index].clickThrough);\n        data[index].customClickthroughTargetEnabled = anOverride.clickThroughCustomTargetEnabled;\n        data[index].customClickthroughTarget = anOverride.clickThroughCustomTarget;\n      }\n    } else if (globalThresholds && globalThresholds.length) {\n      const result = getThresholdLevelForValue(globalThresholds, data[index].value, globalFillColor);\n      // set value to what was returned\n      data[index].color = result.color;\n      data[index].thresholdLevel = result.thresholdLevel;\n    }\n  }\n  return data;\n};\n","import { InsertTime } from './deframer';\nimport {\n  Field,\n  FieldType,\n  reduceField,\n  textUtil,\n  DataFrame,\n  PanelData,\n  getFieldDisplayName,\n  dateTime,\n  formattedValueToString,\n  getValueFormat,\n  stringToJsRegex,\n  InterpolateFunction,\n  FieldConfigSource,\n  GrafanaTheme2,\n  GrafanaTheme,\n} from '@grafana/data';\nimport { includes as lodashIncludes } from 'lodash';\nimport { DisplayModes, OperatorOptions, PolystatModel } from '../components/types';\nimport { GLOBAL_FILL_COLOR_RGBA } from '../components/defaults';\nimport { GetDecimalsForValue, SortVariableValuesByField, roundValue } from '../utils';\nimport { ApplyComposites } from './composite_processor';\nimport { CompositeItemType } from 'components/composites/types';\nimport { ApplyOverrides } from './override_processor';\nimport { OverrideItemType } from '../components/overrides/types';\nimport { PolystatThreshold } from '../components/thresholds/types';\nimport { ClickThroughTransformer } from './clickThroughTransformer';\nimport { GetMappedValue } from './valueMappingsWrapper';\nimport { GetValueByOperator } from './stats';\nimport { TimeFormatter } from './time_formatter';\n\n/**\n * Converts dataframes to internal model\n *\n * @param   {DataFrame[]}    data                [data description]\n * @param   {string[]}     globalRegexPattern  [globalRegexPattern description]\n *\n * @return  {DataFrame[]}                      [return description]\n */\nexport function ProcessDataFrames(\n  compositesEnabled: boolean,\n  composites: CompositeItemType[],\n  overrides: OverrideItemType[],\n  data: PanelData,\n  replaceVariables: InterpolateFunction,\n  fieldConfig: FieldConfigSource<any>,\n  globalClickthrough: string,\n  globalClickthroughTabEnabled: boolean,\n  globalClickthroughSanitizedEnabled: boolean,\n  globalClickthroughCustomTargetEnabled: boolean,\n  globalClickthroughCustomTarget: string,\n  globalOperator: string,\n  globalDecimals: number,\n  globalDisplayMode: string,\n  globalRegexPattern: string,\n  globalFillColor: string,\n  globalThresholds: PolystatThreshold[],\n  globalUnitFormat: string,\n  globalShowLabel: boolean,\n  globalShowValue: boolean,\n  globalShowTimestamp: boolean,\n  globalShowTimestampFormat: string,\n  sortByDirection: number,\n  sortByField: string,\n  compositesGlobalAliasingEnabled: boolean,\n  timeZone: string,\n  themeV1: GrafanaTheme,\n  themeV2: GrafanaTheme2,\n): PolystatModel[] {\n\n  // check if data contains a field called Time of type time\n  let processedData = InsertTime(data.series);\n  let internalData = [] as PolystatModel[];\n\n  processedData.map((item) => {\n    const models = DataFrameToPolystat(item, globalOperator);\n    for (const aModel of models) {\n      internalData.push(aModel);\n    }\n  });\n  internalData = ApplyGlobalRegexPattern(internalData, globalRegexPattern);\n  // formatting can change colors due to value maps\n  internalData = ApplyGlobalFormatting(\n    internalData,\n    fieldConfig,\n    globalUnitFormat,\n    globalDecimals,\n    globalFillColor,\n    globalShowLabel,\n    globalShowValue,\n    globalShowTimestamp,\n    globalShowTimestampFormat,\n    timeZone,\n    themeV2);\n  // applies overrides and global thresholds (and mappings)\n  internalData = ApplyOverrides(\n    overrides,\n    internalData,\n    fieldConfig,\n    globalFillColor,\n    globalThresholds,\n    replaceVariables,\n    timeZone,\n    themeV1,\n    themeV2\n  );\n  // composites\n  if (compositesEnabled) {\n    internalData = ApplyComposites(\n      composites,\n      internalData,\n      replaceVariables,\n      compositesGlobalAliasingEnabled,\n      timeZone,\n      globalRegexPattern);\n  }\n  // clickthroughs\n  internalData = ApplyGlobalClickThrough(\n    internalData,\n    globalClickthrough,\n    globalClickthroughTabEnabled,\n    globalClickthroughSanitizedEnabled,\n    globalClickthroughCustomTargetEnabled,\n    globalClickthroughCustomTarget,\n    replaceVariables\n  );\n  // filter by global display mode\n  internalData = FilterByGlobalDisplayMode(internalData, globalDisplayMode);\n  // final step sorting\n  internalData = SortVariableValuesByField(internalData, sortByField, sortByDirection);\n  return internalData;\n}\n\n/**\n * renames according to a global regex pattern\n * @param {PolystatModel[]} data [series description]\n * @param {string[]} regexPattern [regexPattern description]\n * @return {PolystatModel[]} [return description]\n */\nexport const ApplyGlobalRegexPattern = (data: PolystatModel[], regexPattern: string): PolystatModel[] => {\n  for (let i = 0; i < data.length; i++) {\n    if (regexPattern !== '') {\n      const regexVal = stringToJsRegex(regexPattern);\n      if (data[i].name && regexVal.test(data[i].name.toString())) {\n        const temp = regexVal.exec(data[i].name.toString());\n        if (!temp) {\n          continue;\n        }\n        let extractedTxt = '';\n        if (temp.length > 1) {\n          temp.slice(1).forEach((value, i) => {\n            if (value) {\n              extractedTxt += extractedTxt.length > 0 ? ' ' + value.toString() : value.toString();\n            }\n          });\n          data[i].displayName = extractedTxt;\n        }\n      }\n    }\n  }\n  return data;\n};\n\nexport const ApplyGlobalClickThrough = (\n  data: PolystatModel[],\n  globalClickthrough: string,\n  globalClickthroughNewTabEnabled: boolean,\n  globalClickthroughSanitizedEnabled: boolean,\n  globalClickthroughCustomTargetEnabled: boolean,\n  globalClickthroughCustomTarget: string,\n  replaceVariables: InterpolateFunction\n): PolystatModel[] => {\n  for (let index = 0; index < data.length; index++) {\n    if (data[index].clickThrough.length === 0) {\n      data[index].clickThrough = processDefaultClickThrough(index, globalClickthrough, data, replaceVariables);\n      data[index].newTabEnabled = globalClickthroughNewTabEnabled;\n      data[index].sanitizeURLEnabled = globalClickthroughSanitizedEnabled;\n      // always provide both versions and overrides and composites can specify which one to use\n      data[index].sanitizedURL = textUtil.sanitize(data[index].clickThrough);\n      data[index].customClickthroughTargetEnabled = globalClickthroughCustomTargetEnabled;\n      data[index].customClickthroughTarget = globalClickthroughCustomTarget;\n    }\n  }\n  return data;\n};\n\n/**\n * Only called for dataframes that do not have a clickthrough specified via overrides or composites.\n * @param {number}              index\n * @param {string}              globalClickthrough string containing the GlobalClickthrough text\n * @param {PolystatModel[]}     data array of data\n * @param {InterpolateFunction} replaceVariables function from template server\n * @return {string} New URL with default clickthrough processed replacements and template variables\n */\nexport const processDefaultClickThrough = (\n  index: number,\n  globalClickthrough: string,\n  data: PolystatModel[],\n  replaceVariables: InterpolateFunction): string => {\n  let url = globalClickthrough;\n  // apply both types of transforms, one targeted at the data item index, and secondly the nth variant\n  url = ClickThroughTransformer.transformSingleMetric(index, url, data);\n  url = ClickThroughTransformer.transformNthMetric(url, data);\n  // process template variables inside clickthrough\n  url = replaceVariables(url);\n  return url;\n};\n\nexport const ApplyGlobalFormatting = (\n  data: PolystatModel[],\n  fieldConfig: FieldConfigSource<any>,\n  globalUnitFormat: string,\n  globalDecimals: number,\n  globalFillColor: string,\n  globalShowLabel: boolean,\n  globalShowValue: boolean,\n  globalShowTimestampEnabled: boolean,\n  globalShowTimestampFormat: string,\n  timeZone: string,\n  theme: GrafanaTheme2\n): PolystatModel[] => {\n  let realGlobalFillColor = theme.visualization.getColorByName(globalFillColor);\n  const formatFunc = getValueFormat(globalUnitFormat);\n  for (let index = 0; index < data.length; index++) {\n    // Check for mapped value, if nothing set, format value\n    if (data[index].value !== null) {\n      data[index].showName = globalShowLabel;\n      data[index].showValue = globalShowValue;\n      const mappedValue = GetMappedValue(fieldConfig.defaults.mappings!, data[index].value);\n      if (mappedValue && mappedValue.text !== '') {\n        data[index].valueFormatted = mappedValue.text;\n        if (globalShowTimestampEnabled) {\n          data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, globalShowTimestampFormat);\n          data[index].showTimestamp = true;\n        }\n        // set color also\n        if (mappedValue.color) {\n          let realColor = theme.visualization.getColorByName(mappedValue.color);\n          data[index].color = realColor;\n        } else {\n          data[index].color = realGlobalFillColor;\n        }\n      } else {\n        if (formatFunc) {\n          const result = GetDecimalsForValue(data[index].value, globalDecimals);\n          const formatted = formatFunc(data[index].value, result.decimals, result.scaledDecimals);\n          data[index].valueFormatted = formatted.text;\n          if (formatted.suffix) {\n            data[index].valueFormatted += ` ${formatted.suffix}`;\n          }\n          if (formatted.prefix) {\n            data[index].valueFormatted = `{$formatted.prefix} ${data[index].valueFormatted}`;\n          }\n          const valueRounded = roundValue(data[index].value, result.decimals);\n          if (valueRounded !== null) {\n            data[index].valueRounded = valueRounded;\n          }\n          if (globalShowTimestampEnabled) {\n            data[index].timestampFormatted = TimeFormatter(timeZone, data[index].timestamp, globalShowTimestampFormat);\n            data[index].showTimestamp = true;\n          }\n        }\n        data[index].color = realGlobalFillColor;\n      }\n    }\n  }\n  return data;\n};\n\nconst FilterByGlobalDisplayMode = (data: any, globalDisplayMode: string): PolystatModel[] => {\n  const filteredMetrics: number[] = [];\n  const compositeMetrics: PolystatModel[] = [];\n  if (globalDisplayMode !== 'all') {\n    const dataLen = data.length;\n    for (let i = 0; i < dataLen; i++) {\n      const item = data[i];\n      // keep if composite\n      if (item.isComposite) {\n        compositeMetrics.push(item);\n      }\n      if (item.thresholdLevel < 1) {\n        // push the index number\n        filteredMetrics.push(i);\n      }\n    }\n    // remove filtered metrics, use splice in reverse order\n    for (let i = data.length; i >= 0; i--) {\n      if (lodashIncludes(filteredMetrics, i)) {\n        data.splice(i, 1);\n      }\n    }\n    if (data.length === 0) {\n      if (compositeMetrics.length > 0) {\n        // set data to be all of the composites\n        data = compositeMetrics;\n      }\n    }\n  }\n  return data;\n};\n\nexport const DataFrameToPolystat = (frame: DataFrame, globalOperator: string): PolystatModel[] => {\n\n  const valueFields: Field[] = [];\n  let newestTimestamp = 0;\n\n  for (const aField of frame.fields) {\n    if (aField.type === FieldType.number) {\n      valueFields.push(aField);\n    }\n    else if (aField.type === FieldType.time) {\n      // get the \"newest\" timestamp from data\n      // check if timestamp is 0\n      let aTimestamp = 0;\n      let timestampIndex = aField.values.length - 1;\n      try {\n        aTimestamp = aField.values.get(timestampIndex);\n      } catch {\n        // @ts-ignore, workaround for 9.5+ removal of VectorArray\n        aTimestamp = aField.values[timestampIndex];\n      }\n      if (newestTimestamp === 0) {\n        newestTimestamp = aTimestamp;\n      }\n      // check if data timestamp is newer\n      if (aTimestamp > newestTimestamp) {\n        newestTimestamp = aTimestamp;\n      }\n    }\n  }\n  if (newestTimestamp === 0) {\n    // use current time if none is found\n    newestTimestamp = new Date().getTime()\n  }\n  const models: PolystatModel[] = [];\n\n  for (const valueField of valueFields) {\n    const valueFieldName = getFieldDisplayName(valueField!, frame);\n    const standardCalcs = reduceField({ field: valueField!, reducers: ['bogus'] });\n    //\n    // side effect of getFieldDisplayName: it modifies content of valueField.state by adding a displayName\n    // file a bug? deframer has been fixed to clone the the field.state to work around the issue\n    //\n    //if (valueField.state?.displayName !== undefined) {\n    //  delete valueField.state?.displayName;\n    //}\n    const operatorValue = GetValueByOperator(valueFieldName, null, globalOperator, standardCalcs);\n\n    let maxDecimals = 4;\n    if (valueField!.config.decimals !== undefined && valueField!.config.decimals !== null) {\n      maxDecimals = valueField!.config.decimals;\n    }\n    const result = getValueFormat(valueField!.config.unit)(operatorValue, maxDecimals, undefined, undefined);\n    const valueFormatted = formattedValueToString(result);\n    const model: PolystatModel = {\n      displayMode: DisplayModes[0].value,\n      thresholdLevel: 0,\n      value: operatorValue,\n      valueFormatted: valueFormatted,\n      valueRounded: roundValue(operatorValue, maxDecimals) || operatorValue,\n      stats: standardCalcs,\n      name: valueFieldName,\n      displayName: valueFieldName,\n      timestamp: newestTimestamp,\n      timestampFormatted: '',\n      prefix: '',\n      suffix: '',\n      color: GLOBAL_FILL_COLOR_RGBA,\n      clickThrough: '',\n      operatorName: OperatorOptions[0].value,\n      newTabEnabled: true,\n      sanitizedURL: '',\n      sanitizeURLEnabled: true,\n      showName: true,\n      showValue: true,\n      showTimestamp: false,\n      isComposite: false,\n      members: [],\n      customClickthroughTargetEnabled: false,\n      customClickthroughTarget: ''\n    };\n    models.push(model);\n  }\n  return models;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { PanelProps, GrafanaTheme2, LoadingState } from '@grafana/data';\nimport { PolystatOptions, PolystatModel } from './types';\nimport { Polystat } from './Polystat';\nimport { css, cx } from '@emotion/css';\nimport { useStyles2, useTheme, useTheme2 } from '@grafana/ui';\nimport { ProcessDataFrames } from '../data/processor';\n\ninterface Props extends PanelProps<PolystatOptions> {}\n\nconst getComponentStyles = (theme: GrafanaTheme2) => {\n  return {\n    wrapper: css`\n      position: relative;\n    `,\n    container: css`\n      align-items: center;\n      justify-content: center;\n      display: flex;\n      height: 100%;\n      width: 100%;\n      & svg > g > polygon {\n        fill: transparent;\n      }\n    `,\n  };\n};\n\n\nexport const PolystatPanel: React.FC<Props> = ({ options, data, id, width, height, replaceVariables, fieldConfig, timeZone }) => {\n  const styles = useStyles2(getComponentStyles);\n  const currentThemeV1 = useTheme(); // V8\n  const currentThemeV2 = useTheme2(); // V9+\n  let [cachedProcessedData, setCachedProcessedData] = useState<PolystatModel[]>();\n  useEffect(() => {\n    if (data.state === LoadingState.Done) {\n      // each series is a converted to a model we can use\n      const processedData = ProcessDataFrames(\n        options.compositeConfig.enabled,\n        options.compositeConfig.composites,\n        options.overrideConfig.overrides,\n        data,\n        replaceVariables,\n        fieldConfig,\n        options.globalClickthrough,\n        options.globalClickthroughNewTabEnabled,\n        options.globalClickthroughSanitizedEnabled,\n        options.globalClickthroughCustomTargetEnabled,\n        options.globalClickthroughCustomTarget,\n        options.globalOperator,\n        options.globalDecimals,\n        options.globalDisplayMode,\n        options.globalRegexPattern,\n        options.globalFillColor,\n        options.globalThresholdsConfig,\n        options.globalUnitFormat,\n        true, // TODO: future configurable global option to not display label\n        options.globalShowValueEnabled,\n        options.globalShowTimestampEnabled,\n        options.globalShowTimestampFormat,\n        options.sortByDirection,\n        options.sortByField,\n        options.compositeGlobalAliasingEnabled,\n        timeZone,\n        currentThemeV1,\n        currentThemeV2,\n      );\n      setCachedProcessedData(processedData);\n\n    }\n  }, [data, fieldConfig, options, replaceVariables, currentThemeV1, currentThemeV2, timeZone]);\n\n  if (cachedProcessedData === undefined) {\n    return (\n      <>Loading... please wait</>\n    )\n  }\n\n  return (\n    <div\n      className={cx(\n        styles.wrapper,\n        css`\n          width: ${width}px;\n          height: ${height}px;\n        `\n      )}\n    >\n      <div className={cx(styles.container)}>\n        <Polystat\n          compositeConfig={options.compositeConfig}\n          overrideConfig={options.overrideConfig}\n          autoSizePolygons={options.autoSizePolygons}\n          globalAutoScaleFonts={options.globalAutoScaleFonts}\n          globalClickthrough={options.globalClickthrough}\n          globalClickthroughNewTabEnabled={options.globalClickthroughNewTabEnabled}\n          globalClickthroughSanitizedEnabled={options.globalClickthroughSanitizedEnabled}\n          globalClickthroughCustomTargetEnabled={options.globalClickthroughCustomTargetEnabled}\n          globalClickthroughCustomTarget={options.globalClickthroughCustomTarget}\n          globalOperator={options.globalOperator}\n          globalDecimals={options.globalDecimals}\n          globalDisplayMode={options.globalDisplayMode}\n          globalDisplayTextTriggeredEmpty={options.globalDisplayTextTriggeredEmpty}\n          globalFontSize={options.globalFontSize}\n          globalPolygonSize={options.globalPolygonSize}\n          ellipseCharacters={options.ellipseCharacters}\n          ellipseEnabled={options.ellipseEnabled}\n          globalFillColor={options.globalFillColor}\n          globalRegexPattern={options.globalRegexPattern}\n          globalGradientsEnabled={options.globalGradientsEnabled}\n          globalShowTimestampEnabled={options.globalShowTimestampEnabled}\n          globalShowTimestampFormat={options.globalShowTimestampFormat}\n          globalShowTimestampPosition={options.globalShowTimestampPosition}\n          globalShowTimestampFontSize={options.globalShowTimestampFontSize}\n          globalShowTimestampYOffset={options.globalShowTimestampYOffset}\n          globalTextFontAutoColor={options.globalTextFontAutoColorEnabled ? currentThemeV2.colors.text.primary : '#000000'}\n          globalTextFontAutoColorEnabled={options.globalTextFontAutoColorEnabled}\n          globalTextFontColor={options.globalTextFontColor}\n          globalTextFontFamily={options.globalTextFontFamily}\n          globalThresholdsConfig={options.globalThresholdsConfig}\n          globalTooltipsEnabled={options.globalTooltipsEnabled}\n          globalTooltipsShowTimestampEnabled={options.globalTooltipsShowTimestampEnabled}\n          globalTooltipsShowValueEnabled={options.globalTooltipsShowValueEnabled}\n          globalTooltipsFontFamily={options.globalTooltipsFontFamily}\n          globalUnitFormat={options.globalUnitFormat}\n          autoSizeColumns={options.autoSizeColumns}\n          autoSizeRows={options.autoSizeRows}\n          layoutDisplayLimit={options.layoutDisplayLimit}\n          layoutNumColumns={options.layoutNumColumns}\n          layoutNumRows={options.layoutNumRows}\n          processedData={cachedProcessedData}\n          panelId={id}\n          panelWidth={width}\n          panelHeight={height}\n          radius={options.radius}\n          renderTime={new Date()}\n          globalShape={options.globalShape}\n          sortByDirection={options.sortByDirection}\n          sortByField={options.sortByField}\n          globalPolygonBorderColor={options.globalPolygonBorderColor}\n          globalPolygonBorderSize={options.globalPolygonBorderSize}\n          globalShowValueEnabled={options.globalShowValueEnabled}\n          globalShowTooltipColumnHeadersEnabled={options.globalShowTooltipColumnHeadersEnabled}\n          tooltipPrimarySortDirection={options.tooltipPrimarySortDirection}\n          tooltipPrimarySortByField={options.tooltipPrimarySortByField}\n          tooltipSecondarySortDirection={options.tooltipSecondarySortDirection}\n          tooltipSecondarySortByField={options.tooltipSecondarySortByField}\n          tooltipDisplayMode={options.tooltipDisplayMode}\n          tooltipDisplayTextTriggeredEmpty={options.tooltipDisplayTextTriggeredEmpty}\n          compositeGlobalAliasingEnabled={options.compositeGlobalAliasingEnabled}\n        />\n      </div>\n    </div>\n  );\n};\n","import { SelectableValue } from '@grafana/data';\n\nexport const DisplayModes: SelectableValue[] = [\n  { value: 'all', label: 'Show All' },\n  { value: 'triggered', label: 'Show Triggered' },\n];\n\nexport interface CompositeMetric {\n  seriesMatch: string;\n  compositeMatch?: CompositeItemType[];\n  alias?: string;\n  ID?: string;\n  order: number;\n  seriesName?: string;\n  seriesNameEscaped?: string;\n}\n\nexport interface CompositeItemType {\n  name: string;\n  label: string;\n  order: number;\n  isTemplated: boolean;\n  displayMode: string;\n  enabled: boolean;\n  showName: boolean;\n  showValue: boolean;\n  showComposite: boolean;\n  showMembers: boolean;\n  showTimestampEnabled: boolean;\n  showTimestampFormat: string;\n  showTimestampYOffset: number;\n  metrics: CompositeMetric[];\n  clickThrough: string | '';\n  clickThroughSanitize: boolean;\n  clickThroughOpenNewTab: boolean;\n  clickThroughCustomTargetEnabled: boolean;\n  clickThroughCustomTarget: string;\n}\n\nexport interface CompositeItemTracker {\n  composite: CompositeItemType;\n  order: number;\n  ID: string;\n}\n\nexport interface CompositeItemProps {\n  composite: CompositeItemType;\n  ID: string;\n  enabled: boolean;\n  setter: any;\n  remover: any;\n  moveUp: any;\n  moveDown: any;\n  createDuplicate: any;\n  context: any;\n}\n\nexport interface CompositeMetricItemProps {\n  metric: CompositeMetric;\n  index: number;\n  disabled: boolean;\n  removeMetric: any;\n  updateMetric: any;\n  updateMetricAlias: any;\n  context: any;\n}\n","import React, { useEffect, useState } from 'react';\n\nimport { Input, Field, IconButton, HorizontalGroup, Cascader, CascaderOption, FieldSet } from '@grafana/ui';\nimport { CompositeMetricItemProps } from './types';\nimport { getMetricHints } from '../metric_hints';\n\nexport const CompositeMetricItem: React.FC<CompositeMetricItemProps> = (props) => {\n  const [metricHints, setMetricHints] = useState<CascaderOption[]>([]);\n\n  async function copySelectedMetricToClipboard(index: number) {\n    if (props.metric.seriesMatch) {\n      const aValue = props.metric.seriesMatch;\n      if ('clipboard' in navigator) {\n        if (aValue) {\n          return await navigator.clipboard.writeText(aValue);\n        }\n      } else {\n        if (aValue) {\n          // use the old method if clipboard is not available\n          // eslint-disable-next-line deprecation/deprecation\n          return document.execCommand('copy', true, aValue);\n        }\n      }\n    }\n  }\n\n  const updateMetric = (v: string) => {\n    props.updateMetric(props.index, v);\n  };\n  const updateMetricAlias = (alias: string) => {\n    props.updateMetricAlias(props.index, alias);\n  };\n\n  useEffect(() => {\n    if (props.context.data) {\n      const frames = props.context.data;\n      let hints: CascaderOption[] = [];\n      let metricHints = getMetricHints(frames);\n      for (const metricName of metricHints) {\n        hints.push({\n          label: metricName,\n          value: metricName,\n        });\n      }\n      setMetricHints(hints);\n    }\n  }, [props.context.data]);\n\n  return (\n    <FieldSet>\n      <HorizontalGroup>\n        <IconButton\n          key=\"deleteMetric\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete this metric\"\n          onClick={() => props.removeMetric(props.index)}\n        />\n        <IconButton\n          key=\"copyMetric\"\n          variant=\"secondary\"\n          name=\"copy\"\n          tooltip=\"Copy Metric/Regex\"\n          onClick={() => copySelectedMetricToClipboard(props.index)}\n        />\n        <Field label=\"Metric/RegEx\" id={`cmi-field-index-${props.index}`} style={{ minWidth: '175px' }} disabled={props.disabled}>\n          <Cascader\n            key={`cmi-cascader-index-${props.index}`}\n            initialValue={props.metric.seriesMatch}\n            allowCustomValue\n            placeholder=\"\"\n            options={metricHints}\n            onSelect={(val: string) => updateMetric(val)}\n          />\n        </Field>\n        <Field label=\"Alias\" disabled={props.disabled}>\n          <Input value={props.metric.alias}\n            id={`cmi-alias-index-${props.index}`}\n            placeholder=\"\" onChange={(e) => updateMetricAlias(e.currentTarget.value)} />\n        </Field>\n      </HorizontalGroup>\n    </FieldSet>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { IconName, Button, Input, Select, Field, FieldSet, Switch, Card, IconButton, Cascader } from '@grafana/ui';\nimport { DisplayModes, CompositeItemProps, CompositeMetric, CompositeItemType } from './types';\nimport { CompositeMetricItem } from './CompositeMetricItem';\nimport { v4 as UUIDv4 } from 'uuid';\nimport { SelectableValue } from '@grafana/data';\nimport { ShowTimestampFormats } from 'components/types';\n\nexport const CompositeItem: React.FC<CompositeItemProps> = (props: CompositeItemProps) => {\n  const [composite, _setComposite] = useState(props.composite);\n  const getDisplayMode = (displayMode: string) => {\n    const keys = DisplayModes.keys();\n    for (const aKey of keys) {\n      if (DisplayModes[aKey].value === displayMode) {\n        return DisplayModes[aKey];\n      }\n    }\n    // no match, return all by default\n    return DisplayModes[0];\n  };\n  const [displayMode, setDisplayMode] = useState<SelectableValue>(getDisplayMode(props.composite.displayMode));\n  const setComposite = (value: CompositeItemType) => {\n    _setComposite(value);\n    props.setter(composite.order, value);\n  };\n  const [visibleIcon] = useState<IconName>('eye');\n  const [hiddenIcon] = useState<IconName>('eye-slash');\n  const removeItem = () => {\n    //alert('high');\n    props.remover(composite.order);\n    // call parent remove function\n  };\n\n  const toggleShowName = () => {\n    const currentState = composite.showName;\n    //setShowName(!currentState);\n    setComposite({ ...composite, showName: !currentState });\n  };\n\n  const removeMetric = (index: number) => {\n    let allMetrics = [...props.composite.metrics];\n    allMetrics.splice(index, 1);\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n  const moveUp = () => {\n    props.moveUp(composite.order);\n  };\n  const moveDown = () => {\n    props.moveDown(composite.order);\n  };\n  const createDuplicate = () => {\n    props.createDuplicate(composite.order);\n  };\n\n  const updateMetric = (index: number, value: string) => {\n    const allMetrics = props.composite.metrics;\n    allMetrics[index].seriesMatch = value;\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n\n  const updateMetricAlias = (index: number, alias: string) => {\n    const allMetrics = props.composite.metrics;\n    allMetrics[index].alias = alias;\n    setComposite({ ...props.composite, metrics: allMetrics });\n  };\n\n  const addMetric = () => {\n    const newMetric: CompositeMetric = {\n      seriesMatch: '',\n      ID: UUIDv4(),\n      order: 0,\n    };\n    if (!composite.metrics) {\n      const currentMetrics: CompositeMetric[] = [];\n      currentMetrics.push(newMetric);\n      setComposite({ ...composite, metrics: currentMetrics });\n    } else {\n      const currentMetrics: CompositeMetric[] = composite.metrics;\n      newMetric.order = currentMetrics.length;\n      currentMetrics.push(newMetric);\n      setComposite({ ...composite, metrics: currentMetrics });\n    }\n  };\n\n  return (\n    <Card key={`composite-card-${props.ID}`}>\n      <Card.Meta>\n        <FieldSet>\n          <Field label=\"Composite Name\" description=\"Name or Regular Expression\" disabled={!composite.showComposite}>\n            <Input\n              value={composite.name}\n              placeholder=\"\"\n              onChange={(e) => setComposite({ ...composite, name: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Show Name\" description=\"Toggle Display of composite name\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showName}\n              disabled={!composite.showComposite}\n              onChange={toggleShowName}\n            ></Switch>\n          </Field>\n          <Field label=\"Show Value\" description=\"Toggle Display of composite value\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showValue}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showValue: !composite.showValue })}\n            />\n          </Field>\n          {/*\n          <Field label=\"Show Timestamp\" description=\"Toggle Display of Timestamp for each value\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={true}\n              value={composite.showTimestampEnabled}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showTimestampEnabled: !composite.showTimestampEnabled })}\n            />\n          </Field>\n          <Field label=\"Timestamp Format\" description=\"Format of timestamp to display\" disabled={!composite.showComposite} hidden={!composite.showTimestampEnabled}>\n            <Cascader\n              initialValue={composite.showTimestampFormat}\n              allowCustomValue\n              placeholder=\"\"\n              options={ShowTimestampFormats}\n              onSelect={(val: string) => setComposite({ ...composite, showTimestampFormat: val })}\n            />\n          </Field>\n          <Field label=\"Timestamp Y Offset\" description=\"Adjust the displayed timestamp up or down the Y-Axis, use negative value to move up, positive for down\" disabled={!composite.showComposite} hidden={!composite.showTimestampEnabled}>\n            <Input\n              value={composite.showTimestampYOffset}\n              type=\"number\"\n              step={1}\n              placeholder=\"0\"\n              onChange={(v) => setComposite({ ...composite, showTimestampYOffset: v.currentTarget.valueAsNumber })}\n            />\n          </Field>\n          */}\n          <Field\n            label=\"Show Members\"\n            description=\"Toggle Display of composite members\"\n            disabled={!composite.showComposite}\n          >\n            <Switch\n              transparent={true}\n              value={composite.showMembers}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, showMembers: !composite.showMembers })}\n            />\n          </Field>\n          <Field\n            label=\"Display Mode\"\n            description=\"All will display all members, Triggered will only display those meeting threshold settings\"\n            disabled={!composite.showComposite}\n          >\n            <Select\n              menuShouldPortal={true}\n              value={displayMode}\n              onChange={(v) => {\n                setDisplayMode(v);\n                setComposite({ ...composite, displayMode: v.value });\n              }}\n              options={DisplayModes}\n            />\n          </Field>\n          <Field label=\"Clickthrough URL\" description=\"URL to Open on Click\" disabled={!composite.showComposite}>\n            <Input\n              value={composite.clickThrough}\n              placeholder=\"https://\"\n              onChange={(e) => setComposite({ ...composite, clickThrough: e.currentTarget.value })}\n            />\n          </Field>\n          <Field label=\"Sanitize URL\" description=\"Sanitize URL before evaluating\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={false}\n              disabled={!composite.showComposite}\n              value={composite.clickThroughSanitize}\n              onChange={() => setComposite({ ...composite, clickThroughSanitize: !composite.clickThroughSanitize })}\n            />\n          </Field>\n          <Field label=\"Open URL in New Tab\" description=\"Open link in new tab\" disabled={!composite.showComposite}>\n            <Switch\n              transparent={false}\n              value={composite.clickThroughOpenNewTab}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite, clickThroughOpenNewTab: !composite.clickThroughOpenNewTab })}\n            />\n          </Field>\n          <Field label=\"Enable Custom URL Target\" description=\"Enable custom target\" disabled={!composite.showComposite} hidden={composite.clickThroughOpenNewTab}>\n            <Switch\n              transparent={false}\n              value={composite.clickThroughCustomTargetEnabled}\n              disabled={!composite.showComposite}\n              onChange={() => setComposite({ ...composite,\n                clickThroughCustomTargetEnabled: !composite.clickThroughCustomTargetEnabled,\n                clickThroughCustomTarget: composite.clickThroughCustomTarget || ''\n              })}\n            />\n          </Field>\n          <Field label=\"Custom URL Target\" description=\"Specify a custom target, typical values are: _blank|_self|_parent|_top|framename\" disabled={!composite.showComposite} hidden={!composite.clickThroughCustomTargetEnabled}>\n            <Input\n              value={composite.clickThroughCustomTarget}\n              placeholder=\"_self\"\n              disabled={!composite.showComposite}\n              onChange={(e) => setComposite({ ...composite, clickThroughCustomTarget: e.currentTarget.value })}\n            />\n          </Field>\n          <Field disabled={!composite.showComposite}>\n            <Button\n              key=\"addMetric\"\n              variant=\"primary\"\n              icon=\"plus\"\n              disabled={!composite.showComposite}\n              onClick={addMetric}\n            >\n              Add Metric\n            </Button>\n          </Field>\n          {composite.metrics &&\n            composite.metrics.map((item: CompositeMetric, index: number) => {\n              // generate ID if it doesn't exist\n              if (!item.ID) {\n                item.ID = UUIDv4();\n              }\n              return (\n                <CompositeMetricItem\n                  key={`composite-metric-id-${item.ID}`}\n                  metric={item}\n                  index={index}\n                  disabled={!composite.showComposite}\n                  updateMetric={updateMetric}\n                  updateMetricAlias={updateMetricAlias}\n                  removeMetric={removeMetric}\n                  context={props.context}\n                />\n              );\n            })}\n        </FieldSet>\n      </Card.Meta>\n      <Card.Actions>\n        <IconButton key=\"moveUp\" name=\"arrow-up\" tooltip=\"Move Up\" onClick={moveUp} />\n        <IconButton key=\"moveDown\" name=\"arrow-down\" tooltip=\"Move Down\" onClick={moveDown} />\n        <IconButton\n          key=\"showComposite\"\n          name={composite.showComposite ? visibleIcon : hiddenIcon}\n          tooltip=\"Hide/Show Composite\"\n          onClick={() => setComposite({ ...composite, showComposite: !composite.showComposite })}\n        />\n        <IconButton key=\"copyComposite\" name=\"copy\" tooltip=\"Duplicate\" onClick={createDuplicate} />\n        <IconButton\n          key=\"deleteComposite\"\n          variant=\"destructive\"\n          name=\"trash-alt\"\n          tooltip=\"Delete Composite\"\n          onClick={removeItem}\n        />\n      </Card.Actions>\n    </Card>\n  );\n};\n","import React, {useState} from 'react';\nimport {StandardEditorProps} from '@grafana/data';\nimport {Button, Collapse, Field, FieldSet, Input, Switch} from '@grafana/ui';\n\nimport {CompositeItem} from './CompositeItem';\nimport {CompositeItemTracker, CompositeItemType, CompositeMetric, DisplayModes} from './types';\nimport {v4 as UUIdv4} from 'uuid';\nimport { ShowTimestampFormats } from 'components/types';\n\nexport interface CompositeEditorSettings {\n  composites: CompositeItemType[];\n  enabled: boolean;\n  animationSpeed: string;\n}\n\ninterface Props extends StandardEditorProps<string | string[] | null, CompositeEditorSettings> {}\n\nexport const CompositeEditor: React.FC<Props> = ({ context, onChange }) => {\n  const [settings] = useState(context.options.compositeConfig);\n  const [animationSpeed, _setAnimationSpeed] = useState(context.options.compositeConfig.animationSpeed);\n  const [compositesEnabled, _setCompositesEnabled] = useState(context.options.compositeConfig.enabled);\n  const [tracker, _setTracker] = useState((): CompositeItemTracker[] => {\n    if (settings.composites) {\n      const items: CompositeItemTracker[] = [];\n      settings.composites.forEach((value: CompositeItemType, index: number) => {\n        items[index] = {\n          composite: value,\n          order: index,\n          ID: UUIdv4(),\n        };\n      });\n      return items;\n    } else {\n      return [] as CompositeItemTracker[];\n    }\n  });\n\n  const setAnimationSpeed = (val: any) => {\n    _setAnimationSpeed(val);\n    settings.animationSpeed = val;\n    onChange(settings);\n  };\n  const setCompositesEnabled = (val: any) => {\n    _setCompositesEnabled(val);\n    settings.enabled = val;\n    onChange(settings);\n  };\n  const setTracker = (v: CompositeItemTracker[]) => {\n    _setTracker(v);\n    // update the panel config (only the composites themselves, not the tracker)\n    const allComposites: CompositeItemType[] = [];\n    v.forEach((element) => {\n      allComposites.push(element.composite);\n    });\n    const compositeConfig = {\n      composites: allComposites,\n      animationSpeed: settings.animationSpeed,\n      enabled: settings.enabled,\n    };\n    onChange(compositeConfig as any);\n  };\n\n  // tracks composite card collapse state\n  const [isOpen, setIsOpen] = useState((): boolean[] => {\n    if (!tracker) {\n      return [];\n    }\n    let size = tracker.length;\n    const openStates: boolean[] = [];\n    while (size--) {\n      openStates[size] = false;\n    }\n    return openStates;\n  });\n\n  // generic move\n  const arrayMove = (arr: any, oldIndex: number, newIndex: number) => {\n    if (newIndex >= arr.length) {\n      let k = newIndex - arr.length + 1;\n      while (k--) {\n        arr.push(undefined);\n      }\n    }\n    arr.splice(newIndex, 0, arr.splice(oldIndex, 1)[0]);\n  };\n\n  const moveDown = (index: number) => {\n    if (index !== tracker.length - 1) {\n      arrayMove(tracker, index, index + 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].composite.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const moveUp = (index: number) => {\n    if (index > 0) {\n      arrayMove(tracker, index, index - 1);\n      // reorder\n      for (let i = 0; i < tracker.length; i++) {\n        tracker[i].order = i;\n        tracker[i].composite.order = i;\n      }\n      setTracker([...tracker]);\n    }\n  };\n\n  const createDuplicate = (index: number) => {\n    const original = tracker[index].composite;\n    const order = tracker.length;\n    const aComposite: CompositeItemType = {\n      name: `${original.name} Copy`,\n      label: `${original.name} Copy`,\n      order: order,\n      isTemplated: original.isTemplated,\n      displayMode: original.displayMode,\n      enabled: original.enabled,\n      showName: original.showName,\n      showValue: original.showValue,\n      showComposite: original.showComposite,\n      showMembers: original.showMembers,\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      metrics: original.metrics,\n      clickThrough: original.clickThrough,\n      clickThroughOpenNewTab: original.clickThroughOpenNewTab,\n      clickThroughSanitize: original.clickThroughSanitize,\n      clickThroughCustomTargetEnabled: original.clickThroughCustomTargetEnabled,\n      clickThroughCustomTarget: original.clickThroughCustomTarget\n    };\n    const aTracker: CompositeItemTracker = {\n      composite: aComposite,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    setIsOpen([...isOpen, true]);\n  };\n\n  const updateComposite = (index: number, value: CompositeItemType) => {\n    tracker[index].composite = value;\n    setTracker([...tracker]);\n  };\n\n  const removeComposite = (compositeIndex: number) => {\n    // find the composite by the compositeIndex\n    const allComposites = [...tracker];\n    let removeIndex = 0;\n    for (let i = 0; i < allComposites.length; i++) {\n      if (allComposites[i].order === compositeIndex) {\n        removeIndex = i;\n        break;\n      }\n    }\n    allComposites.splice(removeIndex, 1);\n    // reorder\n    for (let i = 0; i < allComposites.length; i++) {\n      allComposites[i].order = i;\n    }\n    setTracker([...allComposites]);\n  };\n\n  const toggleOpener = (index: number) => {\n    const toggleState = [...isOpen];\n    toggleState[index] = !toggleState[index];\n    setIsOpen([...toggleState]);\n  };\n\n  const addItem = () => {\n    const order = tracker.length;\n    const aComposite: CompositeItemType = {\n      name: `Composite-${order}`,\n      label: `Composite-${order}`,\n      showName: true,\n      showValue: true,\n      showMembers: false,\n      showComposite: true,\n      showTimestampEnabled: false,\n      showTimestampFormat: ShowTimestampFormats[0].value,\n      showTimestampYOffset: 0,\n      isTemplated: false,\n      enabled: true,\n      metrics: [] as CompositeMetric[],\n      displayMode: DisplayModes[0].value,\n      clickThrough: '',\n      clickThroughOpenNewTab: true,\n      clickThroughSanitize: true,\n      clickThroughCustomTargetEnabled: false,\n      clickThroughCustomTarget: '',\n      order: order\n    };\n    const aTracker: CompositeItemTracker = {\n      composite: aComposite,\n      order: order,\n      ID: UUIdv4(),\n    };\n    setTracker([...tracker, aTracker]);\n    // add an opener also\n    setIsOpen([...isOpen, true]);\n  };\n\n  return (\n    <>\n      <FieldSet>\n        <Field label=\"Enable Composites\" description=\"Enable/Disable Composites Globally\">\n          <Switch\n            transparent={true}\n            value={compositesEnabled}\n            onChange={() => setCompositesEnabled(!compositesEnabled)}\n          />\n        </Field>\n        <Field label=\"Animation Speed (ms)\" description=\"Animation Speed in milliseconds\" disabled={!settings.enabled}>\n          <Input\n            value={animationSpeed}\n            placeholder=\"500\"\n            onChange={(e: any) => setAnimationSpeed(e.currentTarget.value)}\n          />\n        </Field>\n      </FieldSet>\n      <Button fill=\"solid\" variant=\"primary\" icon=\"plus\" disabled={!settings.enabled} onClick={addItem}>\n        Add Composite\n      </Button>\n      {tracker &&\n        tracker.map((item: CompositeItemTracker, index: number) => {\n          return (\n            <Collapse\n              key={`collapse-item-index-${item.ID}`}\n              label={item.composite.name}\n              isOpen={isOpen[index]}\n              onToggle={() => toggleOpener(index)}\n              collapsible\n            >\n              <CompositeItem\n                key={`composite-item-index-${item.ID}`}\n                ID={item.ID}\n                composite={item.composite}\n                enabled={item.composite.enabled}\n                setter={updateComposite}\n                remover={removeComposite}\n                moveUp={moveUp}\n                moveDown={moveDown}\n                createDuplicate={createDuplicate}\n                context={context}\n              />\n            </Collapse>\n          );\n        })}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { StandardEditorProps } from '@grafana/data';\nimport { Field } from '@grafana/ui';\n\nimport { PolystatThreshold } from './types';\nimport { ThresholdsEditor } from './ThresholdsEditor';\n\nexport interface GlobalThresholdEditorSettings {}\n\ninterface Props extends StandardEditorProps<string | string[] | null, GlobalThresholdEditorSettings> {}\n\nexport const GlobalThresholdEditor: React.FC<Props> = ({ context, onChange }) => {\n  const [globalThresholds, setGlobalThresholds] = useState(context.options.globalThresholdsConfig);\n  const setThresholds = (val: PolystatThreshold[]) => {\n    setGlobalThresholds(val);\n    onChange(val as any);\n  };\n\n  return (\n    <>\n      <Field>\n        <ThresholdsEditor thresholds={globalThresholds} setter={setThresholds} />\n      </Field>\n    </>\n  );\n};\n","import { PanelModel, convertOldAngularValueMappings, ValueMapping } from '@grafana/data';\nimport { config } from \"@grafana/runtime\";\nimport { satisfies, coerce } from \"semver\";\nimport { CompositeItemType, CompositeMetric } from 'components/composites/types';\nimport { OverrideItemType } from './components/overrides/types';\nimport { PolystatThreshold } from './components/thresholds/types';\n\nimport { DisplayModes, FontFamilies, PolygonShapes, PolystatOptions, ShowTimestampFormats, ShowTimestampPositions } from './components/types';\ninterface AngularPolystatOptions {\n  animationSpeed: number;\n  columnAutoSize: boolean;\n  columns: string;\n  defaultClickThrough: string;\n  defaultClickThroughNewTab: boolean;\n  defaultClickThroughSanitize: boolean;\n  displayLimit: number;\n  ellipseCharacters: number;\n  ellipseEnabled: boolean;\n  fontAutoColor: boolean;\n  fontAutoScale: boolean;\n  fontSize: number;\n  fontType: string,\n  globalDecimals: number;\n  globalDisplayMode: string;\n  globalDisplayTextTriggeredEmpty: string;\n  globalOperatorName: string;\n  globalThresholds: AngularThreshold[];\n  globalUnitFormat: string;\n  gradientEnabled: boolean;\n  hexagonSortByDirection: number;\n  hexagonSortByField: string;\n  maxMetrics: number;\n  polygonBorderColor: string;\n  polygonBorderSize: number;\n  polygonGlobalFillColor: string;\n  radius: string;\n  radiusAutoSize: boolean;\n  regexPattern: string;\n  rowAutoSize: boolean;\n  rows: string;\n  shape: string;\n  tooltipDisplayMode: string;\n  tooltipDisplayTextTriggeredEmpty: string;\n  tooltipEnabled: boolean;\n  tooltipFontSize: number;\n  tooltipFontType: string,\n  tooltipPrimarySortDirection: number;\n  tooltipPrimarySortField: string;\n  tooltipSecondarySortDirection: number;\n  tooltipSecondarySortField: string;\n  tooltipTimestampEnabled: boolean;\n  valueEnabled: boolean;\n}\n\nexport interface AngularThreshold {\n  color: string;\n  state: number;\n  value: number;\n}\n\nexport interface AngularOverride {\n  clickThrough: string;\n  colors: string[];\n  decimals: number;\n  enabled: true;\n  label: string;\n  metricName: string;\n  newTabEnabled: boolean;\n  operatorName: string;\n  prefix: string;\n  sanitizeURLEnabled: boolean;\n  suffix: string;\n  unitFormat: string;\n  thresholds: AngularThreshold[];\n}\nexport interface AngularSavedOverrides {\n  savedOverrides: AngularOverride[];\n}\n\nexport interface CompositeMembers {\n  seriesName: string;\n}\nexport interface CompositeItem {\n  animateMode: string;\n  clickThrough: string;\n  compositeName: string;\n  displayName: string;\n  enabled: boolean;\n  hideMembers: boolean;\n  label: string;\n  members: CompositeMembers[];\n  newTabEnabled: boolean;\n  sanitizeURLEnabled: boolean;\n  sanitizedURL: string;\n  showName: boolean;\n  showValue: boolean;\n  thresholdLevel: number;\n}\n\nexport interface AngularSavedComposites {\n  savedComposites: CompositeItem[];\n}\n\n/**\n * This is called when the panel is imported or reloaded\n */\nexport const PolystatPanelMigrationHandler = (panel: PanelModel<PolystatOptions>): Partial<PolystatOptions> => {\n  //@ts-ignore\n  if (!panel.polystat) {\n    // not angular, just return the options if currently set\n    if (!panel.options) {\n      // This happens on the first load or when migrating from angular\n      return {} as any;\n    }\n    // have settings, return them unchanged\n    return panel.options;\n  }\n  //@ts-ignore\n  const newDefaults = migrateDefaults(panel.polystat);\n  let options = newDefaults;\n  //@ts-ignore\n  delete panel.polystat;\n  //@ts-ignore\n  const migratedOverrides = migrateOverrides(panel);\n  //@ts-ignore\n  const migratedComposites = migrateComposites(panel, newDefaults.compositeConfig.animationSpeed);\n  //console.log(JSON.stringify(newDefaults, null, 2));\n  options.compositeConfig = migratedComposites.compositeConfig;\n  options.overrideConfig = migratedOverrides.overrideConfig;\n  // convert range and value maps\n  const newMaps = migrateValueAndRangeMaps(panel);\n  panel.fieldConfig = {\n    defaults: {\n      mappings: newMaps,\n    },\n    overrides: [],\n  };\n  //@ts-ignore\n  delete panel.mappingType;\n  //@ts-ignore\n  delete panel.rangeMaps;\n  //@ts-ignore\n  delete panel.valueMaps;\n  // merge defaults\n  //@ts-ignore\n  delete panel.savedComposites;\n  //@ts-ignore\n  delete panel.savedOverrides;\n  //@ts-ignore\n  delete panel.colors;\n\n  // clean up undefined\n  // @ts-ignore\n  Object.keys(panel).forEach((key) => (panel[key] === undefined ? delete panel[key] : {}));\n  // @ts-ignore\n  Object.keys(options).forEach((key) => (options[key] === undefined ? delete options[key] : {}));\n\n  return options;\n};\n\n// split into three parts\n// config normally found in \"polystat\" section\n// then \"savedOverrides\" and \"savedComposites\"\n// a \"good\" react config just has an \"options\" section\nexport const migrateDefaults = (angular: AngularPolystatOptions) => {\n  let options: PolystatOptions = {\n    autoSizeColumns: true,\n    autoSizeRows: true,\n    autoSizePolygons: true,\n    ellipseCharacters: 18,\n    ellipseEnabled: false,\n    globalAutoScaleFonts: true,\n    globalClickthrough: '',\n    globalClickthroughNewTabEnabled: false,\n    globalClickthroughSanitizedEnabled: false,\n    globalClickthroughCustomTargetEnabled: false,\n    globalClickthroughCustomTarget: '',\n    globalDecimals: 2,\n    globalDisplayMode: 'all',\n    globalDisplayTextTriggeredEmpty: '',\n    globalFillColor: '',\n    globalFontSize: 8,\n    globalGradientsEnabled: false,\n    globalOperator: 'mean',\n    globalPolygonBorderSize: 1,\n    globalPolygonBorderColor: '',\n    globalPolygonSize: 50,\n    globalRegexPattern: '',\n    globalShape: PolygonShapes.HEXAGON_POINTED_TOP,\n    globalShowValueEnabled: true,\n    globalShowTooltipColumnHeadersEnabled: true,\n    globalShowTimestampEnabled: false,\n    globalShowTimestampFormat: ShowTimestampFormats[0].value,\n    globalShowTimestampPosition: ShowTimestampPositions[0].value,\n    globalShowTimestampFontSize: 12,\n    globalShowTimestampYOffset: 0,\n    globalTextFontColor: '#000000',\n    globalTextFontAutoColor: '#000000',\n    globalTextFontAutoColorEnabled: false,\n    globalTextFontFamily: FontFamilies.INTER,\n    globalThresholdsConfig: [],\n    globalTooltipsEnabled: true,\n    globalTooltipsShowTimestampEnabled: true,\n    globalTooltipsShowValueEnabled: true,\n    globalTooltipsFontFamily: FontFamilies.INTER,\n    globalUnitFormat: '',\n    layoutDisplayLimit: 100,\n    layoutNumColumns: 8,\n    layoutNumRows: 8,\n    panelHeight: undefined,\n    panelWidth: undefined,\n    panelId: 0,\n    radius: 100,\n    renderTime: undefined,\n    sortByField: '',\n    sortByDirection: 0,\n    overrideConfig: {\n      overrides: [],\n    },\n    compositeGlobalAliasingEnabled: false,\n    compositeConfig: {\n      animationSpeed: '',\n      composites: [],\n      enabled: false,\n    },\n    tooltipPrimarySortDirection: 0,\n    tooltipPrimarySortByField: '',\n    tooltipSecondarySortDirection: 0,\n    tooltipSecondarySortByField: '',\n    tooltipDisplayMode: 'all',\n    tooltipDisplayTextTriggeredEmpty: '',\n  };\n\n  if (angular.animationSpeed) {\n    if (options.compositeConfig) {\n      options.compositeConfig.animationSpeed = angular.animationSpeed.toString();\n    }\n  }\n  if (angular.columnAutoSize) {\n    options.autoSizeColumns = angular.columnAutoSize;\n  }\n  if (angular.columns) {\n    let numColumns = parseInt(angular.columns, 10);\n    if (isNaN(numColumns) || numColumns < 1) {\n      numColumns = 8;\n    }\n    options.layoutNumColumns = numColumns;\n  }\n  if (angular.defaultClickThrough) {\n    options.globalClickthrough = angular.defaultClickThrough;\n  }\n  if (angular.defaultClickThroughNewTab) {\n    options.globalClickthroughNewTabEnabled = angular.defaultClickThroughNewTab;\n  }\n  if (angular.defaultClickThroughSanitize) {\n    options.globalClickthroughSanitizedEnabled = angular.defaultClickThroughSanitize;\n  }\n  if (angular.displayLimit) {\n    options.layoutDisplayLimit = angular.displayLimit;\n  }\n  if (angular.ellipseCharacters) {\n    options.ellipseCharacters = angular.ellipseCharacters;\n  }\n  if (angular.ellipseEnabled) {\n    options.ellipseEnabled = angular.ellipseEnabled;\n  }\n  if (angular.fontAutoColor) {\n    options.globalTextFontAutoColorEnabled = angular.fontAutoColor;\n  }\n  if (angular.fontAutoScale) {\n    options.globalAutoScaleFonts = angular.fontAutoScale;\n  }\n  if (angular.fontSize) {\n    options.globalFontSize = angular.fontSize;\n  }\n  options.globalTextFontFamily = FontFamilies.INTER;\n  if (hasRobotoFont()) {\n    options.globalTextFontFamily = FontFamilies.ROBOTO;\n  }\n  if (angular.globalDecimals) {\n    options.globalDecimals = angular.globalDecimals;\n  }\n  if (angular.globalDisplayMode) {\n    options.globalDisplayMode = angular.globalDisplayMode;\n  }\n  if (angular.globalDisplayTextTriggeredEmpty) {\n    options.globalDisplayTextTriggeredEmpty = angular.globalDisplayTextTriggeredEmpty;\n  }\n  if (angular.globalOperatorName) {\n    options.globalOperator = convertOperators(angular.globalOperatorName);\n  }\n  if (angular.globalThresholds) {\n    options.globalThresholdsConfig = [];\n    for (const threshold of angular.globalThresholds) {\n      const migratedThreshold: PolystatThreshold = {\n        value: threshold.value,\n        state: threshold.state,\n        color: threshold.color,\n      };\n      options.globalThresholdsConfig.push(migratedThreshold);\n    }\n  }\n\n  if (angular.globalUnitFormat) {\n    options.globalUnitFormat = angular.globalUnitFormat;\n  }\n  if (angular.gradientEnabled) {\n    options.globalGradientsEnabled = angular.gradientEnabled;\n  }\n  if (angular.hexagonSortByDirection) {\n    options.sortByDirection = angular.hexagonSortByDirection;\n  }\n  if (angular.hexagonSortByField) {\n    options.sortByField = angular.hexagonSortByField;\n  }\n  if (angular.polygonBorderColor) {\n    options.globalPolygonBorderColor = angular.polygonBorderColor;\n  }\n  if (angular.polygonBorderSize) {\n    options.globalPolygonBorderSize = angular.polygonBorderSize;\n  }\n  if (angular.polygonGlobalFillColor) {\n    options.globalFillColor = angular.polygonGlobalFillColor;\n  }\n  if (angular.radius) {\n    let radius = parseFloat(angular.radius);\n    if (isNaN(radius) || radius < 0) {\n      radius = 0;\n    }\n    options.radius = radius;\n  }\n  if (angular.radiusAutoSize) {\n    options.autoSizePolygons = angular.radiusAutoSize;\n  }\n  if (angular.regexPattern) {\n    options.globalRegexPattern = angular.regexPattern;\n  }\n  if (angular.rowAutoSize) {\n    options.autoSizeRows = angular.rowAutoSize;\n  }\n  if (angular.rows) {\n    let numRows = parseInt(angular.rows, 10);\n    if (isNaN(numRows) || numRows < 1) {\n      numRows = 8;\n    }\n    options.layoutNumRows = numRows;\n  }\n\n  if (angular.shape) {\n    switch (angular.shape) {\n      case 'circle':\n        options.globalShape = PolygonShapes.CIRCLE;\n        break;\n      case 'square':\n        options.globalShape = PolygonShapes.SQUARE;\n        break;\n      case 'hexagon_pointed_top':\n      default:\n        options.globalShape = PolygonShapes.HEXAGON_POINTED_TOP;\n    }\n  }\n  if (angular.tooltipDisplayMode) {\n    options.tooltipDisplayMode = angular.tooltipDisplayMode;\n  }\n  if (angular.tooltipDisplayTextTriggeredEmpty) {\n    options.tooltipDisplayTextTriggeredEmpty = angular.tooltipDisplayTextTriggeredEmpty;\n  }\n  if (angular.tooltipEnabled) {\n    options.globalTooltipsEnabled = angular.tooltipEnabled;\n  }\n  if (angular.tooltipPrimarySortDirection) {\n    options.tooltipPrimarySortDirection = angular.tooltipPrimarySortDirection;\n  }\n  if (angular.tooltipPrimarySortField) {\n    options.tooltipPrimarySortByField = angular.tooltipPrimarySortField;\n  }\n  if (angular.tooltipSecondarySortDirection) {\n    options.tooltipSecondarySortDirection = angular.tooltipSecondarySortDirection;\n  }\n  if (angular.tooltipSecondarySortField) {\n    options.tooltipSecondarySortByField = angular.tooltipSecondarySortField;\n  }\n  if (angular.tooltipTimestampEnabled) {\n    options.globalTooltipsShowTimestampEnabled = angular.tooltipTimestampEnabled;\n  }\n  options.globalTooltipsFontFamily = FontFamilies.INTER;\n  if (hasRobotoFont()) {\n    options.globalTooltipsFontFamily = FontFamilies.ROBOTO;\n  }\n  if (angular.valueEnabled) {\n    options.globalShowValueEnabled = angular.valueEnabled;\n  }\n\n  return options;\n};\n\nexport const migrateOverrides = (angular: AngularSavedOverrides) => {\n  let options = {} as any;\n\n  options.overrideConfig = {\n    overrides: [],\n  };\n  // Overrides\n  if (angular.savedOverrides?.length) {\n    let order = 0;\n    for (const seriesOverride of angular.savedOverrides) {\n      let anOverride: OverrideItemType = {\n        label: '',\n        metricName: '',\n        alias: '',\n        thresholds: [],\n        colors: [],\n        unitFormat: '',\n        decimals: '',\n        scaledDecimals: 0,\n        enabled: true,\n        operatorName: 'avg',\n        prefix: '',\n        suffix: '',\n        clickThrough: '',\n        clickThroughSanitize: true,\n        clickThroughOpenNewTab: true,\n        clickThroughCustomTargetEnabled: false,\n        clickThroughCustomTarget: '',\n        order: order,\n        showTimestampEnabled: false,\n        showTimestampFormat: ShowTimestampFormats[0].value,\n        showTimestampYOffset: 0,\n      };\n      for (const p of Object.keys(seriesOverride)) {\n        // @ts-ignore\n        const v = seriesOverride[p];\n        switch (p) {\n          // Ignore\n          case '$$hashKey':\n            break;\n          case 'clickThrough':\n            anOverride.clickThrough = v;\n            break;\n          case 'colors':\n            anOverride.colors = v;\n            break;\n          case 'decimals':\n            anOverride.decimals = v;\n            break;\n          case 'enabled':\n            anOverride.enabled = v;\n            break;\n          case 'label':\n            anOverride.label = v;\n            break;\n          case 'metricName':\n            anOverride.metricName = v;\n            break;\n          case 'newTabEnabled':\n            anOverride.clickThroughOpenNewTab = v;\n            break;\n          case 'operatorName':\n            anOverride.operatorName = convertOperators(v);\n            break;\n          case 'prefix':\n            anOverride.prefix = v;\n            break;\n          case 'sanitizeURLEnabled':\n            anOverride.clickThroughSanitize = v;\n            break;\n          case 'suffix':\n            anOverride.suffix = v;\n            break;\n          case 'thresholds':\n            /*\n              \"color\": \"#e5ac0e\",\n              \"state\": 1,\n              \"value\": 78\n              */\n            anOverride.thresholds = [];\n            for (const threshold of v) {\n              const migratedThreshold: PolystatThreshold = {\n                value: threshold.value,\n                state: threshold.state,\n                color: threshold.color,\n              };\n              anOverride.thresholds.push(migratedThreshold);\n            }\n            break;\n          case 'unitFormat':\n            anOverride.unitFormat = v;\n            break;\n          default:\n            console.log('Ignore override migration:', p, v);\n        }\n      }\n      options.overrideConfig.overrides.push(anOverride);\n      order++;\n    }\n  }\n  return options;\n};\n\nexport const convertOperators = (operator: string) => {\n  switch (operator) {\n    case 'avg':\n      return 'mean';\n    case 'current':\n      return 'last'; // lastNotNull?\n    case 'time_step':\n      return 'step';\n    case 'total':\n      return 'sum';\n    default:\n      return operator;\n  }\n};\n\nexport const migrateValueAndRangeMaps = (panel: any) => {\n  // value maps first\n  panel.mappingType = 1;\n  let newValueMappings: ValueMapping[] = [];\n  if (panel.valueMaps !== undefined) {\n    newValueMappings = convertOldAngularValueMappings(panel);\n  }\n  // range maps second\n  panel.mappingType = 2;\n  let newRangeMappings: ValueMapping[] = [];\n  if (panel.rangeMaps !== undefined) {\n    newRangeMappings = convertOldAngularValueMappings(panel);\n  }\n  // append together\n  const newMappings = newValueMappings.concat(newRangeMappings);\n  // get uniques only\n  return [...new Map(newMappings.map((v) => [JSON.stringify(v), v])).values()];\n};\n\nexport const migrateComposites = (angular: AngularSavedComposites, animationSpeed: string) => {\n  let options = {} as any;\n  // Composites\n  options.compositeConfig = {\n    composites: [],\n    enabled: true,\n    animationSpeed: animationSpeed,\n  };\n\n  if (angular.savedComposites?.length) {\n    let index = 0;\n    for (const composite of angular.savedComposites) {\n      let aComposite: CompositeItemType = {\n        name: `COMPOSITE-${index}`,\n        label: `COMPOSITE-${index}`,\n        order: index,\n        isTemplated: false,\n        displayMode: DisplayModes[0].value,\n        enabled: true,\n        showName: true,\n        showValue: true,\n        showComposite: true,\n        showMembers: false,\n        showTimestampEnabled: false,\n        showTimestampFormat: ShowTimestampFormats[0].value,\n        showTimestampYOffset: 0,\n        metrics: [],\n        clickThrough: '',\n        clickThroughSanitize: true,\n        clickThroughOpenNewTab: true,\n        clickThroughCustomTargetEnabled: false,\n        clickThroughCustomTarget: ''\n      };\n      index++;\n      for (const p of Object.keys(composite)) {\n        // @ts-ignore\n        const v = composite[p];\n        switch (p) {\n          // Ignore\n          case '$$hashKey':\n            break;\n          case 'animateMode':\n            if (v !== 'all') {\n              aComposite.displayMode = DisplayModes[1].value;\n            }\n            break;\n          case 'clickThrough':\n            aComposite.clickThrough = v;\n            break;\n          case 'compositeName':\n            aComposite.name = v;\n            break;\n          // Ignore\n          case 'displayName':\n            break;\n          case 'enabled':\n            // this is now .showComposite\n            aComposite.showComposite = v;\n            break;\n          case 'hideMembers':\n            aComposite.showMembers = !v;\n            break;\n          case 'label':\n            aComposite.label = v;\n            break;\n          case 'members':\n            /*\n              {\n                \"$$hashKey\": \"object:150\",\n                \"seriesName\": \"/P2/\"\n              }\n              */\n            let memberIndex = 0;\n            let members: CompositeMetric[] = [];\n            // not sure about this...\n            for (const aMember of Object.keys(v)) {\n              const x = v[aMember];\n              let member: CompositeMetric = {\n                seriesMatch: x.seriesName,\n                order: memberIndex,\n              };\n              members.push(member);\n              memberIndex++;\n            }\n            aComposite.metrics = members;\n            break;\n          case 'newTabEnabled':\n            aComposite.clickThroughOpenNewTab = v;\n            break;\n          case 'sanitizeURLEnabled':\n            aComposite.clickThroughSanitize = v;\n            break;\n          // Ignore\n          case 'sanitizedURL':\n            break;\n          case 'showName':\n            aComposite.showName = v;\n            break;\n          case 'showValue':\n            aComposite.showValue = v;\n            break;\n          default:\n            console.log('Ignore composite migration:', p, v);\n        }\n      }\n      options.compositeConfig.composites.push(aComposite);\n    }\n  }\n  return options;\n};\n\n/**\n * This is called when the panel changes from another panel\n *\n * not currently used\n */\nexport const PolystatPanelChangedHandler = (\n  panel: PanelModel<Partial<PolystatOptions>> | any,\n  prevPluginId: string,\n  prevOptions: any\n) => {\n  // Changing from angular polystat panel\n  if (prevPluginId === 'polystat' && prevOptions.angular) {\n    console.log('detected old panel');\n    const oldOpts = prevOptions.angular;\n    console.log(JSON.stringify(oldOpts));\n  }\n\n  return {};\n};\n\n// Roboto font was removed Dec 1, 2022, and releases after that date should not attempt to use it\nexport const hasRobotoFont = () => {\n  const version = coerce(config.buildInfo.version);\n  if (version !== null) {\n    if (satisfies(version, \"<9.4.0\")) {\n      return true;\n    }\n  }\n  return false;\n};\n","import { FieldConfigProperty, PanelPlugin } from '@grafana/data';\n\nimport {\n  DisplayModes,\n  FontFamilyOptions,\n  FontFamilyOptionsLegacy,\n  OperatorOptions,\n  PolygonNamedShapes,\n  PolystatOptions,\n  ShowTimestampFormats,\n  ShowTimestampPositions,\n  SortByFieldOptions,\n  SortOptions,\n} from './components/types';\nimport { CompositeItemType } from './components/composites/types';\nimport { OverrideEditor } from './components/overrides/OverrideEditor';\nimport { OverrideItemType } from './components/overrides/types';\nimport { PolystatPanel } from './components/PolystatPanel';\nimport {\n  GLOBAL_FILL_COLOR_RGBA,\n  GLOBAL_BORDER_COLOR_RGBA,\n  GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n  GLOBAL_TEXT_FONT_FAMILY,\n  GLOBAL_TOOLTIP_FONT_FAMILY,\n  GLOBAL_TEXT_FONT_FAMILY_LEGACY,\n  GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY,\n} from './components/defaults';\nimport { CompositeEditor } from './components/composites/CompositeEditor';\nimport { PolystatThreshold } from './components/thresholds/types';\nimport { GlobalThresholdEditor } from './components/thresholds/GlobalThresholdEditor';\nimport { PolystatDataSuggestionsSupplier } from './components/suggestions';\nimport { hasRobotoFont, PolystatPanelMigrationHandler } from './migrations';\n\n\nexport const plugin = new PanelPlugin<PolystatOptions>(PolystatPanel)\n  .setMigrationHandler(PolystatPanelMigrationHandler)\n  .useFieldConfig({\n    disableStandardOptions: [\n      FieldConfigProperty.Thresholds,\n      FieldConfigProperty.Color,\n      FieldConfigProperty.Decimals,\n      FieldConfigProperty.DisplayName,\n      FieldConfigProperty.Max,\n      FieldConfigProperty.Min,\n      FieldConfigProperty.Links,\n      FieldConfigProperty.NoValue,\n      FieldConfigProperty.Unit,\n    ],\n    standardOptions: {\n      [FieldConfigProperty.Mappings]: {},\n    },\n  })\n  .setPanelOptions((builder) => {\n    builder\n      .addBooleanSwitch({\n        name: 'Auto Size Columns',\n        path: 'autoSizeColumns',\n        defaultValue: true,\n        category: ['Layout'],\n        description: 'Automatically set columns based on panel size',\n      })\n      .addNumberInput({\n        path: 'layoutNumColumns',\n        name: 'Columns',\n        description: 'Use specific number of columns',\n        defaultValue: 8,\n        settings: {\n          placeHolder: '8',\n          min: 1,\n          integer: true,\n        },\n        category: ['Layout'],\n        showIf: (c) => !c.autoSizeColumns,\n      })\n      .addBooleanSwitch({\n        name: 'Auto Size Rows',\n        path: 'autoSizeRows',\n        defaultValue: true,\n        category: ['Layout'],\n        description: 'Automatically set rows based on panel size',\n      })\n      .addNumberInput({\n        path: 'layoutNumRows',\n        name: 'Rows',\n        description: 'Use specific number of rows',\n        defaultValue: 8,\n        settings: {\n          placeHolder: '8',\n          min: 1,\n          integer: true,\n        },\n        category: ['Layout'],\n        showIf: (c) => !c.autoSizeRows,\n      })\n      .addNumberInput({\n        path: 'layoutDisplayLimit',\n        name: 'Display Limit',\n        description: 'Maximum number of polygons to display (0 for unlimited)',\n        defaultValue: 100,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Layout'],\n      })\n\n      .addBooleanSwitch({\n        name: 'Auto Size Polygons',\n        path: 'autoSizePolygons',\n        defaultValue: true,\n        category: ['Sizing'],\n        description: 'Automatically sets size of polygon for best fit',\n      })\n      .addNumberInput({\n        name: 'Polygon Size in pixels',\n        path: 'globalPolygonSize',\n        description: 'Use specific size for polygons',\n        defaultValue: 25,\n        settings: {\n          placeHolder: 'Auto',\n          min: 1,\n        },\n        category: ['Sizing'],\n        showIf: (c) => !c.autoSizePolygons,\n      })\n      .addNumberInput({\n        name: 'Border Size',\n        path: 'globalPolygonBorderSize',\n        description: 'Border size for each polygon',\n        defaultValue: 2,\n        settings: {\n          min: 0,\n        },\n        category: ['Sizing'],\n      })\n      // font selection\n      .addSelect({\n        path: 'globalTextFontFamily',\n        name: 'Font Family',\n        description: 'Font used for rendered text',\n        category: ['Text'],\n        defaultValue: GLOBAL_TEXT_FONT_FAMILY,\n        settings: {\n          options: FontFamilyOptions,\n        },\n        showIf: () => !hasRobotoFont(),\n      })\n      .addSelect({\n        path: 'globalTextFontFamily',\n        name: 'Font Family',\n        description: 'Font used for rendered text',\n        category: ['Text'],\n        defaultValue: GLOBAL_TEXT_FONT_FAMILY_LEGACY,\n        settings: {\n          options: FontFamilyOptionsLegacy,\n        },\n        showIf: () => hasRobotoFont(),\n      })\n      .addBooleanSwitch({\n        name: 'Auto Scale Fonts',\n        path: 'globalAutoScaleFonts',\n        defaultValue: true,\n        category: ['Text'],\n        description: 'Automatically sets label and value font size based on size of polygon',\n      })\n      .addNumberInput({\n        name: 'Font Size',\n        path: 'globalFontSize',\n        defaultValue: 12,\n        settings: {\n          min: 0,\n        },\n        category: ['Text'],\n        description: 'Default font size to use when Auto is disabled',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      // font color\n      // auto set font color\n      .addBooleanSwitch({\n        name: 'Automate Font Color',\n        path: 'globalTextFontAutoColorEnabled',\n        defaultValue: true,\n        category: ['Text'],\n        description: 'Sets font color to match theme',\n      })\n      .addColorPicker({\n        name: 'Font Color',\n        path: 'globalTextFontColor',\n        category: ['Text'],\n        defaultValue: '#000000',\n        description: 'Font color to use for all text on polygon',\n        showIf: (c) => !c.globalTextFontAutoColorEnabled,\n      })\n\n      // ellipse enabled\n      .addBooleanSwitch({\n        name: 'Use Ellipses',\n        path: 'ellipseEnabled',\n        defaultValue: false,\n        category: ['Text'],\n        description: 'Use Ellipses when character count is exceeded',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      // ellipse num chars\n      .addNumberInput({\n        name: 'Ellipse Characters',\n        path: 'ellipseCharacters',\n        defaultValue: 18,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Text'],\n        description: 'Default number of characters to display before showing ellipses',\n        showIf: (c) => c.ellipseEnabled && !c.globalAutoScaleFonts,\n      })\n\n      // Sorting\n      .addSelect({\n        path: 'sortByDirection',\n        name: 'Sort By Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Sorting'],\n        defaultValue: 1,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'sortByField',\n        name: 'Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'name',\n        category: ['Sorting'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // tooltips\n      .addBooleanSwitch({\n        name: 'Enable Tooltips',\n        path: 'globalTooltipsEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Provides tooltips for each polygon',\n      })\n      .addSelect({\n        path: 'globalTooltipsFontFamily',\n        name: 'Font Family',\n        description: 'Font used for tooltip text',\n        category: ['Tooltips'],\n        defaultValue: GLOBAL_TOOLTIP_FONT_FAMILY,\n        settings: {\n          options: FontFamilyOptions,\n        },\n        showIf: () => !hasRobotoFont(),\n      })\n      .addSelect({\n        path: 'globalTooltipsFontFamily',\n        name: 'Font Family',\n        description: 'Font used for tooltip text',\n        category: ['Tooltips'],\n        defaultValue: GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY,\n        settings: {\n          options: FontFamilyOptionsLegacy,\n        },\n        showIf: () => hasRobotoFont(),\n      })\n      .addBooleanSwitch({\n        name: 'Show Timestamp',\n        path: 'globalTooltipsShowTimestampEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show timestamp at bottom of tooltip',\n      })\n      .addBooleanSwitch({\n        name: 'Show Value',\n        path: 'globalTooltipsShowValueEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show values in tooltip',\n      })\n      // show tooltip column headers\n      .addBooleanSwitch({\n        name: 'Show Column Headers',\n        path: 'globalShowTooltipColumnHeadersEnabled',\n        defaultValue: true,\n        category: ['Tooltips'],\n        description: 'Show Column headers on tooltip'\n      })\n      // display modes\n      .addSelect({\n        path: 'tooltipDisplayMode',\n        name: 'Display Mode',\n        description: 'Show either all metrics/composites or only triggered',\n        defaultValue: 'all',\n        category: ['Tooltips'],\n        settings: {\n          options: DisplayModes,\n        },\n      })\n      .addTextInput({\n        path: 'tooltipDisplayTextTriggeredEmpty',\n        name: 'Non Triggered State Text',\n        description:\n          'Text to be displayed by tooltip when there are no triggered thresholds and tooltip display mode is set to triggered',\n        defaultValue: GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n        category: ['Tooltips'],\n      })\n      // primary sort direction\n      .addSelect({\n        path: 'tooltipPrimarySortDirection',\n        name: 'Primary Sort Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Tooltips'],\n        defaultValue: SortOptions[1].value,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'tooltipPrimarySortByField',\n        name: 'Primary Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'thresholdLevel',\n        category: ['Tooltips'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // secondary sort direction\n      .addSelect({\n        path: 'tooltipSecondarySortDirection',\n        name: 'Secondary Sort Direction',\n        description: 'Direction of sorting by the specified field',\n        category: ['Tooltips'],\n        defaultValue: SortOptions[1].value,\n        settings: {\n          options: SortOptions,\n        },\n      })\n      .addSelect({\n        path: 'tooltipSecondarySortByField',\n        name: 'Secondary Sort By Field',\n        description: 'Which field should be used for sorting',\n        defaultValue: 'value',\n        category: ['Tooltips'],\n        settings: {\n          options: SortByFieldOptions,\n        },\n      })\n\n      // globals generic\n      //\n      // display mode\n      .addSelect({\n        path: 'globalDisplayMode',\n        name: 'Display Mode',\n        description: 'Show either all metrics/composites or only triggered',\n        defaultValue: 'all',\n        category: ['Global'],\n        settings: {\n          options: DisplayModes,\n        },\n      })\n      .addTextInput({\n        path: 'globalDisplayTextTriggeredEmpty',\n        name: 'Non Triggered State Text',\n        description:\n          'Text to be displayed in polygon when there are no triggered thresholds and global display mode is set to triggered',\n        defaultValue: GLOBAL_DISPLAY_TEXT_TRIGGERED_EMPTY,\n        category: ['Global'],\n      })\n\n      // show value\n      .addBooleanSwitch({\n        name: 'Show Value',\n        path: 'globalShowValueEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Show value on the polygon',\n      })\n\n      // displays timestamp on polygons\n      .addBooleanSwitch({\n        name: 'Show Timestamp',\n        path: 'globalShowTimestampEnabled',\n        defaultValue: false,\n        category: ['Global'],\n        description: 'Show timestamp of metric on the polygon',\n      })\n      .addSelect({\n        name: 'Timestamp Format',\n        path: 'globalShowTimestampFormat',\n        description: 'Format of timestamp to display',\n        category: ['Global'],\n        defaultValue: ShowTimestampFormats[2].value,\n        settings: {\n          options: ShowTimestampFormats,\n          allowCustomValue: true,\n        },\n        showIf: (c) => c.globalShowTimestampEnabled,\n      })\n      .addNumberInput({\n        name: 'Font Size',\n        path: 'globalShowTimestampFontSize',\n        defaultValue: 12,\n        settings: {\n          min: 0,\n        },\n        category: ['Global'],\n        description: 'Default font size to use when Global Auto Scale Fonts is disabled',\n        showIf: (c) => !c.globalAutoScaleFonts,\n      })\n      .addSelect({\n        name: 'Timestamp Position',\n        path: 'globalShowTimestampPosition',\n        description: 'Position of Timestamp',\n        category: ['Global'],\n        defaultValue: ShowTimestampPositions[1].value,\n        settings: {\n          options: ShowTimestampPositions,\n          allowCustomValue: false,\n        },\n        showIf: (c) => c.globalShowTimestampEnabled,\n      })\n      .addNumberInput({\n        name: 'Timestamp Y-Offset',\n        path: 'globalShowTimestampYOffset',\n        description: 'Adjust the displayed timestamp up or down the Y-Axis, use negative value to move up, positive for down',\n        defaultValue: 0,\n        settings: {\n          integer: true,\n        },\n        category: ['Global'],\n        showIf: (c) => c.globalShowTimestampEnabled,\n      })\n\n      // shape\n      .addSelect({\n        name: 'Shape',\n        path: 'globalShape',\n        description: 'Shape of polygon',\n        category: ['Global'],\n        defaultValue: PolygonNamedShapes[0].value,\n        settings: {\n          options: PolygonNamedShapes,\n        },\n      })\n\n      // gradient colors enabled\n      .addBooleanSwitch({\n        name: 'Use Color Gradients',\n        path: 'globalGradientsEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Applies gradient color effect to all polygons',\n      })\n      .addColorPicker({\n        name: 'Global Fill Color',\n        path: 'globalFillColor',\n        category: ['Global'],\n        defaultValue: GLOBAL_FILL_COLOR_RGBA,\n        description: 'Color to use when no overrides or thresholds apply to polygon',\n      })\n\n      // border color\n      .addColorPicker({\n        name: 'Global Border Color',\n        path: 'globalPolygonBorderColor',\n        category: ['Global'],\n        defaultValue: GLOBAL_BORDER_COLOR_RGBA,\n        description: 'Color of polygon border',\n      })\n      // unit\n      .addUnitPicker({\n        name: 'Unit',\n        path: 'globalUnitFormat',\n        defaultValue: 'short',\n        category: ['Global'],\n        description: 'Use this unit format when it is not specified in overrides or detected in data',\n      })\n      // stat (global operator)\n      .addSelect({\n        name: 'Stat',\n        path: 'globalOperator',\n        description: 'Statistic to display',\n        category: ['Global'],\n        defaultValue: OperatorOptions[0].value,\n        settings: {\n          options: OperatorOptions,\n        },\n      })\n      // decimals\n      .addNumberInput({\n        name: 'Decimals',\n        path: 'globalDecimals',\n        description: 'Display specified number of decimals',\n        defaultValue: 2,\n        settings: {\n          min: 0,\n          integer: true,\n        },\n        category: ['Global'],\n      })\n      .addCustomEditor({\n        name: 'Global Thresholds',\n        id: 'globalThresholdsConfig',\n        path: 'globalThresholdsConfig',\n        description: 'Default thresholds to be applied to all metrics that do not have an override',\n        editor: GlobalThresholdEditor,\n        defaultValue: [] as PolystatThreshold[],\n        category: ['Global'],\n      })\n      // default clickthrough\n      .addTextInput({\n        name: 'Default Clickthrough',\n        path: 'globalClickthrough',\n        description: 'URL to use when none are defined by overrides or composites',\n        category: ['Global'],\n        defaultValue: '',\n      })\n      // sanitize clickthrough\n      .addBooleanSwitch({\n        name: 'Sanitize URL',\n        path: 'globalClickthroughSanitizedEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Sanitizes clickthrough url',\n      })\n      // open in new tab\n      .addBooleanSwitch({\n        name: 'Open URL In New Tab',\n        path: 'globalClickthroughNewTabEnabled',\n        defaultValue: true,\n        category: ['Global'],\n        description: 'Opens clickthrough in a new tab',\n      })\n      .addBooleanSwitch({\n        name: 'Enable Custom URL Target',\n        path: 'globalClickthroughCustomTargetEnabled',\n        defaultValue: false,\n        category: ['Global'],\n        description: 'Use custom target for global clickthrough (this overrides the new tab setting above). Typical values are: _blank|_self|_parent|_top|framename',\n        showIf: (c) => !c.globalClickthroughNewTabEnabled,\n      })\n      .addTextInput({\n        name: 'Custom URL Target',\n        path: 'globalClickthroughCustomTarget',\n        description:\n          'Provide a different target to be set in the target attribute of the clickthrough. Typical values are: _blank|_self|_parent|_top|framename',\n        category: ['Global'],\n        defaultValue: '',\n        showIf: (c) => c.globalClickthroughCustomTargetEnabled,\n      })\n\n      // aliasing\n      .addTextInput({\n        name: 'Global Regex',\n        path: 'globalRegexPattern',\n        description:\n          'The values in the specified column are filtered and displayed according to this regular expression. Ex: String: Url|broadcom.com|mirror|location-1 regex: /Url&#92;|(.*?)&#92;|/ Output: broadcom.com',\n        category: ['Global Aliasing'],\n        defaultValue: '',\n      })\n      .addCustomEditor({\n        name: 'Overrides',\n        id: 'overrideConfig',\n        path: 'overrideConfig',\n        description: 'Overrides for multiple metrics',\n        editor: OverrideEditor,\n        defaultValue: {\n          overrides: [] as OverrideItemType[],\n        },\n        category: ['Overrides'],\n      })\n      // allow enabling / disabling global aliasing for composite hexagon names\n      .addBooleanSwitch({\n        name: 'Composite Global Aliasing',\n        path: 'compositeGlobalAliasingEnabled',\n        defaultValue: false,\n        description: 'Enable / Disable composite global aliasing',\n        category: ['Composites'],\n      })\n      .addCustomEditor({\n        name: 'Composites',\n        id: 'compositeConfig',\n        path: 'compositeConfig',\n        description: 'Composites allow you to roll up multiple metrics into a single polygon',\n        editor: CompositeEditor,\n        defaultValue: {\n          composites: [] as CompositeItemType[],\n          enabled: true,\n          animationSpeed: '1500',\n        },\n        category: ['Composites'],\n      });\n  })\n  .setSuggestionsSupplier(new PolystatDataSuggestionsSupplier());\n","import { VisualizationSuggestionsBuilder } from '@grafana/data';\nimport { PolystatOptions } from './types';\n\nexport class PolystatDataSuggestionsSupplier {\n  getSuggestionsForData(builder: VisualizationSuggestionsBuilder) {\n    const { dataSummary: ds } = builder;\n\n    if (!ds.hasData) {\n      return;\n    }\n    if (!ds.hasNumberField) {\n      return;\n    }\n\n    const list = builder.getListAppender<PolystatOptions, {}>({\n      name: 'Polystat',\n      pluginId: 'grafana-polystat-panel',\n      options: {},\n    });\n\n    list.append({\n      name: 'Polystat',\n    });\n  }\n}\n"],"names":["ANY","Symbol","Comparator","constructor","comp","options","parseOptions","loose","value","trim","split","join","debug","this","parse","semver","operator","version","r","re","t","COMPARATORLOOSE","COMPARATOR","m","match","TypeError","undefined","SemVer","toString","test","er","cmp","intersects","Range","includePrerelease","startsWith","includes","module","exports","safeRe","SPACE_CHARACTERS","range","raw","set","formatted","replace","map","parseRange","filter","c","length","first","isNullSet","isAny","i","comps","k","format","memoKey","FLAG_INCLUDE_PRERELEASE","FLAG_LOOSE","cached","cache","get","hr","HYPHENRANGELOOSE","HYPHENRANGE","hyphenReplace","COMPARATORTRIM","comparatorTrimReplace","TILDETRIM","tildeTrimReplace","CARETTRIM","caretTrimReplace","rangeList","parseComparator","replaceGTE0","rangeMap","Map","comparators","size","has","delete","result","values","some","thisComparators","isSatisfiable","rangeComparators","every","thisComparator","rangeComparator","testSet","remainingComparators","slice","testComparator","pop","otherComparator","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","id","toLowerCase","replaceTilde","TILDELOOSE","TILDE","_","M","p","pr","ret","replaceCaret","CARETLOOSE","CARET","z","replaceXRange","XRANGELOOSE","XRANGE","gtlt","xM","xm","xp","anyX","STAR","GTE0PRE","GTE0","incPr","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","prerelease","allowed","major","minor","patch","MAX_LENGTH","MAX_SAFE_INTEGER","compareIdentifiers","LOOSE","FULL","num","build","compare","other","compareMain","comparePre","a","b","compareBuild","inc","release","identifier","identifierBase","base","Number","Error","push","isNaN","s","eq","neq","gt","gte","lt","lte","op","String","rtl","coerceRtlRegex","COERCERTLFULL","COERCERTL","next","exec","index","lastIndex","COERCEFULL","COERCE","versionA","versionB","version1","version2","v1","v2","comparison","v1Higher","highVersion","lowVersion","highHasPre","prefix","throwErrors","parsed","list","sort","v","internalRe","constants","identifiers","valid","clean","diff","rcompare","compareLoose","rsort","coerce","satisfies","toComparators","maxSatisfying","minSatisfying","minVersion","validRange","outside","gtr","ltr","simplifyRange","subset","src","tokens","SEMVER_SPEC_VERSION","RELEASE_TYPES","rcompareIdentifiers","MAX_SAFE_COMPONENT_LENGTH","MAX_SAFE_BUILD_LENGTH","process","env","NODE_DEBUG","args","console","error","numeric","anum","bnum","max","key","firstKey","keys","looseOption","Object","freeze","emptyOpts","R","LETTERDASHNUMBER","safeRegexReplacements","createToken","name","isGlobal","safe","token","makeSafeRegex","RegExp","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCEPLAIN","LONETILDE","LONECARET","r1","r2","versions","maxSV","rangeObj","forEach","min","minSV","minver","setMin","comparator","compver","hilo","gtfn","ltefn","ltfn","ecomp","high","low","prev","ranges","simplified","original","minimumVersionWithPreRelease","minimumVersion","simpleSubset","sub","dom","eqSet","Set","gtltComp","higher","lower","hasDomLT","hasDomGT","higherGT","lowerLT","add","needDomLTPre","needDomGTPre","sawNonNull","OUTER","simpleSub","simpleDom","isSub","__WEBPACK_EXTERNAL_MODULE__6089__","__WEBPACK_EXTERNAL_MODULE__7781__","__WEBPACK_EXTERNAL_MODULE__8531__","__WEBPACK_EXTERNAL_MODULE__2007__","__WEBPACK_EXTERNAL_MODULE__4201__","__WEBPACK_EXTERNAL_MODULE__3241__","__WEBPACK_EXTERNAL_MODULE__1308__","__WEBPACK_EXTERNAL_MODULE__5959__","hasOwn","hasOwnProperty","classNames","classes","arguments","arg","appendClass","parseValue","Array","isArray","apply","prototype","call","newClass","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","obj","prop","toStringTag","lastIndexOf","PolygonShapes","PolygonNamedShapes","label","OperatorOptions","SortOptions","SortByFieldOptions","DisplayModes","FontFamilies","FontFamilyOptions","FontFamilyOptionsLegacy","ShowTimestampFormats","TimestampPositions","ShowTimestampPositions","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","byteToHex","unsafeStringify","arr","offset","buf","rnds","random","rng","RangeError","ThresholdStates","ThresholdItem","styles","useStyles2","getThresholdStyles","threshold","setThreshold","useState","thresholdId","aKey","getThreshold","state","Input","disabled","type","step","ID","onChange","e","valueSetter","currentTarget","div","className","inputPrefix","colorPicker","ColorPicker","color","colorSetter","enableNamedColors","suffix","Select","menuShouldPortal","stateSetter","IconButton","variant","tooltip","onClick","remover","theme","css","spacing","Color","asHex","g","asRGB","blendWith","col","Math","round","Mul","RGBToHex","rgb","sep","indexOf","substr","RGBAToHex","orig","alpha","hex","parseInt","parseFloat","fromHex","substring","bigint","GLOBAL_FILL_COLOR_RGBA","DEFAULT_OK_COLOR_HEX","DEFAULT_OK_COLOR","DEFAULT_WARNING_COLOR_HEX","DEFAULT_WARNING_COLOR","DEFAULT_CRITICAL_COLOR_HEX","DEFAULT_CRITICAL_COLOR","DEFAULT_NO_THRESHOLD_COLOR_HEX","GLOBAL_TEXT_FONT_FAMILY","INTER","GLOBAL_TOOLTIP_FONT_FAMILY","GLOBAL_TEXT_FONT_FAMILY_LEGACY","ROBOTO","GLOBAL_TOOLTIP_FONT_FAMILY_LEGACY","ThresholdsEditor","tracker","_setTracker","thresholds","items","order","UUIdv4","theme2","useTheme2","setTracker","useTheme","allThresholds","element","setter","updateThresholdValue","orderedThresholds","orderBy","updateThresholdColor","useColor","visualization","getColorByName","updateThresholdState","colorForThresholdState","removeThreshold","removeIndex","splice","Button","fill","icon","aTracker","getMetricHints","frames","metricHints","hintValue","aField","fields","FieldType","number","labels","appendLabels","aLabel","config","displayNameFromDS","OverrideItem","props","setMetricHints","override","_setOverride","setOverride","visibleIcon","hiddenIcon","operatorName","setOperatorName","getOperator","useEffect","context","data","hints","metricName","Card","Meta","FieldSet","Field","description","enabled","placeholder","Cascader","initialValue","allowCustomValue","onSelect","val","hidden","alias","decimals","UnitPicker","unitFormat","span","clickThrough","Switch","transparent","clickThroughSanitize","clickThroughOpenNewTab","clickThroughCustomTargetEnabled","clickThroughCustomTarget","Actions","moveUp","moveDown","createDuplicate","OverrideEditor","item","settings","overrideConfig","overrides","allOverrides","isOpen","setIsOpen","openStates","updateOverride","showTimestampEnabled","showTimestampFormat","showTimestampYOffset","scaledDecimals","colors","arrayMove","oldIndex","newIndex","removeOverride","Collapse","onToggle","currentState","toggleOpener","collapsible","thirdPi","PI","angles","pointX","pointY","floor","createCoords","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","param","placement","axis","getAxisLength","getAlignmentAxis","alignment","getOppositePlacement","side","padding","expandPaddingObject","rect","width","height","computeCoordsFromPlacement","_ref","reference","floating","sideAxis","alignmentAxis","alignLength","isVertical","commonX","commonY","commonAlign","coords","async","detectOverflow","_await$platform$isEle","platform","rects","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","hasWindow","window","getNodeName","node","isNode","nodeName","getWindow","_node$ownerDocument","ownerDocument","defaultView","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflow","overflowX","overflowY","display","isTableElement","isTopLayer","selector","matches","isContainingBlock","elementOrCss","webkit","isWebKit","containerType","backdropFilter","willChange","contain","CSS","supports","isLastTraversableNode","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","frameElement","getFrameElement","concat","visualViewport","parent","getPrototypeOf","getCssDimensions","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getHTMLOffset","scroll","ignoreScrollbarX","htmlRect","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","htmlOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","svgOffsetParent","currentNode","getContainingBlock","topLayer","clippingAncestors","cachedResult","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","getClippingElementAncestors","_c","firstClippingAncestor","clippingRect","reduce","accRect","getElementRects","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","isRTL","rectsAreEqual","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","elementRectForRootMargin","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","setTimeout","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","checkMainAxis","checkCrossAxis","limiter","detectOverflowOptions","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","initialSideAxis","isBasePlacement","oppositePlacement","getExpandedPlacements","hasFallbackAxisSideDirection","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","placements","overflows","overflowsData","flip","sides","mainAlignmentSide","_middlewareData$flip2","_overflowsData$filter","nextIndex","nextPlacement","reset","resetPlacement","_overflowsData$filter2","currentSideAxis","acc","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","mergedOptions","platformWithCache","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","nextX","nextY","computePosition","h","w","core","S","ref","l","REACT_TOOLTIP_DISABLE_CORE_STYLES","REACT_TOOLTIP_DISABLE_BASE_STYLES","insertAt","getElementById","head","getElementsByTagName","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","E","elementReference","tooltipReference","tooltipArrowReference","place","middlewares","border","tooltipStyles","tooltipArrowStyles","then","u","borderBottom","borderRight","A","cancel","O","T","SVGElement","getPropertyValue","L","parentElement","scrollingElement","C","current","N","anchorRefs","activeAnchor","attach","detach","setActiveAnchor","getTooltipData","j","fixed","noArrow","clickable","show","closing","D","dark","light","success","warning","info","q","forwardRef","classNameArrow","anchorId","anchorSelect","events","openOnClick","positionStrategy","wrapper","delayShow","delayHide","float","closeOnEsc","I","closeOnScroll","B","closeOnResize","openEvents","H","closeEvents","globalCloseEvents","W","imperativeModeOnly","P","style","V","F","afterShow","K","afterHide","U","disableTooltip","X","content","Y","contentWrapperRef","G","Z","defaultIsOpen","J","Q","ee","te","oe","opacity","le","arrowColor","role","ne","ie","ce","se","ae","ue","de","pe","ve","me","fe","ye","he","we","be","Se","ge","Ee","Ae","_e","Oe","ke","Te","Le","Ce","click","dblclick","mousedown","Re","mouseover","focus","mouseenter","assign","xe","mouseout","blur","mouseleave","mouseup","Ne","escape","resize","clickOutsideAnchor","$e","Ie","je","Be","ze","isConnected","De","qe","He","clientX","clientY","Me","contains","querySelector","We","Pe","Ve","Fe","Ke","event","listener","MutationObserver","attributeName","getAttribute","oldValue","removedNodes","nodeType","flatMap","querySelectorAll","addedNodes","childList","subtree","attributes","attributeFilter","attributeOldValue","Ue","Xe","open","warn","delay","close","onTransitionEnd","propertyName","background","dangerouslySetInnerHTML","__html","render","f","children","disableStyleInjection","getAttributeNames","dispatchEvent","CustomEvent","detail","disableCore","disableBase","Gradients","pureLight","colorGradients","gradients","aColorStart","aColorEnd","createGradients","okColorStart","okColorEnd","warningColorStart","warningColorEnd","criticalColorStart","criticalColorEnd","gradientId","defs","aGradient","linearGradient","x1","y1","x2","y2","stop","stopColor","LayoutManager","setRadius","radius","setHeight","setWidth","generateHexagonPointedTopLayout","getHexFlatTopRadius","generateUniformLayout","getUniformRadius","hexRadius","d3","numColumns","SQRT3","numRows","truncateFloat","getHexFlatTopDiameters","diameterX","diameterY","getUniformDiameters","horizontalMax","maxColumnsUsed","verticalMax","maxRowsUsed","uniformRadius","generatePossibleColumnAndRowsSizes","columnAutoSize","rowAutoSize","dataSize","squared","sqrt","ceil","generateActualColumnAndRowUsage","displayLimit","polygonsUsed","columnsUsed","shapeToCoordinates","shape","column","row","HEXAGON_POINTED_TOP","CIRCLE","SQUARE","generatePoints","points","Infinity","aPoint","generateUniformPoints","xPos","yPos","generateRadius","autoSize","getOffsets","getOffsetsHexagonPointedTop","getOffsetsSquare","getOffsetsUniform","shapeWidth","shapeHeight","offsetToViewY","oddCount","evenCount","getOddEvenCountForRange","actualHeightUsed","yoffset","offsetToViewX","widthOffset","actualWidthUsed","xoffset","getDiameters","getErrorMessageStyles","typography","h1","fontSize","shade","getNoTriggerTextStyles","getWrapperStyles","getSVGStyles","getSVGPathStyles","Tooltip","renderTime","showTime","valueEnabled","tooltipColumnHeadersEnabled","primarySortByField","primarySortDirection","secondarySortByField","secondarySortDirection","displayMode","tooltipDisplayTextTriggeredEmpty","tooltipFontFamily","getTooltipStyles","timestamp","Date","getCompositeMetrics","dataToSort","triggerCount","triggered","thresholdLevel","members","getTriggeredCount","compositeWithTriggeredItemsOnly","filterTriggered","sortedMembers","sortSettings","getSortDirection","pUseLowercase","lowerCase","pDirection","sDirection","sUseLowercase","pSortFunction","sSortFunction","lodashOrderBy","multiSort","tr","td","tooltipName","displayName","tooltipValue","valueFormatted","table","fontFamily","tooltipTable","thead","isComposite","th","tooltipCompositeHeading","colSpan","getCompositeHeader","tooltipNameHeading","tooltipValueHeading","tfoot","tooltipTime","dateTimeFormatWithAbbrevation","tbody","borderRadius","primary","shadows","z2","text","GetDecimalsForValue","panelDecimals","lodashIsNumber","delta","dec","log","LN10","magn","pow","norm","getTextWidth","font","getContext","measureText","SortVariableValuesByField","sortField","sortOrder","reverseSort","lodashSortBy","getTextOrValue","itemContent","lodashToLower","collator","Intl","Collator","sensitivity","reverse","roundValue","toFixed","getMaxLabel","maxLabel","nameToCheck","getMaxValueAndTimestamp","maxValue","maxTimestamp","timestampFormatted","subMetricCount","counter","checkContent","checkCompositeTimestamp","computeTextFontSize","minFont","maxFont","linesToDisplay","textAreaWidth","textAreaHeight","minFontPx","maxFontPx","getTextSizeForWidthAndHeight","Polystat","divStyles","svgStyles","svgPathStyles","noTriggerTextStyles","errorMessageStyles","tooltipTheme","isDark","animationRefs","setAnimationRefs","React","animationTimestampRefs","setAnimationTimestampRefs","animationMetricIndexes","setAnimationMetricIndexes","animatedItems","setAnimatedItems","margin","uniquePanelId","panelId","animateComposite","useCallback","metricIndex","isValueAnimated","globalShowValueEnabled","processedData","showValue","formatCompositeValueAndTimestamp","globalDisplayTextTriggeredEmpty","innerHTML","globalShowTimestampEnabled","ts","shouldAnimate","animate","tick","JSON","stringify","newAnimationRefs","newAnimationTimestampRefs","newAnimationMetricIndexes","createRef","updateAnimation","speed","compositeConfig","animationSpeed","setInterval","clearInterval","lm","panelWidth","panelHeight","layoutNumColumns","layoutNumRows","layoutDisplayLimit","autoSizePolygons","globalShape","autoSizeColumns","autoSizeRows","globalPolygonSize","calculatedPoints","aHexbin","dx","dy","x0","y0","hexbin","binsById","bins","px","point","py","pj","pi","py1","abs","px1","pi2","pj2","px2","py2","bin","hexagon","angle","sin","cos","centers","mesh","fragment","extent","innerArea","symbol","d3symbol","customShape","symbolCircle","symbolSquare","getCoords","activeLabelFontSize","globalFontSize","activeValueFontSize","activeCompositeValueFontSize","activeTimestampFontSize","globalShowTimestampFontSize","showEllipses","numOfChars","ellipseCharacters","hasShowTimeStampEnabled","hasShowValueEnabled","globalAutoScaleFonts","showTimestamp","haveCompositeValueEnabled","AutoFontScalar","globalTextFontFamily","alignments","valueWithLabelTextAlignment","valueOnlyTextAlignment","labelWithValueTextAlignment","labelOnlyTextAlignment","labelTextAlignmentX","labelValueAlignmentX","valueWithTimestampAlignment","timestampAlignment","GetAlignments","timestampLineSpacing","compositeTimestampLineSpacing","globalShowTimestampPosition","BELOW_VALUE","drawShape","fillColor","globalGradientsEnabled","useRadius","path","data-tooltip-id","globalTooltipsEnabled","data-tooltip-content","data-tooltip-position-strategy","transform","stroke","globalPolygonBorderColor","strokeWidth","globalPolygonBorderSize","circle","cx","cy","marginLeft","marginTop","detectEmptyState","layoutIssueDetected","limit","detectLayoutIssue","svg","xmlns","xmlnsXlink","viewBox","useUrl","sanitizeURLEnabled","sanitizedURL","resolvedClickthroughTarget","clickThroughTarget","newTabEnabled","customClickthroughTargetEnabled","customClickthroughTarget","resolveClickThroughTarget","clickableUrl","href","verticalAlignment","textAnchor","globalTextFontAutoColorEnabled","globalTextFontAutoColor","globalTextFontColor","pointerEvents","showName","getTextToDisplay","ellipseEnabled","getLabelContent","globalShowTimestampYOffset","ABOVE_VALUE","valueContent","useFontSize","getValueContent","getTimestampForValueContent","Portal","ReactTooltip","boxShadow","contentIndex","globalTooltipsShowTimestampEnabled","globalTooltipsShowValueEnabled","globalShowTooltipColumnHeadersEnabled","tooltipPrimarySortByField","tooltipPrimarySortDirection","tooltipSecondarySortByField","tooltipSecondarySortDirection","tooltipDisplayMode","globalTooltipsFontFamily","autoSizeFonts","timestampContent","len","triggeredIndex","triggerCache","aMember","cachedMemberState","buildTriggerCache","textUtil","sanitize","frameHasTimestamp","frame","time","flattenLabels","rowNum","labelIndexes","numFields","string","labelWithValues","indexes","labelAndValue","indexValue","getValueOfField","getLabelValues","field","toArray","getWorstSeries","series1","series2","worstSeries","series1ThresholdLevel","series2ThresholdLevel","getThresholdLevelForValue","defaultColor","currentColor","thresholdCount","aThreshold","upperThreshold","lowerThreshold","ClickThroughTransformer","transformSingleMetric","url","cellName","cellValue","encodeURIComponent","cellRawValue","transformNthMetric","nthCellName","matched","nthName","nthCellValue","nthValue","nthCellRawValue","transformComposite","compositeNameRegex","transformByRegex","pattern","regex","stringToJsRegex","aMatch","matchType1","matchType2","groups","CUSTOM_SPLIT_DELIMITER","TimeFormatter","timeZone","timestampFormat","dateTime","utc","customFormatter","resolveMemberTemplates","compositeName","replaceVariables","variableRegex","member","seriesMatch","matchResult","resolvedSeriesNames","aName","newName","escapedName","escapeStringForRegex","newNameEscaped","seriesName","seriesNameEscaped","resolveMemberAliasTemplates","scopedVars","getTemplateSrv","ApplyComposites","composites","compositesGlobalAliasingEnabled","globalRegexPattern","filteredMetrics","keepMetrics","clonedComposites","resolvedComposites","metricComposites","resolved","isTemplated","resolveCompositeTemplates","matchedMetrics","aComposite","showComposite","currentWorstSeries","templatedMembers","metrics","aMetric","seriesItem","showMembers","sanitizeUrl","clone","valueRounded","stats","itemIndex","ApplyGlobalRegexPattern","keptMetric","location","lodashIncludes","GetValueByOperator","calcs","now","getAllFormattedValueMappings","valueMappings","allFormattedValueMappings","allValueMappings","valueMapping","valueToTextMapping","isNullValueMap","valueAsNumber","valueToTextMappingAsNumber","addValueToTextMappingText","rangeToTextMapping","fromAsNumber","toAsNumber","addRangeToTextMappingText","t1","t2","mapping","MappingType","SpecialValueMatch","getValueMappingResult","vm","ValueToText","RangeToText","RegexToText","res","SpecialValue","Null","NaN","NullAndNaN","True","False","Empty","GetMappedValue","mappedValue","getMappedValue","resolveOverrideTemplates","template","MatchOverride","resolvedOverrides","anOverride","ProcessDataFrames","compositesEnabled","fieldConfig","globalClickthrough","globalClickthroughTabEnabled","globalClickthroughSanitizedEnabled","globalClickthroughCustomTargetEnabled","globalClickthroughCustomTarget","globalOperator","globalDecimals","globalDisplayMode","globalFillColor","globalThresholds","globalUnitFormat","globalShowLabel","globalShowValue","globalShowTimestamp","globalShowTimestampFormat","sortByDirection","sortByField","themeV1","themeV2","timeToInsert","newData","newFrame","meta","hasTimestamp","copiedField","aFieldValues","rowsOfField","fc","timeField","InsertTime","series","internalData","models","DataFrameToPolystat","aModel","ApplyGlobalFormatting","realGlobalFillColor","aSeries","dataValue","defaults","mappings","realColor","formatFunc","getValueFormat","ApplyOverrides","ApplyGlobalClickThrough","FilterByGlobalDisplayMode","regexPattern","regexVal","temp","extractedTxt","globalClickthroughNewTabEnabled","processDefaultClickThrough","compositeMetrics","dataLen","valueFields","newestTimestamp","aTimestamp","timestampIndex","getTime","valueField","valueFieldName","getFieldDisplayName","standardCalcs","reduceField","reducers","operatorValue","maxDecimals","unit","formattedValueToString","model","getComponentStyles","container","CompositeMetricItem","copySelectedMetricToClipboard","metric","aValue","navigator","clipboard","writeText","execCommand","HorizontalGroup","removeMetric","minWidth","updateMetric","updateMetricAlias","CompositeItem","composite","_setComposite","setDisplayMode","getDisplayMode","setComposite","allMetrics","newMetric","UUIDv4","currentMetrics","CompositeEditor","_setAnimationSpeed","_setCompositesEnabled","allComposites","updateComposite","removeComposite","compositeIndex","setCompositesEnabled","setAnimationSpeed","toggleState","GlobalThresholdEditor","setGlobalThresholds","globalThresholdsConfig","migrateDefaults","angular","compositeGlobalAliasingEnabled","columns","defaultClickThrough","defaultClickThroughNewTab","defaultClickThroughSanitize","fontAutoColor","fontAutoScale","hasRobotoFont","globalOperatorName","convertOperators","migratedThreshold","gradientEnabled","hexagonSortByDirection","hexagonSortByField","polygonBorderColor","polygonBorderSize","polygonGlobalFillColor","radiusAutoSize","rows","tooltipEnabled","tooltipPrimarySortField","tooltipSecondarySortField","tooltipTimestampEnabled","migrateOverrides","savedOverrides","seriesOverride","migrateValueAndRangeMaps","panel","mappingType","newValueMappings","valueMaps","convertOldAngularValueMappings","newRangeMappings","rangeMaps","newMappings","migrateComposites","savedComposites","memberIndex","buildInfo","plugin","PanelPlugin","currentThemeV1","currentThemeV2","cachedProcessedData","setCachedProcessedData","LoadingState","Done","setMigrationHandler","polystat","newDefaults","migratedOverrides","migratedComposites","newMaps","useFieldConfig","disableStandardOptions","FieldConfigProperty","Thresholds","Decimals","DisplayName","Max","Min","Links","NoValue","Unit","standardOptions","Mappings","setPanelOptions","builder","addBooleanSwitch","defaultValue","category","addNumberInput","placeHolder","integer","showIf","addSelect","addColorPicker","addTextInput","addUnitPicker","addCustomEditor","editor","setSuggestionsSupplier","getSuggestionsForData","dataSummary","ds","hasData","hasNumberField","getListAppender","pluginId","append"],"sourceRoot":""}